<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Zuul网关实现限流</title>
      <link href="/2023/05/21/Zuul%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E9%99%90%E6%B5%81/"/>
      <url>/2023/05/21/Zuul%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0%E9%99%90%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h1 id="spring-cloud-zuul-ratelimit"><a href="#spring-cloud-zuul-ratelimit" class="headerlink" title="spring-cloud-zuul-ratelimit"></a>spring-cloud-zuul-ratelimit</h1><p>RateLimiter是Google开源的实现了令牌桶算法的限流工具（速率限制器）。</p><p>Spring Cloud Zuul RateLimiter结合Zuul对RateLimiter进行了封装，通过实现ZuulFilter提供了服务限流功能</p><blockquote><p>官网：<a href="https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit">https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit</a></p></blockquote><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>在zuul服务引入坐标</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.marcosbarbero.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-zuul-ratelimit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置限流策略"><a href="#配置限流策略" class="headerlink" title="配置限流策略"></a>配置限流策略</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">ratelimit:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启限流功能</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">redis</span> <span class="comment">#限流数据的存储方式</span></span><br><span class="line">    <span class="attr">default-policy-list:</span></span><br><span class="line">      <span class="comment"># 所有服务在3秒内只能有1次请求且所有请求时间总和不得超过2秒</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">limit:</span> <span class="number">1</span> <span class="comment">#单位时间内请求次数限制</span></span><br><span class="line">        <span class="attr">quota:</span> <span class="number">2</span> <span class="comment">#单位时间内累计请求时间限制（秒），非必要参数</span></span><br><span class="line">        <span class="attr">refresh-interval:</span> <span class="number">3</span> <span class="comment">#单位时间（秒），默认60秒</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><h3 id="处理返回信息"><a href="#处理返回信息" class="headerlink" title="处理返回信息"></a>处理返回信息</h3><p>我们可能需要对触发限流的情况做监控、报警等，需要识别由限流导致的异常返回</p><ol><li><del>推荐使用默认的 <code>RateLimiterErrorHandler</code>，直接写自己需要的处理就行</del><ul><li>注意：RateLimiterErrorHandler无法捕获到限流异常信息429 TOO_MANY_REQUESTS，也就不能自定义异常返回信息</li></ul></li><li>zuul触发限流后会抛出 http 429，可以针对这个错误码对response包装</li><li>也可以在全局异常处理中，判断出现的异常是否是 <code>RateLimitExceededException</code></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.marcosbarbero.cloud.autoconfigure.zuul.ratelimit.support.RateLimitExceededException;</span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.context.RequestContext;</span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.exception.ZuulException;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ErrorController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ErrorHandlerController</span> <span class="keyword">implements</span> <span class="title class_">ErrorController</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getErrorPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/error&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RequestContext</span> <span class="variable">ctx</span> <span class="operator">=</span> RequestContext.getCurrentContext();</span><br><span class="line">        <span class="type">ZuulException</span> <span class="variable">exception</span> <span class="operator">=</span> (ZuulException) ctx.getThrowable();</span><br><span class="line">        <span class="keyword">if</span> (exception != <span class="literal">null</span> &amp;&amp; exception.getCause() <span class="keyword">instanceof</span> RateLimitExceededException) &#123;</span><br><span class="line">            <span class="comment">// 自定义返回封装</span></span><br><span class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_GATEWAY).body(<span class="string">&quot;请稍后再试~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 其他类型的eror</span></span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="string">&quot;服务异常&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="comment">#路由、重试等zuul其他配置省略</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">#限流</span></span><br><span class="line">  <span class="attr">ratelimit:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启限流功能</span></span><br><span class="line">    <span class="attr">key-prefix:</span> <span class="string">$&#123;spring.application.name&#125;-rate-limit</span> <span class="comment">#缓存key的前缀</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">REDIS</span> <span class="comment">#存储类型。可选REDIS、CONSUL、JPA等，老版本还有本地内存可选</span></span><br><span class="line">    <span class="attr">behind-proxy:</span> <span class="literal">true</span> <span class="comment">#开启则限流与业务访问是异步的，相当于rateLimitFilter先放过；默认是false</span></span><br><span class="line">    <span class="attr">policy-list:</span> <span class="comment">#指定服务策略</span></span><br><span class="line">      <span class="attr">myProject1:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">limit:</span> <span class="number">5</span> <span class="comment">#这种配置方式相当于：10分钟内允许5个请求访问/api/test/info接口</span></span><br><span class="line">          <span class="attr">refresh-interval:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">type:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">url_pattern=/api/test/info</span></span><br><span class="line">      <span class="attr">myProject2:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">limit:</span> <span class="number">3000</span></span><br><span class="line">          <span class="attr">refresh-interval:</span> <span class="number">1</span> <span class="comment">#更常见的配置是这种，1秒允许3k个，相当于配qps限制</span></span><br><span class="line">          <span class="attr">type:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">url_pattern=/api/test2/info</span>        </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">limit:</span> <span class="number">300</span></span><br><span class="line">          <span class="attr">refresh-interval:</span> <span class="number">1</span> <span class="comment">#如果同一个服务有多个需要限流的url，可以这样</span></span><br><span class="line">          <span class="attr">type:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">url_pattern=/api/test2/info2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL版本从5.5升级至5.7(win10)</title>
      <link href="/2022/06/23/MySQL%E7%89%88%E6%9C%AC%E4%BB%8E5-5%E5%8D%87%E7%BA%A7%E8%87%B35-7-win10/"/>
      <url>/2022/06/23/MySQL%E7%89%88%E6%9C%AC%E4%BB%8E5-5%E5%8D%87%E7%BA%A7%E8%87%B35-7-win10/</url>
      
        <content type="html"><![CDATA[<p>当前版本：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220623200143170.png" alt="image-20220623200143170"></p><p>升级后的版本：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624090800083.png" alt="image-20220624090800083"></p><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><ul><li>官网：<a href="https://dev.mysql.com/downloads/mysql/5.7.html">https://dev.mysql.com/downloads/mysql/5.7.html</a></li></ul><p>下载压缩包：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624083044966.png" alt="image-20220624083044966"></p><h2 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h2><p>将mysql5.5安装目录下的 <strong>data</strong> 目录备份：</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1、删除mysql5-5服务"><a href="#1、删除mysql5-5服务" class="headerlink" title="1、删除mysql5.5服务"></a>1、删除mysql5.5服务</h3><p>按键盘的 win+R—&gt;输入<code>services.msc</code> 后确定进入服务列表，找到现有 msql 服务并关闭服务：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220623200436400.png" alt="image-20220623200436400"></p><p>在cmd中输入：<code>mysqld -remove xxx</code> 将 mysql5.5 服务移除。xxx为要卸载的mysql服务，可以在服务中查看，我这里为 <strong>MySQL</strong></p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220623200506483.png" alt="image-20220623200506483"></p><h3 id="2、完全卸载mysql5-5"><a href="#2、完全卸载mysql5-5" class="headerlink" title="2、完全卸载mysql5.5"></a>2、完全卸载mysql5.5</h3><p>我这里使用 <a href="https://geekuninstaller.com/">geek</a> 的进行卸载，这个工具可以卸载软件后自动扫描注册表并提示删除</p><h3 id="3、配置my-ini"><a href="#3、配置my-ini" class="headerlink" title="3、配置my.ini"></a>3、配置my.ini</h3><p>在mysql5.7目录中创建 <code>my.ini</code> 文件，并配置如下信息（注意替换路径）：</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录，替换成你本地的路径</span></span><br><span class="line"><span class="attr">basedir</span>=D:\Java\MySQL\mysql-<span class="number">5.7</span>.<span class="number">38</span>-winx64\</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录，替换成你本地的路径</span></span><br><span class="line"><span class="attr">datadir</span>=D:\Java\MySQL\mysql-<span class="number">5.7</span>.<span class="number">38</span>-winx64\data\</span><br><span class="line"><span class="comment">#设置跳过密码直接进入mysql，需要重新mysql服务</span></span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><h3 id="4、配置环境变量"><a href="#4、配置环境变量" class="headerlink" title="4、配置环境变量"></a>4、配置环境变量</h3><p>删除mysql原5.5版本的环境变量：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624080905199.png" alt="image-20220624080905199"></p><p>新建5.7版本的环境变量：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624080833804.png" alt="image-20220624080833804"></p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624080934420.png" alt="image-20220624080934420"></p><h3 id="5、添加mysql5-7服务，并初始化"><a href="#5、添加mysql5-7服务，并初始化" class="headerlink" title="5、添加mysql5.7服务，并初始化"></a>5、添加mysql5.7服务，并初始化</h3><p>启动管理员模式下的CMD，并将路径切换至mysql下的bin目录，添加mysql5.7服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld --install mysql5.7</span><br></pre></td></tr></table></figure><p>使用 <code>mysqld --initialize-insecure --user=mysql</code> 进行初始化数据文件，然后输入 <code>net start mysql5.7</code> 再次启动mysql：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220623203152210.png" alt="image-20220623203152210"></p><h3 id="6、更改root账户密码"><a href="#6、更改root账户密码" class="headerlink" title="6、更改root账户密码"></a>6、更改root账户密码</h3><p>用下面命令进入  mysql 管理界面，因为上面在 <code>my.ini</code> 中设置了跳过密码，所以密码处不输入直接按下Enter：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624082005949.png" alt="image-20220624082005949"></p><p>更改 root 账户密码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改root密码</span></span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;1234&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and Host = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624082121254.png" alt="image-20220624082121254"></p><h3 id="7、更新my-ini"><a href="#7、更新my-ini" class="headerlink" title="7、更新my.ini"></a>7、更新my.ini</h3><p>注释掉 <code>my.ini</code> 中的配置 <code>skip-grant-tables</code>：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624082212167.png" alt="image-20220624082212167"></p><h3 id="8、迁移数据"><a href="#8、迁移数据" class="headerlink" title="8、迁移数据"></a>8、迁移数据</h3><p>先停止服务：<code>net stop mysql5.7</code></p><p>将之前备份的 5.5 版本中的数据(data)覆盖到 5.7 的 data 目录中：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624082658510.png" alt="image-20220624082658510"></p><p>重启 mysql 服务：<code>net start mysql5.7</code></p><p>进入到 mysql，查看现在的版本：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220623/image-20220624090551778.png" alt="image-20220624090551778"></p><p>完毕。</p><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.cnblogs.com/appium/p/12877499.html">https://www.cnblogs.com/appium/p/12877499.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置CentOS6.5静态ip导致xshell连接失败</title>
      <link href="/2022/05/15/%E9%85%8D%E7%BD%AECentOS6-5%E9%9D%99%E6%80%81ip%E5%AF%BC%E8%87%B4xshell%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5/"/>
      <url>/2022/05/15/%E9%85%8D%E7%BD%AECentOS6-5%E9%9D%99%E6%80%81ip%E5%AF%BC%E8%87%B4xshell%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>将CentOS6.5虚拟机配置为静态IP后，Xshell连接失败。</p><p>我本地ip：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ipconfig</span><br><span class="line">无线局域网适配器 WLAN:</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : DHCP HOST</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::acf9:f5ef:1ce:3bc1%7</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.0.102</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 192.168.0.1</span><br></pre></td></tr></table></figure><p>虚拟机配置的静态ip为 <code>192.168.56.101</code>，其可以正常访问外网和我本地主机：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Levi ~]<span class="comment"># ping baidu.com</span></span><br><span class="line">PING baidu.com (220.181.38.251) 56(84) bytes of data.</span><br><span class="line">64 bytes from 220.181.38.251: icmp_seq=1 ttl=128 time=41.1 ms</span><br><span class="line"></span><br><span class="line">[root@Levi ~]<span class="comment"># ping 192.168.0.102</span></span><br><span class="line">PING 192.168.0.102 (192.168.0.102) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.0.102: icmp_seq=1 ttl=128 time=1.11 ms</span><br></pre></td></tr></table></figure><p>虚拟机网络信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Levi ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">NM_CONTROLLED=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=<span class="built_in">yes</span></span><br><span class="line">PEERDNS=<span class="built_in">yes</span></span><br><span class="line">PEERROUTES=<span class="built_in">yes</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="built_in">yes</span></span><br><span class="line">IPV6INIT=no</span><br><span class="line">NAME=<span class="string">&quot;System eth0&quot;</span></span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">IPADDR=192.168.56.101</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.56.2</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在我本地电脑上配置：控制面板 -&gt; 网络和共享中心 -&gt; 更改适配器设置 -&gt; 右键 VMware Network Adapter <strong>VMnet8</strong> 进入<strong>属性</strong>设置</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220515/image-20220515152402465.png" alt="image-20220515152402465"></p><p>选中 <code>Internet 协议版本4(TCP/IPv4)</code> 点击 <code>属性</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220515/image-20220515152918800.png" alt="image-20220515152918800"></p><p>默认是自动获得IP地址，勾选 <code>使用下面的IP地址</code> 进行自定义IP：</p><ul><li>①配置IP地址，前三位同虚拟机系统的IP前三位相同，最后一位自定义</li><li>②中的配置系统自动补齐</li><li>③中的网关配置为和虚拟机系统的网关一致</li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220515/image-20220515153402322.png" alt="image-20220515153402322"></p><hr><p>配置后使用xshell重新连接虚拟机即可</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS6.5中yum源失效的解决方案</title>
      <link href="/2022/05/15/CentOS6.5%E4%B8%ADyum%E6%BA%90%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2022/05/15/CentOS6.5%E4%B8%ADyum%E6%BA%90%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在 CentOS6.5 上执行 <code>yum install gcc</code> 报错：<code>YumRepo Error: All mirror URLs are not using ftp, http[s] or file</code>。出现这个的原因是因为目前官方已经停止对CentOS6的支持。并且下架了包括官方所有的CentOS6源，目前阿里、163、清华等CentOS6源已无法使用。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1、备份，便于进行恢复</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p>2、下载新的 CentOS-Base.repo 到 <code>/etc/yum.repos.d/</code></p><p>我这里是CenOS6，其他版本可以在 <a href="https://mirrors.aliyun.com/repo/">https://mirrors.aliyun.com/repo/</a> 中找到对应的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># centos6</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo</span><br></pre></td></tr></table></figure><p>如果出现错误：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Levi ~]<span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo</span></span><br><span class="line">--2022-05-15 20:44:42--  https://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line">正在解析主机 mirrors.aliyun.com... 116.162.173.85, 116.153.65.218, 116.162.173.86, ...</span><br><span class="line">正在连接 mirrors.aliyun.com|116.162.173.85|:443... 已连接。</span><br><span class="line">错误: 证书通用名 “*.alicdn.com” 与所要求的主机名 “mirrors.aliyun.com” 不符。</span><br><span class="line">要以不安全的方式连接至 mirrors.aliyun.com，使用‘--no-check-certificate’。</span><br></pre></td></tr></table></figure><p>使用命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo</span><br></pre></td></tr></table></figure><p>3、运行 <code>yum makecache</code> 生成缓存</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Levi ~]<span class="comment"># yum makecache</span></span><br><span class="line">Loaded plugins: fastestmirror, security</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">http://mirrors.aliyun.com/centos/6/os/x86_64/repodata/repomd.xml: [Errno 14] PYCURL ERROR 22 - <span class="string">&quot;The requested URL returned error: 404 Not Found&quot;</span></span><br><span class="line">Trying other mirror.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>4、替换源文件配置</p><ol><li><p>非阿里云ECS用户会出现 Couldn’t resolve host ‘mirrors.cloud.aliyuncs.com’ 信息，不影响使用。用户也可自行修改相关配置: </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure></li><li><p>替换http成https</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i  <span class="string">&#x27;s/http/https/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure></li><li><p>替换版本，<code>$releasever</code> 替换6.5，6.5是我用的版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i  <span class="string">&#x27;s/$releasever/6.5/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure></li><li><p>替换centos为centos-vault</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i  <span class="string">&#x27;s/centos/centos-vault/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure></li></ol><p>5、执行 <code>yum clean all &amp;&amp; yum makecache</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Levi ~]<span class="comment"># yum clean all &amp;&amp; yum makecache</span></span><br><span class="line">Loaded plugins: fastestmirror, security</span><br><span class="line">Cleaning repos: base extras updates</span><br><span class="line">Cleaning up Everything</span><br><span class="line">Cleaning up list of fastest mirrors</span><br><span class="line">Loaded plugins: fastestmirror, security</span><br><span class="line">Determining fastest mirrors</span><br><span class="line">base                                                     | 3.7 kB     00:00     </span><br><span class="line">base/group_gz                                            | 226 kB     00:00     </span><br><span class="line">base/filelists_db                                        | 6.4 MB     00:01     </span><br><span class="line">base/primary_db                                          | 4.7 MB     00:00     </span><br><span class="line">base/other_db                                            | 2.8 MB     00:00     </span><br><span class="line">extras                                                   | 3.4 kB     00:00     </span><br><span class="line">extras/filelists_db                                      |  38 kB     00:00     </span><br><span class="line">extras/prestodelta                                       | 1.3 kB     00:00     </span><br><span class="line">extras/primary_db                                        |  37 kB     00:00     </span><br><span class="line">extras/other_db                                          |  51 kB     00:00     </span><br><span class="line">updates                                                  | 3.4 kB     00:00     </span><br><span class="line">updates/filelists_db                                     | 3.5 MB     00:00     </span><br><span class="line">updates/prestodelta                                      | 390 kB     00:00     </span><br><span class="line">updates/primary_db                                       | 5.4 MB     00:00     </span><br><span class="line">updates/other_db                                         |  74 MB     00:13   </span><br><span class="line">Metadata Cache Created</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://wiki.centos.org/zh/About/Product">https://wiki.centos.org/zh/About/Product</a></li><li><a href="https://developer.aliyun.com/mirror/centos?spm=a2c6h.13651102.0.0.3e221b11shelh6">https://developer.aliyun.com/mirror/centos?spm=a2c6h.13651102.0.0.3e221b11shelh6</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS6.5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用驱动人生后系统开机出现选择应急系统</title>
      <link href="/2022/04/24/%E4%BD%BF%E7%94%A8%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E5%90%8E%E7%B3%BB%E7%BB%9F%E5%BC%80%E6%9C%BA%E5%87%BA%E7%8E%B0%E9%80%89%E6%8B%A9%E5%BA%94%E6%80%A5%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/04/24/%E4%BD%BF%E7%94%A8%E9%A9%B1%E5%8A%A8%E4%BA%BA%E7%94%9F%E5%90%8E%E7%B3%BB%E7%BB%9F%E5%BC%80%E6%9C%BA%E5%87%BA%E7%8E%B0%E9%80%89%E6%8B%A9%E5%BA%94%E6%80%A5%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用驱动人生安装驱动后，系统重启就会出现下图情况：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220424/1650797217713.png" alt="65079721771"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1、使用 <code>Win+R</code> 快捷键 -&gt; 输入 <code>msconfig</code>，回车</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220424/1650763622830.png" alt="65076362283"></p><p>2、再弹出的窗口中，选择 <strong>引导</strong> 页签，删除 <strong>驱动人生应急启动</strong> 即可：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220424/1650763584317.png" alt="65076358431"></p><hr><p>参考：<a href="https://zhidao.baidu.com/question/1759620719166087268.html">https://zhidao.baidu.com/question/1759620719166087268.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nacos启动报错问题列表</title>
      <link href="/2022/02/27/nacos%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%97%E8%A1%A8/"/>
      <url>/2022/02/27/nacos%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="win下启动"><a href="#win下启动" class="headerlink" title="win下启动"></a>win下启动</h1><h2 id="Caused-by-java-net-UnknownHostException-jmenv-tbsite-net"><a href="#Caused-by-java-net-UnknownHostException-jmenv-tbsite-net" class="headerlink" title="Caused by: java.net.UnknownHostException: jmenv.tbsite.net"></a>Caused by: java.net.UnknownHostException: jmenv.tbsite.net</h2><h3 id="单机模式启动"><a href="#单机模式启动" class="headerlink" title="单机模式启动"></a>单机模式启动</h3><p>修改 <code>bin/</code> 目录下的 <code>startup.cmd</code> 文件，将 <code>set MODE=&quot;cluster&quot;</code> 一行改成 <code>set MODE=&quot;standalone&quot;</code>，然后再运行 <code>bin/startup.cmd</code></p><hr><p>参考：<a href="https://zifangsky.cn/1585.html">1</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装Nacos,初始化sql报错：index column size too large. the maximum column size is 767 bytes</title>
      <link href="/2022/02/27/%E5%AE%89%E8%A3%85Nacos-%E5%88%9D%E5%A7%8B%E5%8C%96sql%E6%8A%A5%E9%94%99%EF%BC%9Aindex-column-size-too-large-the-maximum-column-size-is-767-bytes/"/>
      <url>/2022/02/27/%E5%AE%89%E8%A3%85Nacos-%E5%88%9D%E5%A7%8B%E5%8C%96sql%E6%8A%A5%E9%94%99%EF%BC%9Aindex-column-size-too-large-the-maximum-column-size-is-767-bytes/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>安装 Nacos Windows，执行 <code>conf/nacos-mysql.sql</code> 初始化脚本时报错：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Index column size too large. The maximum column size is 767 bytes</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>对脚本进行修改，添加 <code>ROW_FORMAT=DYNAMIC</code>：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test (........) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 ROW_FORMAT<span class="operator">=</span><span class="keyword">DYNAMIC</span>;</span><br></pre></td></tr></table></figure><hr><p>参考：<a href="https://stackoverflow.com/questions/30761867/mysql-error-the-maximum-column-size-is-767-bytes">MySQL error: The maximum column size is 767 bytes</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA(首次安装)的常用设置</title>
      <link href="/2022/02/21/IDEA-%E9%A6%96%E6%AC%A1%E5%AE%89%E8%A3%85-%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/"/>
      <url>/2022/02/21/IDEA-%E9%A6%96%E6%AC%A1%E5%AE%89%E8%A3%85-%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>本文基于 IntelliJ IDEA v2019.3.4、Windows 10 环境</p></blockquote><p>进入配置页：</p><ol><li><p>首次安装完，可以在欢迎页直接进入：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221094336698.png" alt="image-20220221094336698"></p></li><li><p>如果错过了欢迎页，可以通过：<code>File</code> -&gt; <code>Settings...</code>，进入配置页：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221105340010.png" alt="image-20220221105340010"></p></li></ol><h1 id="字符编码设置：UTF-8"><a href="#字符编码设置：UTF-8" class="headerlink" title="字符编码设置：UTF-8"></a>字符编码设置：UTF-8</h1><p><code>Editor</code> -&gt; <code>File Encodings</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221094927287.png" alt="image-20220221094927287"></p><h1 id="编辑通用设置：控制字体-帮助"><a href="#编辑通用设置：控制字体-帮助" class="headerlink" title="编辑通用设置：控制字体+帮助"></a>编辑通用设置：控制字体+帮助</h1><p><code>Editor</code> -&gt; <code>General</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221095647945.png" alt="image-20220221095647945"></p><h1 id="自动导包设置"><a href="#自动导包设置" class="headerlink" title="自动导包设置"></a>自动导包设置</h1><p><code>Editor</code> -&gt; <code>General</code> -&gt; <code>Auto Import</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221100254085.png" alt="image-20220221100254085"></p><h1 id="通用编辑外貌设置：行号-分隔线"><a href="#通用编辑外貌设置：行号-分隔线" class="headerlink" title="通用编辑外貌设置：行号+分隔线"></a>通用编辑外貌设置：行号+分隔线</h1><p><code>Editor</code> -&gt; <code>General</code> -&gt; <code>Appearance</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221100845418.png" alt="image-20220221100845418"></p><h1 id="通用编辑补全设置"><a href="#通用编辑补全设置" class="headerlink" title="通用编辑补全设置"></a>通用编辑补全设置</h1><p><code>Editor</code> -&gt; <code>General</code> -&gt; <code>Code Completion</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221101318356.png" alt="image-20220221101318356"></p><h1 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h1><p>第一步：<code>Keymap</code> -&gt; <code>Main menu</code> -&gt; <code>Code</code> -&gt; <code>Completion</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221101617640.png" alt="image-20220221101617640"></p><p>第二步：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221102043303.png" alt="image-20220221102043303"></p><p>第三步：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221102201773.png" alt="image-20220221102201773"></p><p>第四步：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221102308631.png" alt="image-20220221102308631"></p><p>最后，点击 <code>Apply</code></p><h1 id="开发环境JDK设置"><a href="#开发环境JDK设置" class="headerlink" title="开发环境JDK设置"></a>开发环境JDK设置</h1><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221102615476.png" alt="image-20220221102615476"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221102701009.png" alt="image-20220221102701009"></p><h1 id="修改内存大小"><a href="#修改内存大小" class="headerlink" title="修改内存大小"></a>修改内存大小</h1><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221103413921.png" alt="image-20220221103413921"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221104622143.png" alt="image-20220221104622143"></p><h1 id="显示内存占用情况"><a href="#显示内存占用情况" class="headerlink" title="显示内存占用情况"></a>显示内存占用情况</h1><p>效果：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221104922959.png" alt="image-20220221104922959"></p><p>设置：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220221105025338.png" alt="image-20220221105025338"></p><hr><p>新版开启的方式：View -&gt; Apperance -&gt; Status Bar Widgets -&gt; Memory Indicator</p><h1 id="显示方法的注释"><a href="#显示方法的注释" class="headerlink" title="显示方法的注释"></a>显示方法的注释</h1><h2 id="调用方法时"><a href="#调用方法时" class="headerlink" title="调用方法时"></a>调用方法时</h2><p>Editor -&gt; General -&gt; Code Completion：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220225152336958.png" alt="image-20220225152336958"></p><h2 id="鼠标移至方法上时"><a href="#鼠标移至方法上时" class="headerlink" title="鼠标移至方法上时"></a>鼠标移至方法上时</h2><p>Editor -&gt; General：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20220225152531083.png" alt="image-20220225152531083"></p><hr><p>新版：File -&gt; Settings -&gt; Editor -&gt; Code Editing，勾选 Show quick documentation on hover</p><h1 id="其他常用设置"><a href="#其他常用设置" class="headerlink" title="其他常用设置"></a>其他常用设置</h1><blockquote><p>以下设置的操作环境：IntelliJ IDEA 2022.3.3</p></blockquote><h2 id="Git的commit使用独立窗口"><a href="#Git的commit使用独立窗口" class="headerlink" title="Git的commit使用独立窗口"></a>Git的commit使用独立窗口</h2><p><code>File -&gt; Settings -&gt; Version Control -&gt; Commit -&gt; Use non-modal commit interface</code>，取消勾选</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20230327155212306.png" alt="image-20230327155212306"></p><h2 id="显示Java面包屑导航"><a href="#显示Java面包屑导航" class="headerlink" title="显示Java面包屑导航"></a>显示Java面包屑导航</h2><p><code>File -&gt; Settings -&gt; Editor &gt; General &gt; Breadcrumbs</code>，勾选 <code>java</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20220221/image-20230327155638704.png" alt="image-20230327155638704"></p><h2 id="Force-Step-Into按钮没了"><a href="#Force-Step-Into按钮没了" class="headerlink" title="Force Step Into按钮没了"></a>Force Step Into按钮没了</h2><p>IDEA2022.3版本中Force Step Into按钮默认没有显示</p><p>TODO</p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐藏IDEA项目目录后面显示的文件路径地址</title>
      <link href="/2021/09/20/%E9%9A%90%E8%97%8FIDEA%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E5%90%8E%E9%9D%A2%E6%98%BE%E7%A4%BA%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E5%9C%B0%E5%9D%80/"/>
      <url>/2021/09/20/%E9%9A%90%E8%97%8FIDEA%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E5%90%8E%E9%9D%A2%E6%98%BE%E7%A4%BA%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境：win10、IDEA 2019.3</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>IDEA左侧的Project目录中，在项目名称后面显示了项目的文件路径地址：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210920/image-20210920151440109.png" alt="image-20210920151440109"></p><p>现在需要将其隐藏掉</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>选择：<code>Help</code>-&gt;<code>Edit Custom Properties...</code> 打开配置文件，添加以下配置：</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">project.tree.structure.show.url</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">ide.tree.horizontal.default.autoscrolling</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210920/image-20210920152200254.png" alt="image-20210920152200254"></p><p>保存更改后重启IDEA，就可以看见文件路径被隐藏了</p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cron的语法格式</title>
      <link href="/2021/09/13/Cron%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F/"/>
      <url>/2021/09/13/Cron%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Cron表达式"><a href="#Cron表达式" class="headerlink" title="Cron表达式"></a>Cron表达式</h1><blockquote><p>Cron表达式是一个字符串，包括6~7个时间元素，在SpringTask中可以用于指定任务的执行时间。</p></blockquote><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>Cron的语法格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Seconds Minutes Hours DayofMonth Month DayofWeek [Year]</span><br><span class="line">   秒      分     小时     日期     月份    星期      [年]</span><br><span class="line"></span><br><span class="line">例：0/2 * * * * ?、0 15 10 ? * 6L 2020-2021</span><br></pre></td></tr></table></figure><table><thead><tr><th>时间元素</th><th>允许值</th><th>允许的特殊字符</th></tr></thead><tbody><tr><td>秒(Seconds)</td><td>0~59的整数</td><td><code>, - * /</code></td></tr><tr><td>分(Minutes)</td><td>0~59的整数</td><td><code>, - * /</code></td></tr><tr><td>小时(Hours)</td><td>0~23的整数</td><td><code>, - * /</code></td></tr><tr><td>日期(DayofMonth)</td><td>1~31的整数</td><td><code>,- * ? / L W </code></td></tr><tr><td>月份(Month)</td><td>1~12的整数 或者 JAN-DEC</td><td><code>, - * /</code></td></tr><tr><td>星期(DayofWeek)</td><td>1~7的整数 或者 SUN-SAT 【1&#x3D;SUN】</td><td><code>, - * ? / L #</code></td></tr><tr><td>年(Year)【可为空】</td><td>1970~2099</td><td><code>, - * /</code></td></tr></tbody></table><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><table><thead><tr><th>字符</th><th>作用</th><th>举例</th></tr></thead><tbody><tr><td><code>,</code></td><td>列出枚举值</td><td>在Minutes域使用<code>5,10</code>，表示在5分和10分各触发一次</td></tr><tr><td><code>-</code></td><td>表示触发范围</td><td>在Minutes域使用<code>5-10</code>，表示从5分到10分钟每分钟触发一次</td></tr><tr><td><code>*</code></td><td>匹配任意值</td><td>在Minutes域使用<code>*</code>, 表示每分钟都会触发一次</td></tr><tr><td><code>/</code></td><td>起始时间开始触发，每隔固定时间触发一次</td><td>在Minutes域使用<code>5/10</code>,表示5分时触发一次，每10分钟再触发一次</td></tr><tr><td><code>?</code></td><td>在DayofMonth和DayofWeek中，用于匹配任意值</td><td>在DayofMonth域使用<code>?</code>,表示每天都触发一次</td></tr><tr><td><code>#</code></td><td>在DayofMonth中，确定第几个星期几</td><td><code>1#3</code>表示第三个星期日</td></tr><tr><td><code>L</code></td><td>表示最后</td><td>在DayofWeek中使用<code>5L</code>,表示在最后一个星期四触发</td></tr><tr><td><code>W</code></td><td>表示有效工作日(周一到周五)</td><td>在DayofMonth使用<code>5W</code>，如果5日是星期六，则将在最近的工作日4日触发一次</td></tr></tbody></table><blockquote><p><code>LW</code>连用，表示在某个月最后一个工作日，即最后一个星期五</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> SpringTask </tag>
            
            <tag> Cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Adobe Acrobat打开pdf文件,系统任务栏中其图标异常问题(win)</title>
      <link href="/2021/08/25/%E4%BD%BF%E7%94%A8Adobe-Acrobat%E6%89%93%E5%BC%80pdf%E6%96%87%E4%BB%B6-%E7%B3%BB%E7%BB%9F%E4%BB%BB%E5%8A%A1%E6%A0%8F%E4%B8%AD%E5%85%B6%E5%9B%BE%E6%A0%87%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98-win/"/>
      <url>/2021/08/25/%E4%BD%BF%E7%94%A8Adobe-Acrobat%E6%89%93%E5%BC%80pdf%E6%96%87%E4%BB%B6-%E7%B3%BB%E7%BB%9F%E4%BB%BB%E5%8A%A1%E6%A0%8F%E4%B8%AD%E5%85%B6%E5%9B%BE%E6%A0%87%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98-win/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境：win10<br>参考：<a href="https://zhidao.baidu.com/question/564521412432737964.html">百度知道</a></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用 Acrobat 打开pdf文件后，Acrobat 在win系统任务栏上面显示的图标异常：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210825/image-20210825113749515.png" alt="image-20210825113749515"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1.首先先关闭掉 Acrobat，然后在资源管理器打开此目录： <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</code>，找到 <code>Adobe Acrobat DC</code>，将其<strong>删除</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210825/image-20210825114024709.png" alt="image-20210825114024709"></p><p>2.找到 Acrobat 安装目录中找到启动程序并启动，就可以看到图标回复正常了</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210825/image-20210825115044500.png" alt="image-20210825115044500"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210825/image-20210825115343201.png" alt="image-20210825115343201"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe </tag>
            
            <tag> Acrobat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决SVN每次commit后文件属性都变为只读</title>
      <link href="/2021/08/20/%E8%A7%A3%E5%86%B3SVN%E6%AF%8F%E6%AC%A1commit%E5%90%8E%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E9%83%BD%E5%8F%98%E4%B8%BA%E5%8F%AA%E8%AF%BB/"/>
      <url>/2021/08/20/%E8%A7%A3%E5%86%B3SVN%E6%AF%8F%E6%AC%A1commit%E5%90%8E%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E9%83%BD%E5%8F%98%E4%B8%BA%E5%8F%AA%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境：win10、Eclipse Neno.2、TortoiseSVN 1.14.0、Subclipse 4.3.3(eclipse插件)</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>将svn中的项目的 <strong>Checkout</strong> 到本地使用eclipse开发过程中，发现每次 <strong>commit</strong> 后文件属性都变为 <strong>只读</strong> 属性，并且对刚刚提交后的文件进行编辑时就提示需要先锁定文件才能编辑</p><blockquote><p>笔者在eclipse中是使用的 Subclipse 对svn进行操作</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820111409567.png" alt="image-20210820111409567"></p></blockquote><p>commit后编辑文件提示需要锁定：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820112455733.png" alt="commit后编辑文件提示需要锁定"></p><p>文件属性变为只读：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820112646097.png" alt="image-20210820112646097"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1.在项目根目录中 <code>鼠标右键</code>-&gt;<code>TortoiseSVN</code>-&gt;<code>Properties</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820111954147.png" alt="image-20210820111954147"></p><p>2.在弹出的属性设置框中点击：<code>New</code>-&gt;<code>Needs-Lock</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820112148846.png" alt="image-20210820112148846"></p><p>3.选择 <code>No locking required</code>，点击 <code>OK</code> 即可解决</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210820/image-20210820112234887.png" alt="image-20210820112234887"></p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
            <tag> Eclispe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA格式化后注释无法和代码自动对齐</title>
      <link href="/2021/08/12/IDEA%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%90%8E%E6%B3%A8%E9%87%8A%E6%97%A0%E6%B3%95%E5%92%8C%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E5%AF%B9%E9%BD%90/"/>
      <url>/2021/08/12/IDEA%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%90%8E%E6%B3%A8%E9%87%8A%E6%97%A0%E6%B3%95%E5%92%8C%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E5%AF%B9%E9%BD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用idea对java代码进行格式化后，行注释靠在最左边没有和代码自动对齐：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210812/image-20210812150534134.png" alt="image-20210812150534134"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>打开设置窗口，依次选择 <code>Code Style -&gt; Java</code>，在右侧找到 <code>Comment af first column</code> 并取消其勾选状态即可解决</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210812/image-20210812150649391.png" alt="image-20210812150649391"></p><p>另外</p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse设置护眼背景色和字体颜色并导入导出</title>
      <link href="/2021/08/09/Eclipse%E8%AE%BE%E7%BD%AE%E6%8A%A4%E7%9C%BC%E8%83%8C%E6%99%AF%E8%89%B2%E5%92%8C%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E5%B9%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>/2021/08/09/Eclipse%E8%AE%BE%E7%BD%AE%E6%8A%A4%E7%9C%BC%E8%83%8C%E6%99%AF%E8%89%B2%E5%92%8C%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E5%B9%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境：Windows 10、Eclipse Neon.2<br>参考：<a href="https://jingyan.baidu.com/article/d5a880eb6c4f7813f147ccef.html">Eclipse详细设置护眼背景色和字体颜色并导出</a></p></blockquote><h1 id="修改背景色"><a href="#修改背景色" class="headerlink" title="修改背景色"></a>修改背景色</h1><p>打开首选项对话框：<code>Window</code> -&gt; <code>Preferences</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809105357568.png" alt="image-20210809105357568"></p><p>选择：General -&gt; Editors -&gt; Text Editors -&gt; Appearance color options -&gt; 点击 Background color，取消右侧 <em>Sstem Default</em> 的勾选状态，然后点击 <em>Color</em> 右侧的色块进行颜色选择</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809155818595.png" alt="image-20210809155818595"></p><p><strong>豆沙绿</strong>：</p><ul><li>色调：85</li><li>饱和度：120</li><li>亮度：208</li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809160219785.png" alt="image-20210809160219785"></p><h1 id="修改文字颜色"><a href="#修改文字颜色" class="headerlink" title="修改文字颜色"></a>修改文字颜色</h1><p>以Java编辑器为例</p><p>在首选项对话框中依次选择：Java -&gt; Editor -&gt; Syntax Coloring -&gt; 点击右侧的Java</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809160946646.png" alt="image-20210809160946646"></p><p>为了配合豆沙绿的背景色，代码颜色配色方案：</p><table style="border:1"><tr><th></th><th>描述</th><th>红(R)</th><th>绿(G)</th><th>蓝(U)</th><th>颜色</th><th>其他设置</th></tr><tbody><tr><td>Annotations</td><td>注释</td><td>107</td><td>147</td><td>186</td><td bgcolor="#6b93ba">浅蓝色</td><td></td></tr><tr><td>Brackets</td><td>符号</td><td>255</td><td>128</td><td>0</td><td bgcolor="#ff8000">橙色</td><td></td></tr><tr><td>Classes</td><td>类名</td><td>0</td><td>80</td><td>50</td><td bgcolor="#005032">深绿色</td><td>加粗</td></tr><tr><td>Deprecated members </td><td>弃用的成员</td><td>123</td><td>23</td><td>43</td><td bgcolor="#7b172b">咖啡色</td><td>中划线/加粗</td></tr><tr><td>Enums</td><td>枚举</td><td>128</td><td>0</td><td>255</td><td bgcolor="#8000ff">紫色</td><td></td></tr><tr><td>Fields</td><td>变量</td><td>128</td><td>0</td><td>128</td><td bgcolor="#800080">深紫色</td><td></td></tr><tr><td>Keyword 'return'</td><td>return关键字</td><td>255</td><td>0</td><td>85</td><td bgcolor="#ff0055">红色</td><td>加粗</td></tr><tr><td>Keyword excluding 'return'</td><td>其他关键字</td><td>207</td><td>46</td><td>125</td><td bgcolor="#cf2e7d">玫瑰红</td><td>加粗</td></tr><tr><td>Method declarations</td><td>方法定义</td><td>255</td><td>128</td><td>64</td><td bgcolor="#ff8040">橙色</td><td>加粗</td></tr><tr><td>Methods</td><td>方法</td><td>0</td><td>48</td><td>96</td><td bgcolor="#003060">深蓝</td><td></td></tr><tr><td>Numbers</td><td>数字</td><td>42</td><td>0</td><td>255</td><td bgcolor="#2a00ff">蓝色</td><td></td></tr><tr><td>Operators</td><td>运算符</td><td>255</td><td>128</td><td>0</td><td bgcolor="#ff8000">橙色</td><td></td></tr><tr><td>Others</td><td>其他</td><td>78</td><td>123</td><td>0</td><td bgcolor="#4e7b00">绿色</td><td></td></tr><tr><td>Static fields</td><td>静态变量</td><td>33</td><td>0</td><td>189</td><td bgcolor="#2100bd">蓝色</td><td>加粗</td></tr><tr><td>Strings</td><td>字符串</td><td>132</td><td>26</td><td>138</td><td bgcolor="#841a8a">紫色</td><td></td></tr></tbod></table><h1 id="导出设置"><a href="#导出设置" class="headerlink" title="导出设置"></a>导出设置</h1><p>选择：File -&gt; Export 进行导出操作</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809171729760.png" alt="image-20210809171729760"></p><p>在弹出框中，选择 <code>General -&gt; Preferences</code>，点击 <em>Next</em></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809171833100.png" alt="image-20210809171833100"></p><p>点击 <em>Browse</em>，输入文件名，点击 <em>Finish</em>，会导出一个以 <code>.epf</code> 结尾的配置文件</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809172733883.png" alt="image-20210809172733883"></p><blockquote><p>我导出的配置文件：<a href="https://tiancixiong.coding.net/s/642ea72a-85b5-486f-8c5f-411bf7faedd3">豆沙绿配置</a></p></blockquote><h1 id="导入设置"><a href="#导入设置" class="headerlink" title="导入设置"></a>导入设置</h1><p>选择：<code>File -&gt; Imprt</code> 进行导入操作</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809113354335.png" alt="image-20210809113354335"></p><p>在弹出框中，选择 <code>General -&gt; Preferences</code>，点击 <em>Next</em></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809113214183.png" alt="image-20210809113214183"></p><p>点击 <em>Browse</em> 选择之前导出的配置文件，点击 <em>Finish</em> 即可完成导入</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809113543890.png" alt="image-20210809113543890"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809113313664.png" alt="image-20210809113313664"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809113645784.png" alt="image-20210809113645784"></p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse设置编码格式</title>
      <link href="/2021/08/09/Eclipse%E8%AE%BE%E7%BD%AE%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/"/>
      <url>/2021/08/09/Eclipse%E8%AE%BE%E7%BD%AE%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>环境：Windows 10、Eclipse Neon.2</p></blockquote><p>eclipse每次新建一个工作空间后，都需要重新设置编码格式，否则在导入代码后很有可能会出现中文乱码的情况</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="修改工作空间默认编码"><a href="#修改工作空间默认编码" class="headerlink" title="修改工作空间默认编码"></a>修改工作空间默认编码</h2><p>打开首选项对话框：<code>Window</code> -&gt; <code>Preferences</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809105357568.png" alt="image-20210809105357568"></p><p>在首选项对话框左侧导航中找到：<code>General</code> -&gt; <code>Workspace</code><br>设置 <strong>Text file encoding</strong> 编码为 <strong>Other: UTF-8</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809110000773.png" alt="image-20210809110000773"></p><h2 id="修改某文件类型的编码"><a href="#修改某文件类型的编码" class="headerlink" title="修改某文件类型的编码"></a>修改某文件类型的编码</h2><p>在首选项对话框左侧导航中找到：<code>General</code> -&gt; <code>Content Types</code><br>点击右侧中的节点，在下面 <strong>Default encoding</strong> 中输入 <code>UTF-8</code>(不区分大小写)，点击 <strong>Update</strong>，<strong>把每个父节点和子节点都设置一下</strong>，都设置好后点击 <strong>OK</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809110627752.png" alt="image-20210809110627752"></p><h2 id="修改项目的编码"><a href="#修改项目的编码" class="headerlink" title="修改项目的编码"></a>修改项目的编码</h2><p>步骤：选择项目 -&gt; 右键 -&gt; Properties -&gt; Resource -&gt; 如果右侧的 <em>Text file encoding</em> 不是UTF-8格式，则需要设置为 <strong>UTF-8</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809140050394.png" alt="image-20210809140050394"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210809/image-20210809140137359.png" alt="image-20210809140137359"></p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA格式化代码后,方法顺序被改变</title>
      <link href="/2021/07/13/IDEA%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81%E5%90%8E-%E6%96%B9%E6%B3%95%E9%A1%BA%E5%BA%8F%E8%A2%AB%E6%94%B9%E5%8F%98/"/>
      <url>/2021/07/13/IDEA%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81%E5%90%8E-%E6%96%B9%E6%B3%95%E9%A1%BA%E5%BA%8F%E8%A2%AB%E6%94%B9%E5%8F%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><blockquote><p>IDEA版本：2019.3</p></blockquote><p>使用<code>IDEA</code>编写java代码时，使用 <code>Ctrl+Alt+L</code>(win) 格式化代码操作之后发现代码中的方法顺序被改变了：</p><p>格式化前：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210713/image-20210713114640170.png" alt="image-20210713114640170"></p><p>格式化后：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210713/image-20210713114315313.png" alt="image-20210713114315313"></p><blockquote><p>method01 被移动到 test01 上方</p></blockquote><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>使用 <code>Shift+Ctrl+Alt+L</code>(win) 进行格式化，在弹出的选项中取消 <code>Rearrange code</code> 的勾选即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210713/image-20210713114535526.png" alt="image-20210713114535526"></p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse在模块上右键没有gradle菜单选项</title>
      <link href="/2021/03/04/Eclipse%E5%9C%A8%E6%A8%A1%E5%9D%97%E4%B8%8A%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89gradle%E8%8F%9C%E5%8D%95%E9%80%89%E9%A1%B9/"/>
      <url>/2021/03/04/Eclipse%E5%9C%A8%E6%A8%A1%E5%9D%97%E4%B8%8A%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89gradle%E8%8F%9C%E5%8D%95%E9%80%89%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Eclipse：Neon.2 Release (4.6.2)<br>插件：Gradle IDE Pack 3.8.x+1.0.x<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304155359090.png" alt="image-20210304155359090"></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>正常情况下，在模块上右键弹出的菜单应该会有 <code>Gradle(STS)</code> 选项，可以用于gradle有关操作：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304153454671.png" alt="image-20210304153454671"></p><p>但是我今天更新代码后，项目模块的右键菜单上没有了 <code>Gradle(STS)</code> 选项：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304160049427.png" alt="image-20210304160049427"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在项目模块上右键，选择：<code>Configure</code>-&gt;<code>Convert to Gradle(STS) Project</code> 即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304160402238.png" alt="image-20210304160402238"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse右键team显示的是git菜单,怎么切换成svn菜单?</title>
      <link href="/2021/03/04/Eclipse%E5%8F%B3%E9%94%AEteam%E6%98%BE%E7%A4%BA%E7%9A%84%E6%98%AFgit%E8%8F%9C%E5%8D%95-%E6%80%8E%E4%B9%88%E5%88%87%E6%8D%A2%E6%88%90svn%E8%8F%9C%E5%8D%95/"/>
      <url>/2021/03/04/Eclipse%E5%8F%B3%E9%94%AEteam%E6%98%BE%E7%A4%BA%E7%9A%84%E6%98%AFgit%E8%8F%9C%E5%8D%95-%E6%80%8E%E4%B9%88%E5%88%87%E6%8D%A2%E6%88%90svn%E8%8F%9C%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>由于这个项目我同时使用了 <code>svn</code> 和 <code>git</code>，在 <strong>Import</strong> 新的模块后，右键中 <code>Team</code> 下的菜单全是 <strong>git</strong> 的功能，现在需要将其改成 <strong>svn选项</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304095602826.png" alt="image-20210304095602826"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1.先右键此模块，选择：<code>Team</code> -&gt; <code>Disconnect</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304095758102.png" alt="image-20210304095758102"></p><p>2.再右键此模块，选择：<code>Team</code> -&gt; <code>Share Project</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304095911702.png" alt="image-20210304095911702"></p><p>3.在弹出框中选择 <code>SVN</code>，点击 <strong>Next</strong>，点击 <strong>Finish</strong>，就完成了</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20210304/image-20210304095953177.png" alt="image-20210304095953177"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware中网络三种连接方式</title>
      <link href="/2021/01/05/VMware%E4%B8%AD%E7%BD%91%E7%BB%9C%E4%B8%89%E7%A7%8D%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F/"/>
      <url>/2021/01/05/VMware%E4%B8%AD%E7%BD%91%E7%BB%9C%E4%B8%89%E7%A7%8D%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="VMware中网络三种连接方式"><a href="#VMware中网络三种连接方式" class="headerlink" title="VMware中网络三种连接方式"></a>VMware中网络三种连接方式</h2><h3 id="1-桥接模式"><a href="#1-桥接模式" class="headerlink" title="1 桥接模式"></a>1 桥接模式</h3><p><strong>桥接模式</strong>(Bridged)：虚拟机是一台独立的电脑，直接连接到实际的网络上，与宿主机没有任何联系。</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1543535328477.png" alt="1543535328477"></p><h3 id="2-仅主机模式"><a href="#2-仅主机模式" class="headerlink" title="2 仅主机模式"></a>2 仅主机模式</h3><blockquote><p>这种方式下，虚拟机的网卡连接到宿主的 VMnet1 上，但系统并不为虚拟机提供任何路由服务，因此虚拟机只能和宿主机进行通信，而不能连接到实际网络上。</p></blockquote><p> <strong>仅主机模式</strong>(host-only)：虚拟机可以访问宿主机，宿主机无法访问虚拟机，虚拟机无法上网</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1543535410144.png" alt="1543535410144"></p><h3 id="3-NAT-模式"><a href="#3-NAT-模式" class="headerlink" title="3 NAT 模式"></a>3 NAT 模式</h3><blockquote><p>这种方式下，虚拟机的网卡连接到宿主的 VMnet8 上。此时系统的 VMWare NAT Service 服务就充当了路由器的作用，负责将虚拟机发到 VMnet8 的包进行地址转换之后发到实际的网络上，再将实际网络上返回的包进行地址转换后通过 VMnet8 发送给虚拟机。VMWare DHCP Service 负责为虚拟机提供 DHCP 服务。</p></blockquote><p><strong>NAT模式</strong>：</p><ul><li><p>虚拟机可以访问宿主机，宿主机可以访问虚拟机</p></li><li><p>此时宿主机相当于路由器，虚拟机可以通过宿主机上网</p></li><li><p>宿主机可以配置254个虚拟机</p></li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1543535431117.png" alt="1543535431117"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx停止后仍然生效(win)</title>
      <link href="/2020/12/24/nginx%E5%81%9C%E6%AD%A2%E5%90%8E%E4%BB%8D%E7%84%B6%E7%94%9F%E6%95%88(win)/"/>
      <url>/2020/12/24/nginx%E5%81%9C%E6%AD%A2%E5%90%8E%E4%BB%8D%E7%84%B6%E7%94%9F%E6%95%88(win)/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>今天在任务管理器中将nginx结束任务后，发现nginx服务无法停止</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201230135658712.png" alt="image-20201230135658712"></p><p>访问<code>http://127.0.0.1/</code>仍能看到欢迎页：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224154810411.png" alt="image-20201224154810411"></p><p>此时尝试使用命令<code>nginx.exe -s stop</code>停止服务发现报错：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224155307560.png" alt="image-20201224155307560"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>由于我本地的nginx有监听<strong>8099</strong>端口，所以使用 <code>netstat -ano | findstr &quot;8099&quot;</code> 查看占用<strong>8099</strong>端口的进程的PID</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224155124048.png" alt="image-20201224155124048"></p><p>拿到上面的PID，通过 <code>tasklist | findstr &quot;PID&quot;</code> 命令找到nginx进程信息</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224155205370.png" alt="image-20201224155205370"></p><p>然后通过 <code>taskkill /f /t /im nginx.exe</code> 结束nginx进程</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224155244186.png" alt="image-20201224155244186"></p><p>然后再次访问 <code>http://127.0.0.1/</code> 发现nginx服务已成功停止</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201224/image-20201224154830113.png" alt="image-20201224154830113"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse常用快捷键</title>
      <link href="/2020/12/03/Eclipse%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2020/12/03/Eclipse%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Ctrl"><a href="#Ctrl" class="headerlink" title="Ctrl"></a>Ctrl</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Ctrl</code> + <code>D</code></td><td>删除当前行<code>【常用】</code></td></tr><tr><td><code>Ctrl</code> + <code>E</code></td><td>TODO</td></tr><tr><td><code>Ctrl</code> + <code>G</code></td><td>搜索选中的元素的声明 TODO</td></tr><tr><td><code>Ctrl</code> (+<code>Shift</code>) + <code>K</code></td><td>快速向下[向上]查找选定的内容</td></tr><tr><td><code>Ctrl</code> + <code>L</code></td><td>跳到某行</td></tr><tr><td><code>Ctrl</code> + <code>M</code></td><td>编辑窗口最大化</td></tr><tr><td><code>Ctrl</code> + <code>O</code></td><td>显示类的大纲结构(类的方法和属性) <code>【常用】</code></td></tr><tr><td><code>Ctrl</code> + <code>Q</code></td><td>上一个编辑的位置</td></tr><tr><td><code>Ctrl</code> + <code>R</code></td><td>TODO</td></tr><tr><td><code>Ctrl</code> + <code>T</code></td><td>显示当前类(或光标所在类)的层次结构 TODO</td></tr><tr><td><code>Ctrl</code> + <code>1</code></td><td>快速修复[补全代码、] TODO <code>【常用】</code></td></tr><tr><td><code>Ctrl</code> + <code>2</code>，释放后按<code>L</code></td><td>自动补全代码</td></tr><tr><td><code>Ctrl</code> + <code>+</code></td><td>放大</td></tr><tr><td><code>Ctrl</code> + <code>-</code></td><td>缩小</td></tr><tr><td><code>Ctrl</code> + <code>/</code></td><td>(取消)注释光标所在行代码</td></tr><tr><td><code>Ctrl</code> + <code>F6</code></td><td>下一个编辑器</td></tr><tr><td><code>Ctrl</code> + <code>F7</code></td><td>下一个视图</td></tr><tr><td><code>Ctrl</code> + <code>F8</code></td><td>下一个透视图</td></tr></tbody></table><h2 id="Alt"><a href="#Alt" class="headerlink" title="Alt"></a>Alt</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Alt</code> + <code>/</code></td><td>TODO</td></tr><tr><td><code>Alt</code> + <code>Up/Down</code></td><td>上下移动选中的行</td></tr><tr><td><code>Alt</code> + <code>Left/Right</code></td><td>上一个(下一个)光标所在位置 TODO 描述</td></tr></tbody></table><h2 id="Shift"><a href="#Shift" class="headerlink" title="Shift"></a>Shift</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Shift</code> + <code>Enter</code></td><td>在当前行下插入空行，光标定位到新行</td></tr></tbody></table><h2 id="Ctrl-Alt"><a href="#Ctrl-Alt" class="headerlink" title="Ctrl + Alt"></a>Ctrl + Alt</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Ctrl</code> + <code>Alt</code> + <code>G</code></td><td>搜索选中的文本</td></tr><tr><td><code>Ctrl</code> + <code>Alt</code> + <code>H</code></td><td>快速查看被调用的层次 <code>【常用】</code></td></tr><tr><td><code>Ctrl</code> + <code>Alt</code> + <code>Up/Down</code></td><td>向 上&#x2F;下 拷贝选中的行 <code>【常用】</code></td></tr></tbody></table><h2 id="Ctrl-Shift"><a href="#Ctrl-Shift" class="headerlink" title="Ctrl + Shift"></a>Ctrl + Shift</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>F</code></td><td>格式化整个文档 &#x2F; 选中的代码 <code>【常用】</code></td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>G</code></td><td>查找(类、方法和属性)引用 TODO 类似 ctrl+alt+h</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>L</code></td><td>显示快捷键帮助</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>O</code></td><td>导包</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>P</code></td><td>跳转至匹配的括号</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>R</code></td><td>查找Java类文件「可使用 <code>*</code>、<code>?</code> 等通配符」(含class)</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>S</code></td><td>保存所有文件的修改操作</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>T</code></td><td>查找Java类文件「可使用 <code>*</code>、<code>?</code> 等通配符」(不含class)</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>X/Y</code></td><td>将选中的内容转为大&#x2F;小写</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>/</code> (+<code>\</code>)</td><td>添加(取消)块注释</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>Enter</code></td><td>在当前行上插入空行，光标定位到新行</td></tr><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>Up/Down</code></td><td>上一个&#x2F;下一个成员(成员对象或成员函数)</td></tr></tbody></table><h2 id="Alt-Shift"><a href="#Alt-Shift" class="headerlink" title="Alt + Shift"></a>Alt + Shift</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Alt</code> + <code>Shift</code> + <code>R</code></td><td>对 类名&#x2F;属性名&#x2F;方法名 重命名</td></tr><tr><td><code>Alt</code> + <code>Shift</code> + <code>T</code></td><td>显示重构菜单</td></tr></tbody></table><h2 id="Ctrl-Shift-Alt"><a href="#Ctrl-Shift-Alt" class="headerlink" title="Ctrl + Shift + Alt"></a>Ctrl + Shift + Alt</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>Ctrl</code> + <code>Shift</code> + <code>Alt</code> + &#96;&#96;</td><td></td></tr></tbody></table><h2 id="Debug调试"><a href="#Debug调试" class="headerlink" title="Debug调试"></a>Debug调试</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>F5</code></td><td>跟踪到方法中，当程序执行到某方法时，可以按【F5】键跟踪到方法中</td></tr><tr><td><code>F6</code></td><td>单步执行程序</td></tr><tr><td><code>F7</code></td><td></td></tr><tr><td><code>F8</code></td><td></td></tr><tr><td><code>Ctrl</code> + <code>R</code></td><td>运行至光标所在行</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="关键字自动补全"><a href="#关键字自动补全" class="headerlink" title="关键字自动补全"></a>关键字自动补全</h2><p>先输入关键字，再配合自动补全快捷键(<code>Alt</code> + <code>/</code>)，即可自动生成代码</p><table><thead><tr><th>关键字</th><th>介绍</th></tr></thead><tbody><tr><td><code>for</code></td><td>自动补全各式for代码</td></tr><tr><td><code>sysout</code></td><td>自动补全<code>System.out.println()</code></td></tr><tr><td><code>main</code></td><td>自动补全main函数</td></tr></tbody></table><p>在空白区域按补全快捷键(Alt + &#x2F;)，即可查看全部补全指令</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th>快捷键</th><th>介绍</th></tr></thead><tbody><tr><td><code>F2</code></td><td>重命名&#x2F;显示提示</td></tr><tr><td><code>F4</code></td><td>打开选中元素的类型继承结构</td></tr><tr><td><code>F11</code></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7设置静态IP并成功上网</title>
      <link href="/2020/11/08/CentOS7%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP%E5%B9%B6%E6%88%90%E5%8A%9F%E4%B8%8A%E7%BD%91/"/>
      <url>/2020/11/08/CentOS7%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP%E5%B9%B6%E6%88%90%E5%8A%9F%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境：</p><ul><li>VMware 15</li><li>CentOS 7.3.1611</li></ul></blockquote><h3 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h3><p>通过<code>ip addr</code>查看当前网卡的配置信息：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108092133554.png" alt="image-20201108092133554"></p><p>从图中可以看出, 当前设备网卡名称为： <strong>ens33</strong> (不同设备这个可能不同)，当前主机的ip为<strong>192.168.220.134</strong><br>CentOS7默认网卡设备文件存放于<code>/etc/sysconfig/network-scripts/</code>目录中，其中名为 <code>ifcfg-网卡名称</code> 的文件就是设备的默认网卡，我这里的网卡名为<code>ifcfg-ens33</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108092522876.png" alt="image-20201108092522876"></p><h3 id="配置网卡为静态IP"><a href="#配置网卡为静态IP" class="headerlink" title="配置网卡为静态IP"></a>配置网卡为静态IP</h3><p>通过<code>cat /etc/sysconfig/network-scripts/ifcfg-ens33</code>查看默认网卡设备配置信息：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;# 网卡类型为：以太网</span><br><span class="line">PROXY_METHOD=&quot;none&quot;# 代理方式：关闭状态</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;# 只是浏览器：否</span><br><span class="line">BOOTPROTO=&quot;dhcp&quot;# 网卡的引导协议：DHCP[中文名称: 动态主机配置协议]</span><br><span class="line">DEFROUTE=&quot;yes&quot;# 默认路由：是, 深入了解可以百度关键词 `默认路由` </span><br><span class="line">PEERDNS=&quot;yes&quot;# 是否允许DHCP获得的DNS覆盖本地的DNS</span><br><span class="line">PEERROUTES=&quot;yes&quot;# 是否从DHCP服务器获取用于定义接口的默认网关的信息的路由表条目</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;# 是否开启IPV4致命错误检测：否</span><br><span class="line">IPV6INIT=&quot;yes&quot;# IPV6是否自动初始化: 是[不会有任何影响, 现在还没用到IPV6]</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;# IPV6是否自动配置：是[不会有任何影响, 现在还没用到IPV6]</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;# IPV6是否可以为默认路由：是[不会有任何影响, 现在还没用到IPV6]</span><br><span class="line">IPV6_PEERDNS=&quot;yes&quot;</span><br><span class="line">IPV6_PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;# 是否开启IPV6致命错误检测：否</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;# IPV6地址生成模型：stable-privacy [这只一种生成IPV6的策略]</span><br><span class="line">NAME=&quot;ens33&quot;# 网卡物理设备名称</span><br><span class="line">UUID=&quot;f50c1acb-829e-4c6c-a9d7-3d9c5e6ea0d5&quot;# 通用唯一识别码,每一个网卡都会有,不能重复,否则两台linux只有一台网卡可用</span><br><span class="line">DEVICE=&quot;ens33&quot;# 网卡设备名称, 必须和 `NAME` 值一样</span><br><span class="line">ONBOOT=&quot;no&quot;# 是否开机启动,要想网卡开机就启动或通过 `systemctl restart network`控制网卡,必须设置为 `yes` </span><br></pre></td></tr></table></figure><p>通过<code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code>命令编辑 <strong>ifcfg-ens33</strong> 文件设置静态IP：</p><blockquote><p>设置网卡引导协议为 <code>静态</code></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=&quot;static&quot;</span><br></pre></td></tr></table></figure><blockquote><p>设置网卡启动方式为 <code>开机启动</code> 并且可以通过系统服务管理器 <code>systemctl</code> 控制网卡</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ONBOOT=&quot;yes&quot;</span><br></pre></td></tr></table></figure><blockquote><p>配置「IP&#x2F;子网掩码&#x2F;网关」</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">IPADDR=&quot;192.168.220.132&quot;# 指定静态IP</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;# 子网掩码</span><br><span class="line">GATEWAY=&quot;192.168.220.2&quot;# 网关</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：网关必须和虚机的网关地址一样，否则无法上网，网关可以在虚拟网络编辑器中找到</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108101030577.png" alt="image-20201108101030577"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108101049070.png" alt="image-20201108101049070"></p></blockquote><p>按住 <code>Esc</code> 输入 <code>Shift + :</code>  接着输入 <code>wq</code> 回车保存编辑并退出，设置完后通过<code>service network restart</code>命令重启网卡：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108093757485.png" alt="image-20201108093757485"></p><blockquote><p>这个时候如果是使用xshell之类工具连接着，则会断开连接，因为此时主机ip已经变为修改之后的地址，需修改xshell上配置的主机地址后再进行连接</p></blockquote><p>重启完成，查看此时的ip，发现修改成功：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108093944183.png" alt="image-20201108093944183"></p><h3 id="连上外网"><a href="#连上外网" class="headerlink" title="连上外网"></a>连上外网</h3><p>那么现在已经成功修改成静态ip了，但是通过 <code>ping baidu.com</code> 发现连不上外网：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108094037580.png" alt="image-20201108094037580"></p><p>这是因为当前CentOS还解析不了域名，我们需要修改 <code>ifcfg-ens33</code> 文件加入<strong>DNS</strong>解析</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DNS1=&quot;114.114.114.114&quot;# 114DNS</span><br><span class="line">DNS2=&quot;223.5.5.5&quot;# 阿里DNS</span><br></pre></td></tr></table></figure><blockquote><p><code>8.8.8.8</code> 是谷歌提供的DNS服务，国内无节点，不推荐</p></blockquote><p>通过<code>service network restart</code>重启网卡，通过<code>cat /etc/resolv.conf</code>命令可以看到设置的DNS解析已生效，然后再来ping百度，可以ping通：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201108/image-20201108094404164.png" alt="image-20201108094404164"></p><blockquote><p>如果还是ping不通，则可以换个DNS地址再试试</p></blockquote><hr><p>最终网卡设备配置详情表</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">PEERDNS=&quot;yes&quot;</span><br><span class="line">PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_PEERDNS=&quot;yes&quot;</span><br><span class="line">IPV6_PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;f50c1acb-829e-4c6c-a9d7-3d9c5e6ea0d5&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=&quot;192.168.220.132&quot;</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;</span><br><span class="line">GATEWAY=&quot;192.168.220.2&quot;</span><br><span class="line">DNS1=&quot;114.114.114.114&quot;</span><br><span class="line">DNS2=&quot;223.5.5.5&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA启动警告「OpenJDK 64-Bit Server VM warning」</title>
      <link href="/2020/10/31/IDEA%E5%90%AF%E5%8A%A8%E8%AD%A6%E5%91%8A%E3%80%8COpenJDK%2064-Bit%20Server%20VM%20warning%E3%80%8D/"/>
      <url>/2020/10/31/IDEA%E5%90%AF%E5%8A%A8%E8%AD%A6%E5%91%8A%E3%80%8COpenJDK%2064-Bit%20Server%20VM%20warning%E3%80%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>IDEA启动SpingBoot项目时警告：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended</span><br></pre></td></tr></table></figure><p>具体如下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201031/image-20201031104319352.png" alt="image-20201031104319352"></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>1.快捷键<code>Ctrl+Alt+S</code>；或选择IDEA左上角的菜单<code>File -&gt; Settings</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201031/image-20201031104815491.png" alt="image-20201031104815491"></p><p>2.搜索<code>async</code>，选择<code>Async Stack Traces</code>，将右侧面板中<code>Instrumenting agent (requires debugger restart)</code>前面的对勾去掉，保存设置</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201031/image-20201031105120705.png" alt="image-20201031105120705"></p><p>3.重启项目即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201031/image-20201031104459917.png" alt="image-20201031104459917"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马十次方微服务项目资源</title>
      <link href="/2020/10/30/%E9%BB%91%E9%A9%AC%E5%8D%81%E6%AC%A1%E6%96%B9%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E8%B5%84%E6%BA%90/"/>
      <url>/2020/10/30/%E9%BB%91%E9%A9%AC%E5%8D%81%E6%AC%A1%E6%96%B9%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">链接</th><th align="center">提取码</th></tr></thead><tbody><tr><td align="center"><a href="https://pan.baidu.com/s/10QZsnY1ltMb2T-17oD_okw">视频</a></td><td align="center"><code>java</code></td></tr><tr><td align="center"><a href="https://pan.baidu.com/s/1nk3F1JKODRpmQ4kf4aBmTg">资料</a></td><td align="center"><code>java</code></td></tr></tbody></table><blockquote><p>解压密码：<code>52studyit_com_20181111</code></p><p>后端源码：<a href="https://github.com/tiancixiong/tensquare">Github</a>、<a href="https://gitee.com/tiancixiong/tensquare">Gitee</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 十次方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10所有文件夹全变成只读</title>
      <link href="/2020/10/12/win10%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%A4%B9%E5%85%A8%E5%8F%98%E6%88%90%E5%8F%AA%E8%AF%BB/"/>
      <url>/2020/10/12/win10%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%A4%B9%E5%85%A8%E5%8F%98%E6%88%90%E5%8F%AA%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>系统环境：Windows 10 专业版_v1909_x64 </p></blockquote><p>今天突然发现自己电脑中C、D、E盘中所有<code>文件夹</code>的全变成了<code>只读</code>状态。并且无论怎么取消<strong>只读</strong>，点击确认后都会自动恢复<strong>只读</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012194422933.png" alt="image-20201012194422933"></p><p>但是所有<strong>文件夹</strong>里面的<code>文件</code>的属性并没有勾选<strong>只读</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012194539376.png" alt="image-20201012194539376"></p><p>网上搜索一波，有的说是<a href="https://answers.microsoft.com/zh-hans/windows/forum/all/win10%E4%B8%AD%E6%96%87%E4%BB%B6%E5%A4%B9%E8%87%AA/06943d12-2abe-4c48-9b5c-4d89c7bd1788">文件共享</a>的问题，又有说是权限的问题，这些都排除后问题还是没解决，一度以为电脑中了病毒</p><p>最后发现两篇文章：<a href="https://answers.microsoft.com/zh-hans/windows/forum/all/win10%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%AA%E8%AF%BB/c0d26438-1dab-4e90-b65b-e9cba94b071f">文章1</a>、<a href="https://answers.microsoft.com/zh-hans/windows/forum/windows_10-files/win10%E7%B3%BB%E7%BB%9F%E8%BF%99%E5%8D%8A%E4%B8%AA/fe97cf93-d88d-4e62-949b-98355e35ca8b">文章2</a>；原来属性中的<code>只读</code>有3种状态：</p><ul><li>实心小黑块<code>■</code>，就是我出现的情况</li><li>对勾<code>√</code>，这个才是正真选中了只读</li><li>空心框<code>□</code></li></ul><p>黑色方块并不是只读，黑色对勾才是只读。黑色方块只是表明，这个文件夹以及其子文件和子文件夹中允许存在具有只读属性的文件或子文件夹，并不说明这个文件夹本身只读。</p><hr><p>好吧，最后发现毛线问题都没有😬</p>]]></content>
      
      
      <categories>
          
          <category> win </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>everything无法搜索刚插入的硬盘中的文件</title>
      <link href="/2020/10/12/everything%E6%97%A0%E6%B3%95%E6%90%9C%E7%B4%A2%E5%88%9A%E6%8F%92%E5%85%A5%E7%9A%84%E7%A1%AC%E7%9B%98%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>/2020/10/12/everything%E6%97%A0%E6%B3%95%E6%90%9C%E7%B4%A2%E5%88%9A%E6%8F%92%E5%85%A5%E7%9A%84%E7%A1%AC%E7%9B%98%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在使用<code>everything</code>过程中，对于刚刚新增的文件或刚插入电脑的硬盘中的文件有时在<code>everything</code>中无法搜索到</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li><p>在菜单栏中选择：<code>工具 -&gt; 选项</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012095327410.png" alt="image-20201012095327410"></p></li><li><p>在选项中选择<code>索引 -&gt; 强制重建</code>，然后点击<code>确定</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012095626597.png" alt="image-20201012095626597"></p></li><li><p>此时everything会开始扫描磁盘重建索引，需稍等一会：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012095705343.png" alt="image-20201012095705343"></p></li><li><p>等到窗口下方出现<code>...个对象</code>就说明索引重建完成，再进行搜索就会发现有结果了</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201012/image-20201012095754237.png" alt="image-20201012095754237"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Everything </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装完svn后在bin目录中没有svn.exe文件</title>
      <link href="/2020/10/10/%E5%AE%89%E8%A3%85%E5%AE%8Csvn%E5%90%8E%E5%9C%A8bin%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%B2%A1%E6%9C%89svn-exe%E6%96%87%E4%BB%B6/"/>
      <url>/2020/10/10/%E5%AE%89%E8%A3%85%E5%AE%8Csvn%E5%90%8E%E5%9C%A8bin%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%B2%A1%E6%9C%89svn-exe%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>安装完<code>TortoiseSVN</code>后在<code>bin</code>目录中没有找到<code>svn.exe</code>文件</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>这是由于SVN在安装过程中默认不安装<code>command line client tools</code>，这时我们需要将其安装到本地</p><ol><li><p>双击执行TortoiseSVN的安装包</p></li><li><p>选择第一项<code>Modify</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201010/image-20201010161123665.png" alt="image-20201010161123665"></p></li><li><p>选择：<code>TortoiseSVN -&gt; command line client tools -&gt; Will beinstall on local hard drive</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201010/1598489923444.png" alt="1598489923444"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201010/1598489934814.png" alt="1598489934814"></p></li><li><p>点击<code>Next</code>重新安装即可解决</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20201010/image-20201010161647854.png" alt="image-20201010161647854"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse中Console无法显示全部日志问题</title>
      <link href="/2020/09/21/Eclipse%E4%B8%ADConsole%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%85%A8%E9%83%A8%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/21/Eclipse%E4%B8%ADConsole%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%85%A8%E9%83%A8%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><strong>Eclipse</strong><code>Console</code>控制台日志输出量大时，后面的日志会覆盖掉之前打印的日志，无法查看所有日志信息</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li><p>在Eclipse上面菜单中选择：Window -&gt; Preferences</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200921/1600681473284.png" alt="1600681473284"></p></li><li><p>选择：Run&#x2F;Debug -&gt; Console</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200921/1600681703431.png" alt="1600681703431"></p></li><li><p>取消<code>Limit console output</code>的勾选状态</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑连接手机热点无法访问github</title>
      <link href="/2020/08/17/%E7%94%B5%E8%84%91%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEgithub/"/>
      <url>/2020/08/17/%E7%94%B5%E8%84%91%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEgithub/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>电脑连接手机热点后无法访问<code>github.com</code>，<code>ping</code>一下发现<strong>请求超时</strong>：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200817/1598451310421.png" alt="1598451310421"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li><p>使用ip解析类网站获取ip地址，如下面使用<a href="https://tool.chinaz.com/dns/">站长之家Dns检测</a><code>github.com</code>的ip地址：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200817/1598451372729.png" alt="1598451372729"></p></li><li><p>选择一个ip地址设置到hosts文件中，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Windows中hosts位置：C:\Windows\System32\drivers\etc</span><br><span class="line">140.82.112.4 www.github.com</span><br><span class="line">140.82.112.4 github.com</span><br></pre></td></tr></table></figure></li><li><p>使用<code>ipconfig/flushdns</code>命令刷新DNS解析缓存<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200817/1598450604679.png" alt="1598450604679"></p></li></ol><p>以上，即可解决此类问题</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Xftp6上传文件显示状态错误</title>
      <link href="/2020/07/01/%E4%BD%BF%E7%94%A8Xftp6%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BA%E7%8A%B6%E6%80%81%E9%94%99%E8%AF%AF/"/>
      <url>/2020/07/01/%E4%BD%BF%E7%94%A8Xftp6%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BA%E7%8A%B6%E6%80%81%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在使用Xftp6上传文件到VMware中的CentOS6.5中时一直失败：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593579571191.png" alt="1593579571191"></p><p>网上说法是目录权限的问题</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>通过<code>chmod</code>命令修改目录权限。比如我现在需要将jdk安装包上传到CentOS下<code>/usr/local/java</code>目录下，现在就需要将<code>/usr/local/java</code>目录权限进行修改</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入上一级目录</span></span><br><span class="line">cd /usr/local</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改java目录权限</span></span><br><span class="line">chmod 777 java/</span><br></pre></td></tr></table></figure><p>再次进行上传，成功</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Xftp6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VMware15安装Linux(CentOS6.5)</title>
      <link href="/2020/07/01/%E4%BD%BF%E7%94%A8VMware15%E5%AE%89%E8%A3%85Linux-CentOS6-5/"/>
      <url>/2020/07/01/%E4%BD%BF%E7%94%A8VMware15%E5%AE%89%E8%A3%85Linux-CentOS6-5/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote><p>Window10_1909_x64<br>VMware_15.5.2<br>CentOS_6.5_x86</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>1、在VMware菜单中选择<code>文件 -&gt; 新建虚拟机</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593571534159.png" alt="1593571534159"></p><p>2、配置类型，选择<code>典型</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593571614446.png" alt="1593571614446"></p><p>3、选择<code>稍后安装操作系统</code>创建空白硬盘：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593571717592.png" alt="1593571717592"></p><p>4、选择安装<code>Linux</code>系统和<code>CentOS 6</code> 版本：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593571859883.png" alt="1593571859883"></p><p>5、选择虚拟机安装位置（自定义）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572138046.png" alt="1593572138046"></p><p>6、指定磁盘容量（默认）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572206291.png" alt="1593572206291"></p><p>7、硬件配置</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572250048.png" alt="1593572250048"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572422551.png" alt="1593572422551"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572563003.png" alt="1593572563003"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572729820.png" alt="1593572729820"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572799601.png" alt="1593572799601"></p><p>配置完成后点击选项卡下方<code>关闭</code>按钮，然后选择<code>完成</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593572880896.png" alt="1593572880896"></p><p>8、启动虚拟机</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573058113.png" alt="1593573058113"></p><p>9、选择安装项</p><ul><li><p>按<strong>Enter</strong>键选择第一项</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573138642.png" alt="1593573138642"></p></li><li><p>扩展：不同的选择解释</p><ul><li><strong>Install or upgrade an existing system</strong>：安装或升级现有系统（默认项），采用CentOS的图形安装程序</li><li>Install system with basic video driver：使用基本驱动安装程序。如果显卡等驱动不能成功安装时，可以使用此项</li><li>Rescue installed system：救援安装的系统。如果不能正常启动时，使用此项</li><li>Boot frome local drive：从本地驱动器启动</li><li>Memory test：内存测试</li></ul></li></ul><p>10、跳过检查</p><ul><li><p>使用<strong>Tab</strong>键选择<code>Skip</code>，Enter回车确认</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573424945.png" alt="1593573424945"></p></li><li><p>检查安装盘是否完整。一般不用检查，如果点击<strong>OK</strong>，比较耗时</p></li></ul><p>11、欢迎界面</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573543201.png" alt="1593573543201"></p><p>12、选择语言环境，选择<strong>简体中文</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573652720.png" alt="1593573652720"></p><p>13、选择键盘类型（默认）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573688278.png" alt="1593573688278"></p><p>14、选择存储设备</p><ul><li><p>选择<code>基本存储设备</code>（默认）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573804300.png" alt="1593573804300"></p></li><li><p>扩展：存储设备解释</p><ul><li>基本存储设备：作为安装空间的默认选择，适合哪些不知道应该选择哪个存储设备的用户</li><li>指定的存储设备：需要用户将系统安装指定到特定的存储设备上，可以是本地某个设备，当然也可以是SAN(存储局域网)。通过允许用户添加FCoE&#x2F;iSCSI&#x2F;zFCP磁盘，并且能够过滤掉安装程序应该忽略的设备</li></ul></li></ul><p>15、格式化硬盘</p><ul><li><p>选择<code>是，忽略所有数据</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593573868113.png" alt="1593573868113"></p></li></ul><p>16、设置网络（默认）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574014118.png" alt="1593574014118"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574084154.png" alt="1593574084154"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574147397.png" alt="1593574147397"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574223752.png" alt="1593574223752"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574264272.png" alt="1593574264272"></p><p>17、设置时区（默认）</p><ul><li><p>默认选择<code>亚洲/上海</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574345898.png" alt="1593574345898"></p></li></ul><p>18、设置密码</p><ul><li><p>Linux中根账号为<code>root</code>，因为是在虚拟机中安装用于自己操作学习，密码设置简单易记比较好，这里设置的是<code>123456</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574463669.png" alt="1593574463669"></p></li><li><p>密码设置要求</p><ul><li><p>至少六位数</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574544805.png" alt="1593574544805"></p></li><li><p>脆弱密码警告并非强制</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574598442.png" alt="1593574598442"></p></li></ul></li></ul><p>19、磁盘分区配置</p><p>19.1、选择安装类型</p><ul><li><p>可选<code>使用所有空间</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593574888016.png" alt="1593574888016"></p></li><li><p>扩展：各种配置解释</p><ul><li>使用所有空间（Use All Space ）：删除您硬盘上的所有分区（这包括如Windows的NTFS分区VFAT或其他操作系统创建的分区）</li><li>替换现有的Linux系统（Replace Existing Linux System）：以消除先前的Linux安装创建的分区。 这不会删除其他分区（如VFAT或FAT32分区），你可能对您的硬盘驱动器</li><li>缩小现有系统（Shrink Current System）：调整当前分区</li><li>使用剩余空间（Use Free Space）：保留您当前的数据和分区并安装在未使用的存储驱动器上。注意：必须保证有足够的可用空间</li><li>创建自定义布局（Create Custom Layout）： 手动存储设备进行分区并创建自定义布局</li></ul></li></ul><p>19.2、格式化，选择<code>将修改写入磁盘</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575004996.png" alt="1593575004996"></p><p>20、选择系统安装类型</p><ul><li><p>选择<code>Basic Server</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575114374.png" alt="1593575114374"></p></li><li><p>扩展：各类型解释</p><ul><li>Desktop：基本的桌面系统，包括常用的桌面软件，如文档查看工具</li><li>Minimal Desktop：基本的桌面系统，包含的软件更少</li><li>Minimal：基本的系统，不含有任何可选的软件包</li><li><strong>Basic Server</strong>：安装的基本系统的平台支持，不包含桌面</li><li>Database Server：基本系统平台，加上MySQL和PostgreSQL数据库，无桌面</li><li>Web Server：基本系统平台，加上PHP，Web server，还有MySQL和PostgreSQL数据库的客户端，无桌面</li><li>Virtual Host：基本系统加虚拟平台</li><li>Software Development Workstation：包含软件包较多，基本系统，虚拟化平台，桌面环境，开发工具</li></ul></li></ul><p>21、安装</p><ul><li><p>安装开始</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575280431.png" alt="1593575280431"></p></li><li><p>安装中</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575296377.png" alt="1593575296377"></p></li><li><p>安装完成，点击<code>重新引导</code>重启系统</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575580372.png" alt="1593575580372"></p></li></ul><p>22、登录</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593575894829.png" alt="1593575894829"></p><p>输入用户名回车<br>输入密码回车(注意Linux中输入的密码是看不见的)</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200701/1593576016775.png" alt="1593576016775"></p><p>登录成功</p><hr><p>至此，VMware安装CentOS大功告成  <em>★,°</em>:.☆(￣▽￣)&#x2F;$:<em>.°★</em> </p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何设置win10的视觉效果</title>
      <link href="/2020/06/29/%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEwin10%E7%9A%84%E8%A7%86%E8%A7%89%E6%95%88%E6%9E%9C/"/>
      <url>/2020/06/29/%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEwin10%E7%9A%84%E8%A7%86%E8%A7%89%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>1、在<strong>此电脑</strong>上<strong>右键</strong>，选择<code>属性</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200629/1593397487621.png" alt="1593397487621"></p><p>2、依次选择：<code>高级系统设置</code> -&gt; <code>高级</code> -&gt; 在<code>性能</code>下点击<strong>设置</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200629/1593397584628.png" alt="1593397584628"></p><p>3、在<code>视觉效果</code>选项卡下进行设置：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200629/1593397746787.png" alt="1593397746787"></p>]]></content>
      
      
      <categories>
          
          <category> 操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐藏win10资源管理器中显示的「DVD驱动器」</title>
      <link href="/2020/06/16/%E9%9A%90%E8%97%8Fwin10%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%AD%E6%98%BE%E7%A4%BA%E7%9A%84%E3%80%8CDVD%E9%A9%B1%E5%8A%A8%E5%99%A8%E3%80%8D/"/>
      <url>/2020/06/16/%E9%9A%90%E8%97%8Fwin10%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%AD%E6%98%BE%E7%A4%BA%E7%9A%84%E3%80%8CDVD%E9%A9%B1%E5%8A%A8%E5%99%A8%E3%80%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在win10中安装<strong>Microsoft系列</strong>软件后可能在<strong>资源管理器</strong>中显示一个<code>DVD 驱动器</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200616/1592289692587.png" alt="1592289692587"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1、在桌面左下角<code>win徽标</code>上<strong>右键</strong>选择<code>计算机管理</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200616/1592289792942.png" alt="1592289792942"></p><p>2、依次选择<code>设备管理器 -&gt; DVD/CD-ROM驱动器 -&gt; Microsoft虚拟DVD-ROM</code>，在<strong>Microsoft虚拟DVD-ROM</strong>上<strong>右键</strong>选择<code>卸载设备</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200616/1592289960238.png" alt="1592289960238"></p><p>3、确认卸载：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200616/1592290015284.png" alt="1592290015284"></p><p>4、重新打开资源管理器即可解决</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭win10安全警告「你要允许来自未知发布者的此应用对你的设备进行更改」</title>
      <link href="/2020/06/13/%E5%85%B3%E9%97%ADwin10%E5%AE%89%E5%85%A8%E8%AD%A6%E5%91%8A%E3%80%8C%E4%BD%A0%E8%A6%81%E5%85%81%E8%AE%B8%E6%9D%A5%E8%87%AA%E6%9C%AA%E7%9F%A5%E5%8F%91%E5%B8%83%E8%80%85%E7%9A%84%E6%AD%A4%E5%BA%94%E7%94%A8%E5%AF%B9%E4%BD%A0%E7%9A%84%E8%AE%BE%E5%A4%87%E8%BF%9B%E8%A1%8C%E6%9B%B4%E6%94%B9%E3%80%8D/"/>
      <url>/2020/06/13/%E5%85%B3%E9%97%ADwin10%E5%AE%89%E5%85%A8%E8%AD%A6%E5%91%8A%E3%80%8C%E4%BD%A0%E8%A6%81%E5%85%81%E8%AE%B8%E6%9D%A5%E8%87%AA%E6%9C%AA%E7%9F%A5%E5%8F%91%E5%B8%83%E8%80%85%E7%9A%84%E6%AD%A4%E5%BA%94%E7%94%A8%E5%AF%B9%E4%BD%A0%E7%9A%84%E8%AE%BE%E5%A4%87%E8%BF%9B%E8%A1%8C%E6%9B%B4%E6%94%B9%E3%80%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>win10在安装软件时弹出安全警告<code>你要允许来自未知发布者的此应用对你的设备进行更改?</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021454406.png" alt="1592021454406"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在<code>此电脑</code>上右键选择<code>属性</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021518749.png" alt="1592021518749"></p><p>选择<code>安全和维护</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021609863.png" alt="1592021609863"></p><p>选择<code>更改用户账户控制设置</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021656406.png" alt="1592021656406"></p><p>将左侧蓝色小块拉至最下面的<code>从不通知</code>，点击<code>确定</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021737973.png" alt="1592021737973"></p><p>选择<code>是</code>即可关闭安全警告：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592021836592.png" alt="1592021836592"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>远程桌面连接出错「用户账户限制会阻止你登录...」</title>
      <link href="/2020/06/13/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%87%BA%E9%94%99%E3%80%8C%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E9%99%90%E5%88%B6%E4%BC%9A%E9%98%BB%E6%AD%A2%E4%BD%A0%E7%99%BB%E5%BD%95-%E3%80%8D/"/>
      <url>/2020/06/13/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%87%BA%E9%94%99%E3%80%8C%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E9%99%90%E5%88%B6%E4%BC%9A%E9%98%BB%E6%AD%A2%E4%BD%A0%E7%99%BB%E5%BD%95-%E3%80%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在win10中使用远程桌面连接时出现<code>用户账户限制(例如，时间限制)会阻止你登录...</code>的错误问题：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592015949255.png" alt="1592015949255"></p><p>这是由于远程系统的用户密码为空，且默认只允许空白密码的本地账户进行控制台登录</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在远程系统中使用<code>win徽标+R</code>输入<code>secpol.msc</code>回车：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592016068917.png" alt="1592016068917"></p><p>在弹出窗口的左侧依次选择<code>本地策略 -&gt; 安全选项</code>，在右侧选中<code>帐户: 使用空白密码的本地帐户只允许进行控制台登录</code>双击进行编辑：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592016206795.png" alt="1592016206795"></p><p>选择<code>已禁用</code>，点击<code>确认</code>即可解决问题</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200613/1592016250361.png" alt="1592016250361"></p>]]></content>
      
      
      <categories>
          
          <category> win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装win10填过的坑</title>
      <link href="/2020/05/04/VMware%E5%AE%89%E8%A3%85win10%E5%A1%AB%E8%BF%87%E7%9A%84%E5%9D%91/"/>
      <url>/2020/05/04/VMware%E5%AE%89%E8%A3%85win10%E5%A1%AB%E8%BF%87%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p><strong>环境：</strong></p><blockquote><p>本地系统：Windows10_1909_x64<br>VMware：15.5.2</p></blockquote><h3 id="1-使用VMware12安装"><a href="#1-使用VMware12安装" class="headerlink" title="1.使用VMware12安装"></a>1.使用VMware12安装</h3><p><strong>问题：</strong>使用VMware12安装win10会出现错误页面<code>Your PC ran into a problem and needs to restart.We&#39;ll restart for you</code>，错误代码<code>KMODE EXCEPTION NOT HANDLED</code>，然后不断地重启报错。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588550782911.png" alt="58855078291"></p><p>网上的说法是VMware12对此版win10的显卡不支持，换用VMware14&#x2F;15进行安装</p><h3 id="2-此主机不支持64位…"><a href="#2-此主机不支持64位…" class="headerlink" title="2.此主机不支持64位…"></a>2.此主机不支持64位…</h3><p><strong>问题：</strong>新建虚拟机过程中报错<code>此主机不支持64位客户机操作系统，此系统无法运行。</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588567416288.png" alt="58856741628"></p><p>忽略它点击下一步新建好虚拟机后，在<code>开启此虚拟机</code>时就会报如下错误：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588567495639.png" alt="58856749563"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588567506791.png" alt="58856750679"></p><p><strong>原因：</strong>Windows10开启Hyper-V后与VMware Workstation冲突导致无法运行和新建虚拟机。但是本地电脑程序和功能中并没有开启<code>Hyper-V</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588571142149.png" alt="58857114214"></p><p><strong>解决：</strong></p><p>1、在本地电脑桌面左下角win徽标上<code>右键 -&gt; Windows PowerShell(管理员)(A)</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588550057671.png" alt="58855005767"></p><p>2、输入命令<code>bcdedit /set hypervisorlaunchtype off</code>回车</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588550118438.png" alt="58855011843"></p><p>3、重启电脑</p><p><strong>PS：</strong>如果要重新开启Hyper-V，只需执行<code>bcdedit /set hypervisorlaunchtype auto</code>命令并重启电脑即可</p><h3 id="3-出现Boot-Manager"><a href="#3-出现Boot-Manager" class="headerlink" title="3.出现Boot Manager"></a>3.出现Boot Manager</h3><p><strong>问题：</strong>点击<code>开启此虚拟机</code>后在运行界面出现<code>Boot Manager</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588567952212.png" alt="58856795221"></p><p><strong>解决：</strong><br>要重新新建虚拟机，在新建虚拟机向导页面中选择Windows版本时需选择<code>Windows 10</code>而不能选择<code>Windows 10 x64</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200504/1588568025346.png" alt="58856802534"></p><hr><p>参考：1.<a href="https://communities.vmware.com/thread/605548">Stop code: KMODE EXCEPTION NOT HANDLED</a>、2.<a href="https://www.cnblogs.com/-xuan/articles/10272846.html">vmware 和 hyper-v不兼容</a>、3.<a href="https://blog.csdn.net/qq_40519543/article/details/81478224">VMware14 虚拟机装win10 系统出现 BootManager</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google涂鸦游戏-Coding for Carrots</title>
      <link href="/2020/04/27/Google%E6%B6%82%E9%B8%A6%E6%B8%B8%E6%88%8F-Coding%20for%20Carrots/"/>
      <url>/2020/04/27/Google%E6%B6%82%E9%B8%A6%E6%B8%B8%E6%88%8F-Coding%20for%20Carrots/</url>
      
        <content type="html"><![CDATA[<p>今天（2020.04.27）的谷歌涂鸦：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200427/stay-and-play-at-home-with-popular-past-google-doodles-coding-2017-6753651837108765-law.gif" alt="tay-and-play-at-home-with-popular-past-google-doodles-coding-2017-6753651837108765-la"></p><blockquote><p>Doodle名称: <strong>Stay and Play at Home with Popular Past Google Doodles: Coding (2017)</strong><br>展示日期: <strong>2020.04.27</strong><br>展示地区：全球所有国家<br>Doodle的关键字: 风靡一时的 Google 涂鸦游戏<br>Doodle图像的链接: <a href="http://www.google.com/logos/doodles/2020/stay-and-play-at-home-with-popular-past-google-doodles-coding-2017-6753651837108765-law.gif">http://www.google.com/logos/doodles/2020/stay-and-play-at-home-with-popular-past-google-doodles-coding-2017-6753651837108765-law.gif</a></p></blockquote><p>点击进去是<strong>庆祝《Kids Coding（少儿编程）》问世 50 周年</strong>的编程游戏，挺有趣的</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200427/GoogleDoodle.gif" alt="oogleDoodl"></p><blockquote><p>游戏入口：<a href="https://www.google.com/doodles/celebrating-50-years-of-kids-coding">https://www.google.com/doodles/celebrating-50-years-of-kids-coding</a></p></blockquote><p>这个游戏总共有6关，每关需选择下方模块让下兔子吃掉全部的胡萝卜，其中用到模块的个数最少为最优方案。1~4挺简单的，5关稍作尝试也可以选出最优方案，第6关实际上挺难的。最后2关，都是只需要6个模块就能通关。</p><p>以下是第5、6关的解决方案。解决方案不止一种，以下仅供参考：</p><p><strong>第5关</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200427/1588031136170.png" alt="58803113617"></p><p><strong>第6关</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200427/1588031114031.png" alt="58803111403"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Chrome播放视频时只有声音没有画面</title>
      <link href="/2020/04/19/Chrome%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E6%97%B6%E5%8F%AA%E6%9C%89%E5%A3%B0%E9%9F%B3%E6%B2%A1%E6%9C%89%E7%94%BB%E9%9D%A2/"/>
      <url>/2020/04/19/Chrome%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E6%97%B6%E5%8F%AA%E6%9C%89%E5%A3%B0%E9%9F%B3%E6%B2%A1%E6%9C%89%E7%94%BB%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>win7下Chrome在线播放视频时只有声音，没有画面</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>打开Chrome，点击右上角菜单，选择<code>设置 -&gt; 高级 -&gt; 系统 </code>，取消<code>使用硬件加速模式（如果可用）</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200419/1587289569038.png" alt="1587289569038"></p><p>重启Chrome即可</p><h1 id="另"><a href="#另" class="headerlink" title="另"></a>另</h1><p>如果Chrome所有页面全部黑屏，原因应该是因为显卡驱动没有支持新版本Chrome的GPU加速，此时需要通过命令行关闭Chrome浏览器的GPU加速</p><p>1、找到Chrome安装目录，默认是在<code>C:\Program Files (x86)\Google\Chrome\Application</code>目录下打开黑窗口</p><p>2、输入命令：<code>chrome.exe -disable-gpu</code>可暂时关闭GPU加速打开Chrome</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200419/20200419.gif" alt="20200419.gif"></p><p>3、然后在Chrome菜单中选择<code>设置 -&gt; 高级 -&gt; 系统</code>，取消<code>使用硬件加速模式（如果可用）</code><br>4、重启Chrome即可</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装VMware时警告此产品安装程序不支持降级</title>
      <link href="/2020/04/18/%E5%AE%89%E8%A3%85VMware%E6%97%B6%E8%AD%A6%E5%91%8A%E6%AD%A4%E4%BA%A7%E5%93%81%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E4%B8%8D%E6%94%AF%E6%8C%81%E9%99%8D%E7%BA%A7/"/>
      <url>/2020/04/18/%E5%AE%89%E8%A3%85VMware%E6%97%B6%E8%AD%A6%E5%91%8A%E6%AD%A4%E4%BA%A7%E5%93%81%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E4%B8%8D%E6%94%AF%E6%8C%81%E9%99%8D%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在卸载<strong>VMware15</strong>后重新安装<strong>VMware12</strong>时报错：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200418/1587191075686.png" alt="1587191075686"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>下载<code>Windows Installer Clean Up</code>：</p><table><thead><tr><th>链接</th><th>解压密码</th></tr></thead><tbody><tr><td><a href="https://ww.lanzous.com/ibl0g8b">Windows Installer Clean Up</a></td><td>xiongtianci.com</td></tr></tbody></table><p>以管理员身份进行安装，默认安装路径为<code>C:\Program Files (x86)\Windows Installer Clean Up</code>，以管理员身份运行<code>msicuu.exe</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200418/1587191376387.png" alt="1587191376387"></p><p>选中带<code>VMware</code>字样的的程序，然后点击<code>Remove</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200418/1587255030668.png" alt="1587255030668"></p><p>最后重启电脑，再安装VMware时就不会警告了</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10关机时提示需要结束程序</title>
      <link href="/2020/04/13/win10%E5%85%B3%E6%9C%BA%E6%97%B6%E6%8F%90%E7%A4%BA%E9%9C%80%E8%A6%81%E7%BB%93%E6%9D%9F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2020/04/13/win10%E5%85%B3%E6%9C%BA%E6%97%B6%E6%8F%90%E7%A4%BA%E9%9C%80%E8%A6%81%E7%BB%93%E6%9D%9F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>win10系统关机时被提示需要结束程序：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200413/1586737763993.png" alt="1586737763993"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>1、按下<code>win徽标+R</code>，输入<code>gpedit.msc</code>回车</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200413/1586738625213.png" alt="1586738625213"></p><p>2、选择<code>计算机配置 -&gt; 管理模块 -&gt; 系统 -&gt; 关机选项</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200413/1586737998164.png" alt="1586737998164"></p><p>3、右键<code>关闭会阻止或取消关机的应用程序的自动终止功能</code>，选择<code>编辑</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200413/1586738189588.png" alt="1586738189588"></p><p>4、选择<code>已禁用</code>，然后点击<code>确定</code>即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200413/1586738194758.png" alt="1586738194758"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA2019.3在Plugins中搜索不到translation</title>
      <link href="/2020/04/05/IDEA2019-3%E5%9C%A8Plugins%E4%B8%AD%E6%90%9C%E7%B4%A2%E4%B8%8D%E5%88%B0translation/"/>
      <url>/2020/04/05/IDEA2019-3%E5%9C%A8Plugins%E4%B8%AD%E6%90%9C%E7%B4%A2%E4%B8%8D%E5%88%B0translation/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>今天安装了IDEA2019.03版本，在安装插件时搜索不到插件：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200405/1586072781828.png" alt="1586072781828"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>点击右上角的齿轮选择<code>HTTP Proxy Settings...</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200405/1586072933731.png" alt="1586072933731"></p><p>勾选上第二项<code>Auto-detect proxy settings</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200405/1586073012340.png" alt="1586073012340"></p><p>点击<code>OK</code>，然后关闭IDEA设置页后重新打开设置页搜索<code>Translation</code>即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200405/1586073156108.png" alt="1586073156108"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁用win10自动更新</title>
      <link href="/2020/04/04/%E7%A6%81%E7%94%A8win10%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
      <url>/2020/04/04/%E7%A6%81%E7%94%A8win10%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本方法还在测试中，不确定是否适用于不同品牌的电脑</p></blockquote><blockquote><p>电脑：Dell Inspiron<br>系统：Window10_x64_1909<br>测试时间：2020.04.04</p></blockquote><p>下载工具：</p><table><thead><tr><th align="center">链接</th><th align="center">提取码</th></tr></thead><tbody><tr><td align="center"><a href="http://t.cn/A6ZQk5bR">关闭或禁用windows自动更新工具</a></td><td align="center">win10</td></tr></tbody></table><p>下载后右键以管理员身份打开：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200404/1585965726319.png" alt="1585965726319"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200404/1585965771319.png" alt="1585965771319"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20200404/1585965825512.png" alt="1585965825512"></p><p>点击<code>关闭Windows更新</code>，然后重启电脑即可生效</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git修改已提交的commit注释</title>
      <link href="/2019/11/12/Git%E4%BF%AE%E6%94%B9%E5%B7%B2%E6%8F%90%E4%BA%A4%E7%9A%84commit%E6%B3%A8%E9%87%8A/"/>
      <url>/2019/11/12/Git%E4%BF%AE%E6%94%B9%E5%B7%B2%E6%8F%90%E4%BA%A4%E7%9A%84commit%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="1、修改commit注释"><a href="#1、修改commit注释" class="headerlink" title="1、修改commit注释"></a>1、修改commit注释</h1><h2 id="1-1、修改最后一次commit注释"><a href="#1-1、修改最后一次commit注释" class="headerlink" title="1.1、修改最后一次commit注释"></a>1.1、修改最后一次commit注释</h2><p>通过<code>git log</code>查看提交历史信息：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191112/1573523143139.png" alt="1573523143139"></p><p>输入命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><p>进入修改注释界面：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191112/1573522695253.png" alt="1573522695253"></p><p>第一行就是最后一次commit的注释信息，按<code>i</code>键进行编辑状态，修改注释信息后按<code>Esc</code>后再按<code>:wq</code>保存并退出</p><p>再次通过<code>git log</code>查看，注释信息由<strong>add test.txt</strong>修改为<strong>新增test.txt</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191112/1573523236683.png" alt="1573523236683"></p><h2 id="1-2、修改多次commit注释"><a href="#1-2、修改多次commit注释" class="headerlink" title="1.2、修改多次commit注释"></a>1.2、修改多次commit注释</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># n：需要修改的最近n此commit</span></span><br><span class="line">git rebase -i HEAD~n</span><br></pre></td></tr></table></figure><p>比如我想要修改最近3次注释信息就使用<code>git rebase -i HEAD~3 </code>，显示下面内容：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191112/1573523831856.png" alt="1573523831856"></p><blockquote><p>这上面一行就是一次commit历史，按照提交的顺序进行排序，最下面的一行为最后一次commit</p></blockquote><p>按<code>i</code>进行编辑，需要修改那个注释，就将其前面的<code>pick</code>修改为<code>edit</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191112/1573524177642.png" alt="1573524177642"></p><blockquote><p>上面为修改第1行和第3行的注释信息</p></blockquote><p>然后按<code>Esc</code>后再按<code>:wq</code>保存并退出</p><p>此时输入一下命令编辑第1条commit注释：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><p>编辑注释信息(按<code>i</code>进入编辑状态，按<code>Esc</code>和<code>:wq</code>保存并退出)，此时分支变为<code>master|REBASE-i 1/3</code>；再输入下面信息进行保存：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><p>此时分支变为<code>master|REBASE-i 3/3</code>，现在只修改完第1条commit</p><p>再通过<code>git commit --amend</code>和<code>git rebase --continue</code>修改第3条后分支状态变回<code>master</code>并提示<code>Successfully rebased and updated refs/heads/master.</code>说明已修改完成</p><h1 id="2、提交到远程仓库"><a href="#2、提交到远程仓库" class="headerlink" title="2、提交到远程仓库"></a>2、提交到远程仓库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 强制更新到远程仓库</span></span><br><span class="line">git push -f remote branch</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决IDEA中安装CodeGlance插件后不起作用问题</title>
      <link href="/2019/11/11/%E8%A7%A3%E5%86%B3IDEA%E4%B8%AD%E5%AE%89%E8%A3%85CodeGlance%E6%8F%92%E4%BB%B6%E5%90%8E%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2019/11/11/%E8%A7%A3%E5%86%B3IDEA%E4%B8%AD%E5%AE%89%E8%A3%85CodeGlance%E6%8F%92%E4%BB%B6%E5%90%8E%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>IDEA安装<code>CodeGlance</code>插件后不起作用</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191111/1573481644955.png" alt="1573481644955"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>一、查看IDEA中是否已安装了<code>CodeGlance</code></p><p>Ctrl+Alt+S -&gt; Plugins -&gt; 搜索<code>CodeGlance</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191111/1573480165020.png" alt="1573480165020"></p><p>二、Settings -&gt; 搜索<code>CodeGlance</code> -&gt; 取消勾选<code>Disabled</code> -&gt; 点击<code>OK</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191111/1573481583021.png" alt="1573481583021"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> CodeGlance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中使用vim编辑文件时报错E325:ATTETION</title>
      <link href="/2019/11/09/Linux%E4%B8%AD%E4%BD%BF%E7%94%A8vim%E7%BC%96%E8%BE%91%E6%96%87%E4%BB%B6%E6%97%B6%E6%8A%A5%E9%94%99E325-ATTETION/"/>
      <url>/2019/11/09/Linux%E4%B8%AD%E4%BD%BF%E7%94%A8vim%E7%BC%96%E8%BE%91%E6%96%87%E4%BB%B6%E6%97%B6%E6%8A%A5%E9%94%99E325-ATTETION/</url>
      
        <content type="html"><![CDATA[<p>在CentOS下使用<code>vim</code>编辑文件时出现<code>E325：ATTENTION</code>的警告。</p><p>这是由于在编辑该文件的时候异常退出了，因为<code>vim</code>在编辑文件时会创建一个交换文件<code>swap file</code>以保证文件的安全性。</p><p>删除这个<code>swp</code>文件即可去除警告</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看此目录下全部文件，找到swp文件</span></span><br><span class="line"><span class="built_in">ls</span> -a</span><br><span class="line"><span class="comment"># 删除此swp文件即可</span></span><br><span class="line"><span class="built_in">rm</span> -rf 文件.swp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>查看IDEA中已安装的plugin插件</title>
      <link href="/2019/11/03/%E6%9F%A5%E7%9C%8BIDEA%E4%B8%AD%E5%B7%B2%E5%AE%89%E8%A3%85%E7%9A%84plugin%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/11/03/%E6%9F%A5%E7%9C%8BIDEA%E4%B8%AD%E5%B7%B2%E5%AE%89%E8%A3%85%E7%9A%84plugin%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>Settings -&gt; Plugins -&gt; 在Show下拉框中选中<code>Custom</code>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191103/1572766987018.png" alt="1572766987018"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git.io设置GitHub项目的短链接</title>
      <link href="/2019/11/02/%E4%BD%BF%E7%94%A8git-io%E8%AE%BE%E7%BD%AEGitHub%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%9F%AD%E9%93%BE%E6%8E%A5/"/>
      <url>/2019/11/02/%E4%BD%BF%E7%94%A8git-io%E8%AE%BE%E7%BD%AEGitHub%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%9F%AD%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>工具：</p></blockquote><p>在桌面或目录中右键 -&gt; Git Bash Here</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191102/1572697736879.png" alt="1572697736879"></p><p>输入命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># url为github项目地址</span></span><br><span class="line"><span class="comment"># code为短链码</span></span><br><span class="line">curl -i https://git.io -F url=<span class="string">&quot;https://github.com/tiancixiong&quot;</span> -F <span class="string">&quot;code=tianci&quot;</span></span><br></pre></td></tr></table></figure><p>访问地址：<a href="https://git.io/tianci">https://git.io/tianci</a></p><p>一个url只能对应一个code，如果你想多个code，那就在url上加参数：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -i https://git.io -F url=<span class="string">&quot;https://github.com/tiancixiong?v=1&quot;</span> -F <span class="string">&quot;code=xiong&quot;</span></span><br></pre></td></tr></table></figure><p>访问地址：<a href="https://git.io/xiong">https://git.io/xiong</a></p><p>如果出现<code>&quot;XXX&quot; already is</code>表明此短链已被抢先注册：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191102/1572698632702.png" alt="1572698632702"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>启动项目报错：The Tomcat connector configured to listen on port 8080 failed to start.</title>
      <link href="/2019/11/02/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99%EF%BC%9AThe-Tomcat-connector-configured-to-listen-on-port-8080-failed-to-start/"/>
      <url>/2019/11/02/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99%EF%BC%9AThe-Tomcat-connector-configured-to-listen-on-port-8080-failed-to-start/</url>
      
        <content type="html"><![CDATA[<p>启动SpringBoot项目，报错：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">Caused by: java.net.BindException: Address already in use: bind</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>错误描述：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.</span><br></pre></td></tr></table></figure><p>意思就是说<code>8080</code>端口一直被占用着，从而无法启动项目。此时很懵啊，因为本地并没有其他项目跑着…</p><p><strong>解决</strong>：</p><ol><li><p>cmd打开黑窗口，输入下面指令显示所有端口和PID进程ID</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure></li><li><p>找到8080端口对应的PID，通过<code>tasklist</code>指令找到对应的进程</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist | findstr <span class="string">&quot;7676&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过杀死此进程</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill /f /t /im java.exe </span><br></pre></td></tr></table></figure></li></ol><p>转载：<a href="https://blog.csdn.net/q343509740/article/details/80821409">https://blog.csdn.net/q343509740/article/details/80821409</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Postman测试上传图片接口报错：the request was rejected because no multipart boundary was found</title>
      <link href="/2019/11/02/%E4%BD%BF%E7%94%A8Postman%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%8E%A5%E5%8F%A3%E6%8A%A5%E9%94%99%EF%BC%9Athe-request-was-rejected-because-no-multipart-boundary-was-found/"/>
      <url>/2019/11/02/%E4%BD%BF%E7%94%A8Postman%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%8E%A5%E5%8F%A3%E6%8A%A5%E9%94%99%EF%BC%9Athe-request-was-rejected-because-no-multipart-boundary-was-found/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用Postman测试上传接口，如下：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191102/1572685108871.png" alt="1572685108871"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191102/1572685150224.png" alt="1572685150224"></p><p>请求，报错：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found</span><br><span class="line">at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl.&lt;init&gt;(FileUploadBase.java:831) ~[tomcat-embed-core-8.5.29.jar:8.5.29]</span><br><span class="line">at org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:256) ~[tomcat-embed-core-8.5.29.jar:8.5.29]</span><br><span class="line">at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:280) ~[tomcat-embed-core-8.5.29.jar:8.5.29]</span><br><span class="line">at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-8.5.29.jar:8.5.29]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>出现这个的原因是因为Postman会自动加上<code>Content-Type:multipart/form-data</code>这对请求头信息，不需要我们手动添加，将其删除即可：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191102/1572685416677.png" alt="1572685416677"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决IDEA中Vue项目出现红色波浪线问题</title>
      <link href="/2019/11/01/%E8%A7%A3%E5%86%B3IDEA%E4%B8%ADVue%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%8E%B0%E7%BA%A2%E8%89%B2%E6%B3%A2%E6%B5%AA%E7%BA%BF%E9%97%AE%E9%A2%98/"/>
      <url>/2019/11/01/%E8%A7%A3%E5%86%B3IDEA%E4%B8%ADVue%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%8E%B0%E7%BA%A2%E8%89%B2%E6%B3%A2%E6%B5%AA%E7%BA%BF%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>File -&gt; Settings… -&gt; Languages &amp; Frameworks -&gt; JavaScript -&gt; 选择<code>ECMAScript6</code> -&gt; 点击<code>OK</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191101/1572613037297.png" alt="1572613037297"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20191101/1572613205962.png" alt="1572613205962"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>有趣的网站</title>
      <link href="/2019/09/16/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/"/>
      <url>/2019/09/16/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<blockquote><p>分享一些有趣的网站<br>持续更新中….</p></blockquote><ol><li><p><a href="https://www.yikm.net/">小游戏</a></p></li><li><p><a href="chrome://dino/">Chrome街机游戏(小恐龙)</a></p><p>就是进去后会是下面内容（一般Chrome浏览器在未连接互联网状态也会呈现），按空格键开始，按&amp;uarr;键(或空格)进行跳，&amp;darr;键进行蹲</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190916/1568639382624.png" alt="1568639382624"></p></li><li><p><a href="http://weavesilk.com/">Silk – Interactive Generative Art</a></p><p>可以随手画出对称的炫酷图案</p></li><li><p><a href="http://www.extractpdf.com/">Free online PDF Extractor</a></p><p>可以将PDF文件中的图片提取出来，PDF文件大小不能超过14M</p></li><li><p><a href="https://zh.wikihow.com/">wikiHow</a></p><p>里面包含大量高质量的指导手册</p></li><li><p><a href="http://lackar.com/aa">AnywhereAnything</a></p><p>这个网站收录了非常多的精品网站</p></li><li><ul><li><a href="https://www.pdflibr.com/">临时接受短信的手机号</a></li><li><a href="http://mail.bccto.me/">十分钟邮箱</a>、<a href="http://24mail.chacuo.net/">24小时邮箱</a></li></ul></li><li><p><a href="https://cn.office-converter.com/">转换格式大全</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关闭QQ弹出的腾讯网迷你版</title>
      <link href="/2019/08/31/%E5%85%B3%E9%97%ADQQ%E5%BC%B9%E5%87%BA%E7%9A%84%E8%85%BE%E8%AE%AF%E7%BD%91%E8%BF%B7%E4%BD%A0%E7%89%88/"/>
      <url>/2019/08/31/%E5%85%B3%E9%97%ADQQ%E5%BC%B9%E5%87%BA%E7%9A%84%E8%85%BE%E8%AE%AF%E7%BD%91%E8%BF%B7%E4%BD%A0%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>每次打开PC端QQ后都会自动弹出<strong>腾讯网迷你版</strong>新闻：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190831/1567218393044.png" alt="1567218393044"></p><p>下面是关闭的操作方法</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>打开PC端QQ，点击QQ主面板右下角的 <strong>主菜单</strong> 按钮，选择 <strong>设置</strong> 打开系统设置面板：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190831/1567218590517.png" alt="1567218590517"></p><p>在系统设置面板中选择 <strong>权限设置</strong> 下的 <strong>资讯提醒</strong>，然后取消勾选 <strong>登录后显示“腾讯网迷你版”</strong> 即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190831/1567218694715.png" alt="1567218694715"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于int和Integer之间的装箱机制问题</title>
      <link href="/2019/08/02/%E5%85%B3%E4%BA%8Eint%E5%92%8CInteger%E4%B9%8B%E9%97%B4%E7%9A%84%E8%A3%85%E7%AE%B1%E6%9C%BA%E5%88%B6%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/02/%E5%85%B3%E4%BA%8Eint%E5%92%8CInteger%E4%B9%8B%E9%97%B4%E7%9A%84%E8%A3%85%E7%AE%B1%E6%9C%BA%E5%88%B6%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="装箱-x2F-拆箱机制"><a href="#装箱-x2F-拆箱机制" class="headerlink" title="装箱&#x2F;拆箱机制"></a>装箱&#x2F;拆箱机制</h1><p><code>Integer</code>是<code>int</code>的包装类就是，从 Java 5 开始引入了自动<strong>装箱&#x2F;拆箱机制</strong>，使得二者可以相互转换。</p><p>Java 为每个原始类型提供了包装类型：</p><table><thead><tr><th align="center">原始类型</th><th align="center">包装类型</th></tr></thead><tbody><tr><td align="center">byte</td><td align="center">Byte</td></tr><tr><td align="center">short</td><td align="center">Short</td></tr><tr><td align="center">int</td><td align="center">Integer</td></tr><tr><td align="center">long</td><td align="center">Long</td></tr><tr><td align="center">float</td><td align="center">Float</td></tr><tr><td align="center">double</td><td align="center">Double</td></tr><tr><td align="center">char</td><td align="center">Character</td></tr><tr><td align="center">boolean</td><td align="center">Boolean</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoUnboxingTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">b</span> <span class="operator">=</span> a;                      <span class="comment">// int 类型的1自动装箱成 Integer 类型</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(b == a);         <span class="comment">// true -&gt; b自动拆箱成 int 类型再和c比较</span></span><br><span class="line">        System.out.println(c == b);         <span class="comment">// false-&gt; 两个引用没有指向同一对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="装箱本质-Integer-valueOf"><a href="#装箱本质-Integer-valueOf" class="headerlink" title="装箱本质 Integer.valueOf()"></a>装箱本质 Integer.valueOf()</h1><p>先看个例题：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">100</span>, i2 = <span class="number">100</span>, i3 = <span class="number">150</span>, i4 = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(i1 == i2);<span class="comment">// true</span></span><br><span class="line">        System.out.println(i3 == i4);<span class="comment">// false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i1、i2、i3、i4都是<code>Integer</code>对象引用，<code>==</code>比较的是引用而不是值</p><p>当我们给一个<code>Integer</code>对象赋一个<code>int</code>值的时候，会调用<code>Integer</code>类的静态方法<strong>valueOf</strong>，下面我们来看看 <strong>valueOf</strong> 方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 源码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">valueOf</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line"><span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>IntegerCache</code>是<code>Integer</code>的内部类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cache to support the object identity semantics of autoboxing for values between</span></span><br><span class="line"><span class="comment"> * -128 and 127 (inclusive) as required by JLS.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The cache is initialized on first usage.  The size of the cache</span></span><br><span class="line"><span class="comment"> * may be controlled by the &#123;<span class="doctag">@code</span> -XX:AutoBoxCacheMax=&lt;size&gt;&#125; option.</span></span><br><span class="line"><span class="comment"> * During VM initialization, java.lang.Integer.IntegerCache.high property</span></span><br><span class="line"><span class="comment"> * may be set and saved in the private system properties in the</span></span><br><span class="line"><span class="comment"> * sun.misc.VM class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">IntegerCache</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> -<span class="number">128</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> high;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="comment">// high value may be configured by property</span></span><br><span class="line"><span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">127</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">integerCacheHighPropValue</span> <span class="operator">=</span></span><br><span class="line">sun.misc.VM.getSavedProperty(<span class="string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (integerCacheHighPropValue != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> parseInt(integerCacheHighPropValue);</span><br><span class="line">i = Math.max(i, <span class="number">127</span>);</span><br><span class="line"><span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line"><span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">high = h;</span><br><span class="line"></span><br><span class="line">cache = <span class="keyword">new</span> <span class="title class_">Integer</span>[(high - low) + <span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> low;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">cache[k] = <span class="keyword">new</span> <span class="title class_">Integer</span>(j++);</span><br><span class="line"></span><br><span class="line"><span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line"><span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="title function_">IntegerCache</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面可看出，在范围 <strong>-128 &amp;le; i &amp;le;127</strong> 之内的数值不会使用<code>new</code>创建新的<code>Integer</code>对象，直接引用常量池中的<code>Integer</code>对象；而超出这个范围将使用<code>new</code>创建新的<code>Integer</code>对象</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA中修改项目包结构后导包报错</title>
      <link href="/2019/07/28/IDEA%E4%B8%AD%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE%E5%8C%85%E7%BB%93%E6%9E%84%E5%90%8E%E5%AF%BC%E5%8C%85%E6%8A%A5%E9%94%99/"/>
      <url>/2019/07/28/IDEA%E4%B8%AD%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE%E5%8C%85%E7%BB%93%E6%9E%84%E5%90%8E%E5%AF%BC%E5%8C%85%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>IDEA中修改项目的包结构后<code>import</code>导包无法正常引入</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>清除缓存：</p><p>File -&gt; Invalidate Caches&#x2F;Restart… -&gt; Invalidate and Restart</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190728/1564318049201.png" alt="1564318049201"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190728/1564318070111.png" alt="1564318070111"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有趣的代码注释</title>
      <link href="/2019/07/25/%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A/"/>
      <url>/2019/07/25/%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：<a href="https://github.com/Blankj/">Blankj</a><br>原链：<a href="https://github.com/Blankj/awesome-comment">https://github.com/Blankj/awesome-comment</a></p></blockquote><h1 id="神器的代码注释"><a href="#神器的代码注释" class="headerlink" title="神器的代码注释"></a>神器的代码注释</h1><blockquote><p>写在前面的话：一时兴起就收集了以下神注释，希望能为广大ITer带来快乐，缓解你们工作中的压力，下面开车，先自爆头像，下文会给出制作链接。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　瓦瓦　　　　　　　　　　　　十　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　十齱龠己　　　　　　　　　亅瓦車己　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　乙龍龠毋日丶　　　　　　丶乙己毋毋丶　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　十龠馬鬼車瓦　　　　　　己十瓦毋毋　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　鬼馬龠馬龠十　　　　己己毋車毋瓦　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　毋龠龠龍龠鬼乙丶丶乙車乙毋鬼車己　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　乙龠龍龍鬼龍瓦　十瓦毋乙瓦龠瓦亅　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　馬齱龍馬鬼十丶日己己己毋車乙丶　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　己齱馬鬼車十十毋日乙己己乙乙　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　車馬齱齱日乙毋瓦己乙瓦日亅　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　亅車齺龖瓦乙車龖龍乙乙十　　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　　日龠龠十亅車龍毋十十　　　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　　日毋己亅　己己十亅亅　　　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　丶己十十乙　　丶丶丶丶丶　　　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　亅己十龍龖瓦　　丶　丶　乙十　　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　亅己十龠龖毋　丶丶　　丶己鬼鬼瓦亅　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　十日十十日亅丶亅丶　丶十日毋鬼馬馬車乙　　　　　　　</span><br><span class="line"> *　　　　　　　　　　　十日乙十亅亅亅丶　　十乙己毋鬼鬼鬼龍齺馬乙　　　　　</span><br><span class="line"> *　　　　　　　　　　　丶瓦己乙十十亅丶亅乙乙乙己毋鬼鬼鬼龍齱齺齺鬼十　　　</span><br><span class="line"> *　　　　　　　　　　　　乙乙十十十亅乙瓦瓦己日瓦毋鬼鬼龠齱齱龍龍齱齱毋丶　</span><br><span class="line"> *　　　　　　　　　　　　亅十十十十乙瓦車毋瓦瓦日車馬龠龍龍龍龍龍龠龠龠馬亅</span><br><span class="line"> *　　　　　　　　　　　　　十十十十己毋車瓦瓦瓦瓦鬼馬龠龍龠龠龍龠龠龠馬龠車</span><br><span class="line"> *　　　　　　　　　　　　　　亅十十日毋瓦日日瓦鬼鬼鬼龠龠馬馬龠龍龍龠馬馬車</span><br><span class="line"> *　　　　　　　　　　　　　　亅亅亅乙瓦瓦毋車車車馬龍龠鬼鬼馬龠龍龍龠馬馬鬼</span><br><span class="line"> *　　　　　　　　　　　　丶丶乙亅亅乙車鬼鬼鬼毋車龍龍龠鬼馬馬龠龍齱齱龍馬鬼</span><br><span class="line"> *　　　　　　　　　　　亅己十十己十日鬼鬼車瓦毋龠龍龠馬馬龠龠龠齱齺齺齱龠鬼</span><br><span class="line"> *　　　　　　　　　　　　亅乙乙乙十車馬車毋馬齱齱龍龠龠龠馬龠龍齱龍龠龠鬼瓦</span><br><span class="line"> *　　　　　　　　　　　　　　　　丶毋龠鬼車瓦車馬龠龍龠龠龍齱齱龠馬馬鬼毋日</span><br><span class="line"> *　　　　　　　　　　　　　　　　十乙己日十　　丶己鬼龍齱齺齱龍馬馬馬車毋己</span><br><span class="line"> *　　　　　　　　　　　　　　丶十己乙亅丶　　　　　　亅瓦馬龠龍龠龠馬毋瓦乙</span><br><span class="line"> *　　　　　　　　　　　　　丶十十乙亅十　　　　　　　　亅己瓦車馬龠鬼車瓦乙</span><br><span class="line"> *　　　　　　　　　　　　　丶十乙十十丶　　　　　　　　　丶丶亅十瓦鬼車瓦己</span><br><span class="line"> *　　　　　　　　　　　　　　丶亅亅丶　　　　　　　　　　　　　　　亅日瓦日</span><br><span class="line"> *　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　丶</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p><del>就不卖关子了，图片转字符可以上这个<a href="http://ku.cndesign.com/pic/">传送门</a>，白底的话会按空格补全，否则都为字符。</del></p><p>前面的传送门貌似出了点问题，下面再补上个<a href="http://www.makepic.net/Tool/Image2ascii.html">新的传送门</a>，也是很好用的，可以选择质量。</p><p>这不，下面的两只doge和一头滑稽就是产自于它，have fun，快去制作专属的字符注释吧。</p><p>再补上一个好玩的网站<a href="http://www.asciiworld.com/">Ascii World</a>，由于这网站的图形太多了，我就不贴上来了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐</span><br><span class="line"> * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐</span><br><span class="line"> * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘</span><br><span class="line"> * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐</span><br><span class="line"> * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │</span><br><span class="line"> * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤</span><br><span class="line"> * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │</span><br><span class="line"> * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │</span><br><span class="line"> * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│&quot; &#x27;│ Enter  │               │ 4 │ 5 │ 6 │   │</span><br><span class="line"> * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤</span><br><span class="line"> * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │</span><br><span class="line"> * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││</span><br><span class="line"> * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│</span><br><span class="line"> * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *                    _ooOoo_</span><br><span class="line"> *                   o8888888o</span><br><span class="line"> *                   88&quot; . &quot;88</span><br><span class="line"> *                   (| -_- |)</span><br><span class="line"> *                    O\ = /O</span><br><span class="line"> *                ____/`---&#x27;\____</span><br><span class="line"> *              .   &#x27; \\| |// `.</span><br><span class="line"> *               / \\||| : |||// \</span><br><span class="line"> *             / _||||| -:- |||||- \</span><br><span class="line"> *               | | \\\ - /// | |</span><br><span class="line"> *             | \_| &#x27;&#x27;\---/&#x27;&#x27; | |</span><br><span class="line"> *              \ .-\__ `-` ___/-. /</span><br><span class="line"> *           ___`. .&#x27; /--.--\ `. . __</span><br><span class="line"> *        .&quot;&quot; &#x27;&lt; `.___\_&lt;|&gt;_/___.&#x27; &gt;&#x27;&quot;&quot;.</span><br><span class="line"> *       | | : `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line"> *         \ \ `-. \_ __\ /__ _/ .-` / /</span><br><span class="line"> * ======`-.____`-.___\_____/___.-`____.-&#x27;======</span><br><span class="line"> *                    `=---=&#x27;</span><br><span class="line"> *</span><br><span class="line"> * .............................................</span><br><span class="line"> *          佛祖保佑             永无BUG</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *  佛曰:</span><br><span class="line"> *          写字楼里写字间，写字间里程序员；</span><br><span class="line"> *          程序人员写程序，又拿程序换酒钱。</span><br><span class="line"> *          酒醒只在网上坐，酒醉还来网下眠；</span><br><span class="line"> *          酒醉酒醒日复日，网上网下年复年。</span><br><span class="line"> *          但愿老死电脑间，不愿鞠躬老板前；</span><br><span class="line"> *          奔驰宝马贵者趣，公交自行程序员。</span><br><span class="line"> *          别人笑我忒疯癫，我笑自己命太贱；</span><br><span class="line"> *          不见满街漂亮妹，哪个归得程序员？</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * _ooOoo_</span><br><span class="line"> * o8888888o</span><br><span class="line"> * 88&quot; . &quot;88</span><br><span class="line"> * (| -_- |)</span><br><span class="line"> *  O\ = /O</span><br><span class="line"> * ___/`---&#x27;\____</span><br><span class="line"> * .   &#x27; \\| |// `.</span><br><span class="line"> * / \\||| : |||// \</span><br><span class="line"> * / _||||| -:- |||||- \</span><br><span class="line"> * | | \\\ - /// | |</span><br><span class="line"> * | \_| &#x27;&#x27;\---/&#x27;&#x27; | |</span><br><span class="line"> * \ .-\__ `-` ___/-. /</span><br><span class="line"> * ___`. .&#x27; /--.--\ `. . __</span><br><span class="line"> * .&quot;&quot; &#x27;&lt; `.___\_&lt;|&gt;_/___.&#x27; &gt;&#x27;&quot;&quot;.</span><br><span class="line"> * | | : `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line"> * \ \ `-. \_ __\ /__ _/ .-` / /</span><br><span class="line"> * ======`-.____`-.___\_____/___.-`____.-&#x27;======</span><br><span class="line"> * `=---=&#x27;</span><br><span class="line"> *          .............................................</span><br><span class="line"> *           佛曰：bug泛滥，我已瘫痪！</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *</span><br><span class="line"> *   █████▒█    ██  ▄████▄   ██ ▄█▀       ██████╗ ██╗   ██╗ ██████╗</span><br><span class="line"> * ▓██   ▒ ██  ▓██▒▒██▀ ▀█   ██▄█▒        ██╔══██╗██║   ██║██╔════╝</span><br><span class="line"> * ▒████ ░▓██  ▒██░▒▓█    ▄ ▓███▄░        ██████╔╝██║   ██║██║  ███╗</span><br><span class="line"> * ░▓█▒  ░▓▓█  ░██░▒▓▓▄ ▄██▒▓██ █▄        ██╔══██╗██║   ██║██║   ██║</span><br><span class="line"> * ░▒█░   ▒▒█████▓ ▒ ▓███▀ ░▒██▒ █▄       ██████╔╝╚██████╔╝╚██████╔╝</span><br><span class="line"> *  ▒ ░   ░▒▓▒ ▒ ▒ ░ ░▒ ▒  ░▒ ▒▒ ▓▒       ╚═════╝  ╚═════╝  ╚═════╝</span><br><span class="line"> *  ░     ░░▒░ ░ ░   ░  ▒   ░ ░▒ ▒░</span><br><span class="line"> *  ░ ░    ░░░ ░ ░ ░        ░ ░░ ░</span><br><span class="line"> *           ░     ░ ░      ░  ░</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *                    .::::.</span><br><span class="line"> *                  .::::::::.</span><br><span class="line"> *                 :::::::::::</span><br><span class="line"> *             ..:::::::::::&#x27;</span><br><span class="line"> *           &#x27;::::::::::::&#x27;</span><br><span class="line"> *             .::::::::::</span><br><span class="line"> *        &#x27;::::::::::::::..</span><br><span class="line"> *             ..::::::::::::.</span><br><span class="line"> *           ``::::::::::::::::</span><br><span class="line"> *            ::::``:::::::::&#x27;        .:::.</span><br><span class="line"> *           ::::&#x27;   &#x27;:::::&#x27;       .::::::::.</span><br><span class="line"> *         .::::&#x27;      ::::     .:::::::&#x27;::::.</span><br><span class="line"> *        .:::&#x27;       :::::  .:::::::::&#x27; &#x27;:::::.</span><br><span class="line"> *       .::&#x27;        :::::.:::::::::&#x27;      &#x27;:::::.</span><br><span class="line"> *      .::&#x27;         ::::::::::::::&#x27;         ``::::.</span><br><span class="line"> *  ...:::           ::::::::::::&#x27;              ``::.</span><br><span class="line"> * ```` &#x27;:.          &#x27;:::::::::&#x27;                  ::::..</span><br><span class="line"> *                    &#x27;.:::::&#x27;                    &#x27;:&#x27;````..</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *      ┌─┐       ┌─┐</span><br><span class="line"> *   ┌──┘ ┴───────┘ ┴──┐</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   │       ───       │</span><br><span class="line"> *   │  ─┬┘       └┬─  │</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   │       ─┴─       │</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   └───┐         ┌───┘</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         └──────────────┐</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       │                        ├─┐</span><br><span class="line"> *       │                        ┌─┘</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       └─┐  ┐  ┌───────┬──┐  ┌──┘</span><br><span class="line"> *         │ ─┤ ─┤       │ ─┤ ─┤</span><br><span class="line"> *         └──┴──┘       └──┴──┘</span><br><span class="line"> *                神兽保佑</span><br><span class="line"> *               代码无BUG!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *      ┌─┐       ┌─┐</span><br><span class="line"> *   ┌──┘ ┴───────┘ ┴──┐</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   │       ───       │</span><br><span class="line"> *   │   &gt;        &lt;    │</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   │   ...  ⌒  ...   │</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   └───┐         ┌───┘</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         └──────────────┐</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       │                        ├─┐</span><br><span class="line"> *       │                        ┌─┘</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       └─┐  ┐  ┌───────┬──┐  ┌──┘</span><br><span class="line"> *         │ ─┤ ─┤       │ ─┤ ─┤</span><br><span class="line"> *         └──┴──┘       └──┴──┘</span><br><span class="line"> *                神兽保佑</span><br><span class="line"> *               代码无BUG!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *      ┌─┐       ┌─┐ + +</span><br><span class="line"> *   ┌──┘ ┴───────┘ ┴──┐++</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   │       ───       │++ + + +</span><br><span class="line"> *   ███████───███████ │+</span><br><span class="line"> *   │                 │+</span><br><span class="line"> *   │       ─┴─       │</span><br><span class="line"> *   │                 │</span><br><span class="line"> *   └───┐         ┌───┘</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         │   + +</span><br><span class="line"> *       │         │</span><br><span class="line"> *       │         └──────────────┐</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       │                        ├─┐</span><br><span class="line"> *       │                        ┌─┘</span><br><span class="line"> *       │                        │</span><br><span class="line"> *       └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span><br><span class="line"> *         │ ─┤ ─┤       │ ─┤ ─┤</span><br><span class="line"> *         └──┴──┘       └──┴──┘  + + + +</span><br><span class="line"> *                神兽保佑</span><br><span class="line"> *               代码无BUG!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *                  ___====-_  _-====___</span><br><span class="line"> *            _--^^^#####//      \\#####^^^--_</span><br><span class="line"> *         _-^##########// (    ) \\##########^-_</span><br><span class="line"> *        -############//  |\^^/|  \\############-</span><br><span class="line"> *      _/############//   (@::@)   \\############\_</span><br><span class="line"> *     /#############((     \\//     ))#############\</span><br><span class="line"> *    -###############\\    (oo)    //###############-</span><br><span class="line"> *   -#################\\  / VV \  //#################-</span><br><span class="line"> *  -###################\\/      \//###################-</span><br><span class="line"> * _#/|##########/\######(   /\   )######/\##########|\#_</span><br><span class="line"> * |/ |#/\#/\#/\/  \#/\##\  |  |  /##/\#/  \/\#/\#/\#| \|</span><br><span class="line"> * `  |/  V  V  `   V  \#\| |  | |/#/  V   &#x27;  V  V  \|  &#x27;</span><br><span class="line"> *    `   `  `      `   / | |  | | \   &#x27;      &#x27;  &#x27;   &#x27;</span><br><span class="line"> *                     (  | |  | |  )</span><br><span class="line"> *                    __\ | |  | | /__</span><br><span class="line"> *                   (vvv(VVV)(VVV)vvv)                </span><br><span class="line"> *                        神兽保佑</span><br><span class="line"> *                       代码无BUG!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> *                                                    __----~~~~~~~~~~~------___</span><br><span class="line"> *                                   .  .   ~~//====......          __--~ ~~</span><br><span class="line"> *                   -.            \_|//     |||\\  ~~~~~~::::... /~</span><br><span class="line"> *                ___-==_       _-~o~  \/    |||  \\            _/~~-</span><br><span class="line"> *        __---~~~.==~||\=_    -_--~/_-~|-   |\\   \\        _/~</span><br><span class="line"> *    _-~~     .=~    |  \\-_    &#x27;-~7  /-   /  ||    \      /</span><br><span class="line"> *  .~       .~       |   \\ -_    /  /-   /   ||      \   /</span><br><span class="line"> * /  ____  /         |     \\ ~-_/  /|- _/   .||       \ /</span><br><span class="line"> * |~~    ~~|--~~~~--_ \     ~==-/   | \~--===~~        .\</span><br><span class="line"> *          &#x27;         ~-|      /|    |-~\~~       __--~~</span><br><span class="line"> *                      |-~~-_/ |    |   ~\_   _-~            /\</span><br><span class="line"> *                           /  \     \__   \/~                \__</span><br><span class="line"> *                       _--~ _/ | .-~~____--~-/                  ~~==.</span><br><span class="line"> *                      ((-&gt;/~   &#x27;.|||&#x27; -_|    ~~-/ ,              . _||</span><br><span class="line"> *                                 -_     ~\      ~~---l__i__i__i--~~_/</span><br><span class="line"> *                                 _-~-__   ~)  \--______________--~~</span><br><span class="line"> *                               //.-~~~-~_--~- |-------~~~~~~~~</span><br><span class="line"> *                                      //.-~~~--\</span><br><span class="line"> *                               神兽保佑</span><br><span class="line"> *                              代码无BUG!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***                              _</span><br><span class="line"> *  _._ _..._ .-&#x27;,     _.._(`))</span><br><span class="line"> * &#x27;-. `     &#x27;  /-._.-&#x27;    &#x27;,/</span><br><span class="line"> *    )         \            &#x27;.</span><br><span class="line"> *   / _    _    |             \</span><br><span class="line"> *  |  a    a    /              |</span><br><span class="line"> *  \   .-.                     ;</span><br><span class="line"> *   &#x27;-(&#x27;&#x27; ).-&#x27;       ,&#x27;       ;</span><br><span class="line"> *      &#x27;-;           |      .&#x27;</span><br><span class="line"> *         \           \    /</span><br><span class="line"> *         | 7  .__  _.-\   \</span><br><span class="line"> *         | |  |  ``/  /`  /</span><br><span class="line"> *        /,_|  |   /,_/   /</span><br><span class="line"> *           /,_/      &#x27;`-&#x27;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> **************************************************************</span><br><span class="line"> *                                                            *</span><br><span class="line"> *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *</span><br><span class="line"> *    |                     ______                     |      *</span><br><span class="line"> *    |                  .-&quot;      &quot;-.                  |      *</span><br><span class="line"> *    |                 /            \                 |      *</span><br><span class="line"> *    |     _          |              |          _     |      *</span><br><span class="line"> *    |    ( \         |,  .-.  .-.  ,|         / )    |      *</span><br><span class="line"> *    |     &gt; &quot;=._     | )(__/  \__)( |     _.=&quot; &lt;     |      *</span><br><span class="line"> *    |    (_/&quot;=._&quot;=._ |/     /\     \| _.=&quot;_.=&quot;\_)    |      *</span><br><span class="line"> *    |           &quot;=._&quot;(_     ^^     _)&quot;_.=&quot;           |      *</span><br><span class="line"> *    |               &quot;=\__|IIIIII|__/=&quot;               |      *</span><br><span class="line"> *    |              _.=&quot;| \IIIIII/ |&quot;=._              |      *</span><br><span class="line"> *    |    _     _.=&quot;_.=&quot;\          /&quot;=._&quot;=._     _    |      *</span><br><span class="line"> *    |   ( \_.=&quot;_.=&quot;     `--------`     &quot;=._&quot;=._/ )   |      *</span><br><span class="line"> *    |    &gt; _.=&quot;                            &quot;=._ &lt;    |      *</span><br><span class="line"> *    |   (_/                                    \_)   |      *</span><br><span class="line"> *    |                                                |      *</span><br><span class="line"> *    &#x27;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=&#x27;      *</span><br><span class="line"> *                                                            *</span><br><span class="line"> *           LASCIATE OGNI SPERANZA, VOI CH&#x27;ENTRATE           *</span><br><span class="line"> **************************************************************</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *                                         ,s555SB@@&amp;                          </span><br><span class="line"> *                                      :9H####@@@@@Xi                        </span><br><span class="line"> *                                     1@@@@@@@@@@@@@@8                       </span><br><span class="line"> *                                   ,8@@@@@@@@@B@@@@@@8                      </span><br><span class="line"> *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   </span><br><span class="line"> *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 </span><br><span class="line"> *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                </span><br><span class="line"> *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               </span><br><span class="line"> *            ;@&amp;i,58r5                 rGSS:     :B@@@@@@@@@@A               </span><br><span class="line"> *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               </span><br><span class="line"> *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                </span><br><span class="line"> *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  </span><br><span class="line"> *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               </span><br><span class="line"> *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          </span><br><span class="line"> *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        </span><br><span class="line"> *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;,      </span><br><span class="line"> *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     </span><br><span class="line"> *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     </span><br><span class="line"> *          :3B@@@@@@@@@@@&amp;9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class="line"> *      s&amp;HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    </span><br><span class="line"> *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    </span><br><span class="line"> *  5#@@#&amp;@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    </span><br><span class="line"> *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class="line"> *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    </span><br><span class="line"> *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    </span><br><span class="line"> *           ,ssirhSM@&amp;1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   </span><br><span class="line"> *              ,,,rHAri1h1rh&amp;@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  </span><br><span class="line"> *            .A3hH@#5S553&amp;@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A.</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> *    又看源码，看你妹妹呀！</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *_______________#########_______________________</span><br><span class="line"> *______________############_____________________</span><br><span class="line"> *______________#############____________________</span><br><span class="line"> *_____________##__###########___________________</span><br><span class="line"> *____________###__######_#####__________________</span><br><span class="line"> *____________###_#######___####_________________</span><br><span class="line"> *___________###__##########_####________________</span><br><span class="line"> *__________####__###########_####_______________</span><br><span class="line"> *________#####___###########__#####_____________</span><br><span class="line"> *_______######___###_########___#####___________</span><br><span class="line"> *_______#####___###___########___######_________</span><br><span class="line"> *______######___###__###########___######_______</span><br><span class="line"> *_____######___####_##############__######______</span><br><span class="line"> *____#######__#####################_#######_____</span><br><span class="line"> *____#######__##############################____</span><br><span class="line"> *___#######__######_#################_#######___</span><br><span class="line"> *___#######__######_######_#########___######___</span><br><span class="line"> *___#######____##__######___######_____######___</span><br><span class="line"> *___#######________######____#####_____#####____</span><br><span class="line"> *____######________#####_____#####_____####_____</span><br><span class="line"> *_____#####________####______#####_____###______</span><br><span class="line"> *______#####______;###________###______#________</span><br><span class="line"> *________##_______####________####______________</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * ░░░░░░░░░░░░░░░░░░░░░░░░▄░░</span><br><span class="line"> * ░░░░░░░░░▐█░░░░░░░░░░░▄▀▒▌░</span><br><span class="line"> * ░░░░░░░░▐▀▒█░░░░░░░░▄▀▒▒▒▐</span><br><span class="line"> * ░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐</span><br><span class="line"> * ░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐</span><br><span class="line"> * ░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌</span><br><span class="line"> * ░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒</span><br><span class="line"> * ░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐</span><br><span class="line"> * ░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄</span><br><span class="line"> * ░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒</span><br><span class="line"> * ▀▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▒</span><br><span class="line"> * 单身狗就这样默默地看着你，一句话也不说。</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *                        d*##$.</span><br><span class="line"> *  zP&quot;&quot;&quot;&quot;&quot;$e.           $&quot;    $o</span><br><span class="line"> * 4$       &#x27;$          $&quot;      $</span><br><span class="line"> * &#x27;$        &#x27;$        J$       $F</span><br><span class="line"> *  &#x27;b        $k       $&gt;       $</span><br><span class="line"> *   $k        $r     J$       d$</span><br><span class="line"> *   &#x27;$         $     $&quot;       $~</span><br><span class="line"> *    &#x27;$        &quot;$   &#x27;$E       $</span><br><span class="line"> *     $         $L   $&quot;      $F ...</span><br><span class="line"> *      $.       4B   $      $$$*&quot;&quot;&quot;*b</span><br><span class="line"> *      &#x27;$        $.  $$     $$      $F</span><br><span class="line"> *       &quot;$       R$  $F     $&quot;      $</span><br><span class="line"> *        $k      ?$ u*     dF      .$</span><br><span class="line"> *        ^$.      $$&quot;     z$      u$$$$e</span><br><span class="line"> *         #$b             $E.dW@e$&quot;    ?$</span><br><span class="line"> *          #$           .o$$# d$$$$c    ?F</span><br><span class="line"> *           $      .d$$#&quot; . zo$&gt;   #$r .uF</span><br><span class="line"> *           $L .u$*&quot;      $&amp;$$$k   .$$d$$F</span><br><span class="line"> *            $$&quot;            &quot;&quot;^&quot;$$$P&quot;$P9$</span><br><span class="line"> *           JP              .o$$$$u:$P $$</span><br><span class="line"> *           $          ..ue$&quot;      &quot;&quot;  $&quot;</span><br><span class="line"> *          d$          $F              $</span><br><span class="line"> *          $$     ....udE             4B</span><br><span class="line"> *           #$    &quot;&quot;&quot;&quot;` $r            @$</span><br><span class="line"> *            ^$L        &#x27;$            $F</span><br><span class="line"> *              RN        4N           $</span><br><span class="line"> *               *$b                  d$</span><br><span class="line"> *                $$k                 $F</span><br><span class="line"> *                 $$b                $F</span><br><span class="line"> *                  $&quot;&quot;               $F</span><br><span class="line"> *                  &#x27;$                $</span><br><span class="line"> *                   $L               $</span><br><span class="line"> *                   &#x27;$               $</span><br><span class="line"> *                    $               $</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> *              ,----------------,              ,---------,</span><br><span class="line"> *         ,-----------------------,          ,&quot;        ,&quot;|</span><br><span class="line"> *       ,&quot;                      ,&quot;|        ,&quot;        ,&quot;  |</span><br><span class="line"> *      +-----------------------+  |      ,&quot;        ,&quot;    |</span><br><span class="line"> *      |  .-----------------.  |  |     +---------+      |</span><br><span class="line"> *      |  |                 |  |  |     | -==----&#x27;|      |</span><br><span class="line"> *      |  |  I LOVE DOS!    |  |  |     |         |      |</span><br><span class="line"> *      |  |  Bad command or |  |  |/----|`---=    |      |</span><br><span class="line"> *      |  |  C:\&gt;_          |  |  |   ,/|==== ooo |      ;</span><br><span class="line"> *      |  |                 |  |  |  // |(((( [33]|    ,&quot;</span><br><span class="line"> *      |  `-----------------&#x27;  |,&quot; .;&#x27;| |((((     |  ,&quot;</span><br><span class="line"> *      +-----------------------+  ;;  | |         |,&quot;</span><br><span class="line"> *         /_)______________(_/  //&#x27;   | +---------+</span><br><span class="line"> *    ___________________________/___  `,</span><br><span class="line"> *   /  oooooooooooooooo  .o.  oooo /,   \,&quot;-----------</span><br><span class="line"> *  / ==ooooooooooooooo==.o.  ooo= //   ,`\--&#123;)B     ,&quot;</span><br><span class="line"> * /_==__==========__==_ooo__ooo=_/&#x27;   /___________,&quot;</span><br><span class="line"> *</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>以上为魔性图</p><hr><p>以下为神注释</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * 这个公司没有年终奖的,兄弟别指望了,也别来了,我准备辞职了</span><br><span class="line"> * 另外这个项目有很多*Bug* 你坚持不了多久的,拜拜!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * 1只羊 == one sheep</span><br><span class="line"> * 2只羊 == two sheeps</span><br><span class="line"> * 3只羊 == three sheeps</span><br><span class="line"> * 4只羊 == four sheeps</span><br><span class="line"> * 5只羊 == five sheeps</span><br><span class="line"> * 6只羊 == six sheeps</span><br><span class="line"> * 7只羊 == seven sheeps</span><br><span class="line"> * 8只羊 == eight sheeps</span><br><span class="line"> * 9只羊 == nine sheeps</span><br><span class="line"> * 10只羊 == ten sheeps</span><br><span class="line"> * 11只羊 == eleven sheeps</span><br><span class="line"> * 12只羊 == twelve sheeps</span><br><span class="line"> * 13只羊 == thirteen sheeps</span><br><span class="line"> * 14只羊 == fourteen sheeps</span><br><span class="line"> * 15只羊 == fifteen sheeps</span><br><span class="line"> * 16只羊 == sixteen sheeps</span><br><span class="line"> * 17只羊 == seventeen sheeps</span><br><span class="line"> * 18只羊 == eighteen sheeps</span><br><span class="line"> * 19只羊 == nineteen sheeps</span><br><span class="line"> * 20只羊 == twenty sheeps</span><br><span class="line"> * 21只羊 == twenty one sheeps</span><br><span class="line"> * 22只羊 == twenty two sheeps</span><br><span class="line"> * 23只羊 == twenty three sheeps</span><br><span class="line"> * 24只羊 == twenty four sheeps</span><br><span class="line"> * 25只羊 == twenty five sheeps</span><br><span class="line"> * 26只羊 == twenty six sheeps</span><br><span class="line"> * 27只羊 == twenty seven sheeps</span><br><span class="line"> * 28只羊 == twenty eight sheeps</span><br><span class="line"> * 29只羊 == twenty nine sheeps</span><br><span class="line"> * 30只羊 == thirty sheeps</span><br><span class="line"> * 现在瞌睡了吧，好了，不要再改下面的代码了，睡觉咯~~</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * You may think you know what the following code does.</span><br><span class="line"> * But you dont. Trust me.</span><br><span class="line"> * Fiddle with it, and youll spend many a sleepless</span><br><span class="line"> * night cursing the moment you thought youd be clever</span><br><span class="line"> * enough to &quot;optimize&quot; the code below.</span><br><span class="line"> * Now close this file and go play with something else.</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line"> * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。</span><br><span class="line"> * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。</span><br><span class="line"> * 现在请关闭这个文件去玩点别的吧。</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * somedev1 -  6/7/02 Adding temporary tracking of Login screen</span><br><span class="line"> * somedev2 -  5/22/07 Temporary my ass</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line"> * 一些修改1 - 2002/6/7 增加临时的跟踪登录界面</span><br><span class="line"> * 一些修改2 - 2007/5/22 我临时的犯傻</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * 程序员1（于2010年6月7日）：在这个坑临时加入一些调料</span><br><span class="line"> * 程序员2（于2011年5月22日）：临你个屁啊</span><br><span class="line"> * 程序员3（于2012年7月23日）：楼上都是狗屎，鉴定完毕</span><br><span class="line"> * 程序员4（于2013年8月2日）：fuck 楼上，三年了，这坑还在！！！</span><br><span class="line"> * 程序员5（于2014年8月21日）：哈哈哈，这坑居然坑了这么多人，幸好我也不用填了，系统终止运行了，you&#x27;re died</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * For the brave souls who get this far: You are the chosen ones,</span><br><span class="line"> * the valiant knights of programming who toil away, without rest,</span><br><span class="line"> * fixing our most awful code. To you, true saviors, kings of men,</span><br><span class="line"> * I say this: never gonna give you up, never gonna let you down,</span><br><span class="line"> * never gonna run around and desert you. Never gonna make you cry,</span><br><span class="line"> * never gonna say goodbye. Never gonna tell a lie and hurt you.</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line"> * 致终于来到这里的勇敢的人：</span><br><span class="line"> * 你是被上帝选中的人，是英勇的、不敌辛苦的、不眠不休的来修改我们这最棘手的代码的编程骑士。</span><br><span class="line"> * 你，我们的救世主，人中之龙，我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己，</span><br><span class="line"> * 永远不要哭啼，永远不要说再见，永远不要说谎来伤害自己。</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * Dear maintainer:</span><br><span class="line"> *</span><br><span class="line"> * Once you are done trying to &#x27;optimize&#x27; this routine,</span><br><span class="line"> * and have realized what a terrible mistake that was,</span><br><span class="line"> * please increment the following counter as a warning</span><br><span class="line"> * to the next guy:</span><br><span class="line"> *</span><br><span class="line"> * total_hours_wasted_here = 42</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line"> * 亲爱的维护者：</span><br><span class="line"> *</span><br><span class="line"> * 如果你尝试了对这段程序进行&#x27;优化&#x27;</span><br><span class="line"> * 下面这个计数器的个数用来对后来人进行警告</span><br><span class="line"> *</span><br><span class="line"> * 浪费在这里的总时间 = 42h</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception up = new Exception(&quot;Something is really wrong.&quot;);</span><br><span class="line">throw up;  //ha ha</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * When I wrote this, only God and I understood what I was doing</span><br><span class="line"> * Now, God only knows</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line">* 写这段代码的时候，只有上帝和我知道它是干嘛的</span><br><span class="line">* 现在，只有上帝知道</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stop(); // Hammertime!</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Autogenerated, do not edit. All changes will be undone.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// sometimes I believe compiler ignores all my comments</span><br><span class="line">// 有时候我相信编译器忽略了我所有的注释</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * I dedicate all this code, all my work, to my wife, Darlene, who will</span><br><span class="line"> * have to support me and our three children and the dog once it gets</span><br><span class="line"> * released into the public.</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// drunk, fix later</span><br><span class="line">// 有点晕了，以后再修改</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Magic. Do not touch.</span><br><span class="line">// 麻鸡。勿动。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define TRUE FALSE// Happy debugging suckers</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// I&#x27;m sorry.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return 1; # returns 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * Always returns true.</span><br><span class="line"> */</span><br><span class="line">public boolean isAvailable() &#123;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- Here be dragons --&gt;</span><br><span class="line">&lt;!-- 前方高能 --&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">double penetration; // ouch</span><br><span class="line">// 自行了解，不方便解释</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/////////////////////////////////////// this is a well commented line</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// To understand recursion, see the bottom of this file</span><br><span class="line">At the bottom of the file:</span><br><span class="line">// To understand recursion, see the top of this file</span><br><span class="line">// 想要明白递归须看文件末尾</span><br><span class="line">到了文末</span><br><span class="line">// 想要明白递归须看文件顶部</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* Please work */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">long long ago; /* in a galaxy far far away */</span><br><span class="line">// 很久很久以前 在一个遥远的银河中（出自星球大战）</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// This code sucks, you know it and I know it.  </span><br><span class="line">// Move on and call me an idiot later.</span><br><span class="line">// 你我都知道这代码很烂</span><br><span class="line">// 先不要骂我2B了，请先继续往下看</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// I am not sure why this works but it fixes the problem.</span><br><span class="line">// 虽然我不知道为什么这样管用，但它却是修复了问题</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// If this comment is removed the program will blow up</span><br><span class="line">// 如果删了此处注释程序就炸了</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// This function has been here since 1987. DON&#x27;T FXXKING TOUCH IT</span><br><span class="line">// 这函数1987年就这在了，别他娘动它</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// if i ever see this again i&#x27;m going to start bringing guns to work</span><br><span class="line">// 如果要是再让我看见这样的代码，也许我会带着一把枪来上班</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// no comments for you</span><br><span class="line">// it was hard to write</span><br><span class="line">// so it should be hard to read</span><br><span class="line">// 难写的代码，肯定很难读。因此，我没有注释留给你。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// I will give you two of my seventy-two virgins if you can fix this.</span><br><span class="line">// 要是你能修正这个问题的话，我会在我的七十二个处女中挑两个送你</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// I am not responsible of this code.</span><br><span class="line">// They made me write it, against my will.</span><br><span class="line">// 下面的代码，我不负责。因为是他们逼我写的，违背了我的意愿。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* You are not expected to understand this */</span><br><span class="line">/* 你绝不会明白的 */</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// I have to find a better job</span><br><span class="line">// 看来我需要找份更好的工作了</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/***</span><br><span class="line"> * 这个类是Object的子类</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>如果有更好地可以留言或者到<a href="https://github.com/Blankj/awesome-comment">传送门</a>提issue，如果看到这能带给你快乐的话，那就点个稀饭吧，谢谢大佬们赏脸，愿所有的程序都永无Bug。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决.gitignore过滤规则不起作用问题</title>
      <link href="/2019/07/22/%E8%A7%A3%E5%86%B3.gitignore%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2019/07/22/%E8%A7%A3%E5%86%B3.gitignore%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在<code>Git</code>使用<code>.gitignore</code>进行过滤时不起作用</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后是一个<span class="string">&quot;.&quot;</span></span></span><br><span class="line">git rm -r --cached .</span><br></pre></td></tr></table></figure><p>如果出现：<strong>use -f to force removal</strong>，则使用<code>git rm -rf --cached .</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190722/1563764670532.png" alt="1563764670532"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 踩坑 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决IDEA中@Autowired抛红问题</title>
      <link href="/2019/07/16/%E8%A7%A3%E5%86%B3IDEA%E4%B8%AD-Autowired%E6%8A%9B%E7%BA%A2%E9%97%AE%E9%A2%98/"/>
      <url>/2019/07/16/%E8%A7%A3%E5%86%B3IDEA%E4%B8%AD-Autowired%E6%8A%9B%E7%BA%A2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在IDEA中通过<code>@Autowired</code>注入时在变量名下方一直有红色的标记线进行提示</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ul><li>在IDEA中：<strong>File</strong> -&gt; <strong>Settings</strong> 打开设置页面</li><li>搜索<code>inspections</code> -&gt; 搜索<code>autowiring</code> -&gt; <code>Autowiring for Bean Class</code> -&gt; 将<code>Error</code>修改为<code>Warning</code> -&gt; 点击<code>OK</code></li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190716/1563271187782.png" alt="1563271187782"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190716/1563271341095.png" alt="1563271341095"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10永久数字权利激活工具</title>
      <link href="/2019/07/06/win10%E6%B0%B8%E4%B9%85%E6%95%B0%E5%AD%97%E6%9D%83%E5%88%A9%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/07/06/win10%E6%B0%B8%E4%B9%85%E6%95%B0%E5%AD%97%E6%9D%83%E5%88%A9%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>win10查看激活到期时间：<code>win徽标+R</code> -&gt; 输入<code>slmgr.vbs -xpr</code>回车，等待几秒会出现显示win到期时间的弹框</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562379677031.png" alt="1562379677031"></p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>1、查看永久激活前电脑过期时间：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562379701854.png" alt="1562379701854"></p><p>2、下载激活工具</p><table><thead><tr><th>链接</th><th>解压密码</th></tr></thead><tbody><tr><td><a href="https://lanzoui.com/ibl0r2b">win10永久激活工具</a></td><td>xiongtianci.com</td></tr></tbody></table><p>3、打开<code>DigitalLicense.exe</code>激活软件，软件会自动识别你的系统，如果没有识别成功就在界面上部分<strong>右键</strong>-&gt;<strong>选择密钥</strong>，然后选择你系统对应的版本即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562381216391.png" alt="1562381216391"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562380497890.png" alt="1562380497890"></p><p>4、点击<strong>激活</strong>，控制台日志中出现<strong>成功地激活了产品</strong>字样就表示激活成功</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562380563334.png" alt="1562380563334"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562380670500.png" alt="1562380670500"></p><p>5、查看激活到期时间，显示<strong>计算机已永久激活</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190706/1562380717797.png" alt="1562380717797"></p>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新标准日本语App破解版(安卓)</title>
      <link href="/2019/07/03/%E6%96%B0%E6%A0%87%E5%87%86%E6%97%A5%E6%9C%AC%E8%AF%ADApp%E7%A0%B4%E8%A7%A3%E7%89%88-%E5%AE%89%E5%8D%93/"/>
      <url>/2019/07/03/%E6%96%B0%E6%A0%87%E5%87%86%E6%97%A5%E6%9C%AC%E8%AF%ADApp%E7%A0%B4%E8%A7%A3%E7%89%88-%E5%AE%89%E5%8D%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原链：<a href="https://www.52pojie.cn/thread-835388-1-1.html">https://www.52pojie.cn/thread-835388-1-1.html</a></p></blockquote><p>app只包含初级、中级部分，没有高级部分</p><table><thead><tr><th>链接</th><th>解压密码</th></tr></thead><tbody><tr><td><a href="https://ww.lanzous.com/ibl0ofg">新标准日本语App(安卓)</a></td><td>xiongtianci.com</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10日语输入法输入罗马字母n无法打出假名</title>
      <link href="/2019/07/03/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E8%BE%93%E5%85%A5%E7%BD%97%E9%A9%AC%E5%AD%97%E6%AF%8Dn%E6%97%A0%E6%B3%95%E6%89%93%E5%87%BA%E5%81%87%E5%90%8D/"/>
      <url>/2019/07/03/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E8%BE%93%E5%85%A5%E7%BD%97%E9%A9%AC%E5%AD%97%E6%AF%8Dn%E6%97%A0%E6%B3%95%E6%89%93%E5%87%BA%E5%81%87%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用win10输入法输入罗马字母<code>n</code>时，打出的结果为：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190703/1562135519625.png" alt="1562135519625"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>连续<strong>按两下n</strong>就可以打出<code>ん</code>或<code>ン</code>了<br>另：在有些情况<strong>输入一个n</strong>后直接输入打下一个假名，<code>ん</code>或<code>ン</code>也会随之显示出来</p>]]></content>
      
      
      <categories>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10日语输入法罗马音与假名不对应</title>
      <link href="/2019/07/03/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E7%BD%97%E9%A9%AC%E9%9F%B3%E4%B8%8E%E5%81%87%E5%90%8D%E4%B8%8D%E5%AF%B9%E5%BA%94/"/>
      <url>/2019/07/03/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E7%BD%97%E9%A9%AC%E9%9F%B3%E4%B8%8E%E5%81%87%E5%90%8D%E4%B8%8D%E5%AF%B9%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>win10中使用日语输入法时，输入罗马音<code>a</code>，打出的却是<code>ち</code>，输入其他罗马音也是这种情况<br>出现这种情况是因为你无意中输入方式设置成了<strong>假名输入</strong>，我们需要改成<strong>罗马字输入</strong></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在win10任务栏中的日语图标上：<code>右键</code> -&gt; <code>Input Method</code> -&gt; 勾选<code>Romaji Input</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190703/1562124157875.png" alt="1562124157875"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190703/1562124165162.png" alt="1562124165162"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://zhidao.baidu.com/question/151047919.html">https://zhidao.baidu.com/question/151047919.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重置MySQL自增id</title>
      <link href="/2019/07/01/%E9%87%8D%E7%BD%AEMySQL%E8%87%AA%E5%A2%9Eid/"/>
      <url>/2019/07/01/%E9%87%8D%E7%BD%AEMySQL%E8%87%AA%E5%A2%9Eid/</url>
      
        <content type="html"><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 删除所有数据</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"># 重置自增序列</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> auto_increment<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 删除<span class="keyword">user</span>表后重建表</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notepad++正则的使用</title>
      <link href="/2019/06/26/Notepad++%E6%AD%A3%E5%88%99%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/06/26/Notepad++%E6%AD%A3%E5%88%99%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="操作Notepad-正则"><a href="#操作Notepad-正则" class="headerlink" title="操作Notepad++正则"></a>操作Notepad++正则</h1><p>Notepad++使用正则替换的操作：<br><code>Ctrl+H</code> -&gt; 勾选<code>正则表达式</code> -&gt; 输入<code>查找目标</code>和<code>替换为</code> -&gt; <code>全部替换</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190626/1561512045175.png" alt="1561512045175"></p><p>比如现在需求是要删除文本中的空行，可能一行也可能是多行：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190626/1561511737526.png" alt="1561511737526"></p><p>使用正则<code>\n[\s| ]*\r</code>替换为空即可：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190626/1561512069776.png" alt="1561512069776"></p><p>结果：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190626/1561512104045.png" alt="1561512104045"></p><h1 id="正则汇总"><a href="#正则汇总" class="headerlink" title="正则汇总"></a>正则汇总</h1><table><thead><tr><th>正则</th><th align="left">描述</th></tr></thead><tbody><tr><td>\n[\s&amp;#124; ]*\r</td><td align="left">匹配空白行(n行)</td></tr><tr><td><code>^</code></td><td align="left">匹配每行开头</td></tr><tr><td><code>$</code></td><td align="left">匹配每行结尾</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 正则 </tag>
            
            <tag> Notepad++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS :hover选择器的使用</title>
      <link href="/2019/06/24/CSS-hover%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/06/24/CSS-hover%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p><code>:hover</code> <strong>选择器</strong>，用于选择鼠标指针浮动在上面的元素</p><p><code>:hover</code>选择器适用于所有元素</p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><h2 id="用法一"><a href="#用法一" class="headerlink" title="用法一"></a>用法一</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：当鼠标悬浮在a元素上时，a的背景颜色设置为黄色</p><h2 id="用法二"><a href="#用法二" class="headerlink" title="用法二"></a>用法二</h2><p>使用 a 控制其他块的样式</p><h3 id="子元素"><a href="#子元素" class="headerlink" title="子元素"></a>子元素</h3><p>使用 a 控制 a 的子元素 b ：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">b</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="兄弟元素"><a href="#兄弟元素" class="headerlink" title="兄弟元素"></a>兄弟元素</h3><p>使用 a 控制 a 的兄弟元素 c(同级元素)</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> + c &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="就近元素"><a href="#就近元素" class="headerlink" title="就近元素"></a>就近元素</h3><p>使用 a 控制 a 的就近元素 d</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> ~ d &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><code>:hover</code>用于选择鼠标悬停其上时的元素</p><ul><li>空格：控制子元素</li><li><code>+</code>：控制同级(兄弟)元素</li><li><code>~</code>：控制就近元素</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> CSS </tag>
            
            <tag> 选择器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeanCloud域名更换-恢复Sakura主题Valine评论</title>
      <link href="/2019/06/21/LeanCloud%E5%9F%9F%E5%90%8D%E6%9B%B4%E6%8D%A2-%E6%81%A2%E5%A4%8DSakura%E4%B8%BB%E9%A2%98Valine%E8%AF%84%E8%AE%BA/"/>
      <url>/2019/06/21/LeanCloud%E5%9F%9F%E5%90%8D%E6%9B%B4%E6%8D%A2-%E6%81%A2%E5%A4%8DSakura%E4%B8%BB%E9%A2%98Valine%E8%AF%84%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="LeanCloud域名更换"><a href="#LeanCloud域名更换" class="headerlink" title="LeanCloud域名更换"></a>LeanCloud域名更换</h2><p>使用<strong>Valine</strong>评论插件注册过<strong>LeanCloud</strong>的小伙伴们从昨天起应该都收到过一封邮件和一条短信，告知了<strong>LeanCloud对域名进行更换</strong>：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190621/1561110383597.png" alt="1561110383597"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190621/1561110973461.png" alt="1561110973461"></p><p>从而导致好多小伙伴们的Valine评论插件报错<code>Code -1: Request has been terminated</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Code -1: Request has been terminated</span><br><span class="line">Possible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.</span><br></pre></td></tr></table></figure><p>Valine插件作者在今天下午解决了这个问题：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190621/1561110735524.png" alt="1561110735524"></p><h2 id="恢复Valine评论"><a href="#恢复Valine评论" class="headerlink" title="恢复Valine评论"></a>恢复Valine评论</h2><p>博主的<strong>Hexo主题</strong>是<a href="https://github.com/mashirozx/Sakura/">Sakura</a><br>下面是博主恢复Valine评论的记录：</p><ul><li>1、打开文件<code>/themes/sakura/layout/_partial/footer.ejs</code></li><li>2、搜索<code>unpkg.com/valine@1.3.4/dist/Valine.min.js</code>，将此路径替换为<code>unpkg.com/valine@1.3.7/dist/Valine.min.js</code></li><li>3、将<code>&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</code><strong>删除</strong>或<strong>注释</strong>掉即可</li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190621/1561111361081.png" alt="1561111361081"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Octotree访问私有仓库：Error: Private repository</title>
      <link href="/2019/06/18/Octotree%E8%AE%BF%E9%97%AE%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%EF%BC%9AError-Private-repository/"/>
      <url>/2019/06/18/Octotree%E8%AE%BF%E9%97%AE%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%EF%BC%9AError-Private-repository/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在GitHub<strong>私有仓库</strong>中使用<strong>Octotree</strong>时出现下面情况：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560844399302.png" alt="1560844399302"></p><p>这个是因为我们需要在<strong>GitHub</strong>中给<strong>Octotree</strong>设置一个访问令牌</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在<strong>GitHub</strong>中：<strong>Settings</strong> -&gt; <strong>Developer settings</strong> -&gt; <strong>Personal access tokens</strong> -&gt; <strong>Generate new token</strong> 创建令牌</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845107107.png" alt="1560845107107"></p><p>设置名称<strong>Octotree browser extension</strong>（任意）：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845356974.png" alt="1560845356974"></p><p>勾选权限范围：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560846071313.png" alt="1560846071313"></p><p>点击<strong>Generate token</strong>创建令牌：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845423161.png" alt="1560845423161"></p><p>点击复制按钮复制令牌<strong>token</strong>（<strong>注意：这个token值只会显示一次</strong>）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845596169.png" alt="1560845596169"></p><hr><p>在<strong>Octotree</strong>中点击<strong>设置</strong>按钮：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845805967.png" alt="1560845805967"></p><p>将你刚刚复制的<strong>token</strong>粘贴到<strong>GitHub access token</strong>文本框中，点击<strong>Apply settings</strong>，刷新页面即可：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190618/1560845892967.png" alt="1560845892967"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li><strong>Octotree</strong>将<strong>令牌token</strong>存储在<strong>浏览器缓存</strong>中，如果将浏览器存储令牌token的缓存清除后，Octotree将会失去私有仓库的访问权限，需重新设置令牌token。<a href="https://github.com/ovity/octotree/issues/717">https://github.com/ovity/octotree/issues/717</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google扩展 </tag>
            
            <tag> Octotree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电影资源网址-珍藏</title>
      <link href="/2019/06/15/%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E7%BD%91%E5%9D%80-%E7%8F%8D%E8%97%8F/"/>
      <url>/2019/06/15/%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E7%BD%91%E5%9D%80-%E7%8F%8D%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="影视讯息"><a href="#影视讯息" class="headerlink" title="影视讯息"></a>影视讯息</h1><ul><li><a href="http://movie.douban.com/">豆瓣电影</a></li><li><a href="http://www.imdb.com/">IMDb</a></li><li><a href="http://www.rottentomatoes.com/">烂番茄</a></li><li><a href="https://www.boxofficemojo.com/">Box Office Mojo</a></li><li><a href="http://www.cbooo.cn/">实时票房</a></li><li><a href="https://www.boxofficemojo.com/">Box Office Mojo</a></li><li><a href="http://www.1905.com/">1905</a></li><li><a href="http://www.mtime.com/">时光网</a></li><li><a href="http://www.metacritic.com/">MTC</a></li><li><a href="http://tvfantasy.net/">天涯小筑</a></li><li><a href="https://www.criterion.com/">电影DVD光盘资源分享网</a></li><li><a href="http://www.atmovies.com.tw/movie/">台湾电影资料站</a></li><li><a href="https://tw.movies.yahoo.com/index.html">雅虎电影</a></li><li><a href="http://www.impawards.com/">电影海报</a></li></ul><h1 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h1><ul><li><a href="https://www.zxzjs.com/">在线之家</a></li><li><a href="http://www.tianjiyy123.com/">田鸡影院</a></li><li><a href="http://www.dm530.top/">风车动漫</a></li></ul><h1 id="新电影"><a href="#新电影" class="headerlink" title="新电影"></a>新电影</h1><h2 id="熟肉"><a href="#熟肉" class="headerlink" title="熟肉"></a>熟肉</h2><ul><li><a href="https://www.bd-film.cc/" target="_blank"><font color="#3886fc">BD影视</font></a></li><li><a href="http://www.dytt8.net/"><strong>电影天堂</strong></a></li><li><a href="http://www.yyetss.com/"><strong>人人影视</strong></a></li><li><a href="http://dianying.fm/discovery/priest-2011/"><strong>电影FM</strong></a></li><li><a href="http://www.movierightaway.com/"><strong>第一时间电影</strong></a></li><li><a href="http://www.panpanso.com/"><strong>盘盘搜</strong></a></li><li><a href="http://www.chapaofan.com/">泡饭影视</a></li><li><a href="https://www.wukongshipin.com/">悟空视频</a></li><li><a href="https://gaoqing.fm/">高清电台</a></li><li><a href="https://www.19kan.com/">19影视</a></li><li><a href="https://www.bttwo.com/">BTtwo</a></li><li><a href="https://www.piaohua.com/">飘花资源网</a></li><li><a href="http://www.hao6v.com/">6V电影网</a></li><li><a href="http://www.ed2000.com/">ED2000</a></li><li><a href="http://www.mp4ba.com/">高清MP4</a></li><li><a href="https://www.uump4.net/forum-2.htm">悠悠MP4</a></li><li><a href="https://aixiadianying.com/">爱下电影</a></li><li><a href="https://www.ljmovie.com/">蓝鲸电影</a></li><li><a href="http://www.sofamv.com/">沙发电影网</a></li><li><a href="https://www.yinfans.me/">音范丝</a></li><li><a href="http://www.dygang.com/">电影港</a></li><li><a href="http://www.gagays.xyz/site/index">嘎嘎影视</a></li><li><a href="http://bbs.btwuji.com/thread.php?fid=8">无极论坛</a></li><li><a href="http://www.hdmayi.com/forum-38-1.html">帝国出品</a></li><li><a href="http://pianyuan.net/">片源网</a></li><li><a href="http://9090.tv/">影视看看</a></li><li><a href="http://gaoqing.la/">中国高清网</a></li><li><a href="http://www.hdbee.net/movie"><del>电影蜜蜂</del></a></li></ul><h2 id="生肉"><a href="#生肉" class="headerlink" title="生肉"></a>生肉</h2><ul><li><a href="https://piratebayblocked.com/"><strong>海盗湾</strong></a></li><li><a href="https://zooqle.com/"><strong>Zooqle</strong></a></li><li><a href="https://torrentgalaxy.to/"><strong>TorrentGalaxy</strong></a></li><li><a href="https://rarbg.to/torrents.php">RARBG</a></li><li><a href="https://katcr.co/category/movies/page/">kat片源</a></li><li><a href="https://eztv.ag/">eztv美剧</a></li><li><a href="https://limetorrents.unblocked.lc/browse-torrents/Movies/">lime</a></li><li><a href="https://monova.org/">Monova</a></li><li><a href="http://rutracker.org/forum/index.php">俄站</a></li></ul><h1 id="美剧"><a href="#美剧" class="headerlink" title="美剧"></a>美剧</h1><ul><li><a href="http://www.orangesub.com/"><strong>Orange字幕组</strong></a></li><li><a href="https://www.meijutt.com/"><strong>美剧天堂</strong></a></li><li><a href="https://www.meiju.net/new/">爱美剧</a></li><li><a href="http://www.dysfz.cc/key/%E7%BE%8E%E5%89%A7/">电影首发站美剧</a></li><li><a href="http://www.meijuniao.com/meiju/">美剧鸟</a></li><li><a href="http://www.meijuhui.net/">美剧汇</a></li><li><a href="http://www.zmz2019.com/">字幕组</a></li><li><a href="http://cili001.com/">磁力站</a></li><li><a href="http://www.ttzmz.vip/">天天美剧</a></li><li><a href="http://videos.yizhansou.com/">美剧-一站搜</a></li><li><a href="http://www.kanmeiju.net/">看美剧</a></li><li><a href="http://www.yuzijiang.cc/">鱼子酱</a></li><li><a href="http://dbfansub.com/">电波字幕组</a></li><li><a href="http://www.icezmz.com/series">冰冰字幕组</a></li><li><a href="http://bbs.xuanzmz.cc/">玄字幕组</a></li><li><a href="https://fantopia.club/">Fantopia字幕组</a></li><li><a href="https://djzmz.org/">大家字幕组</a></li></ul><h1 id="动漫"><a href="#动漫" class="headerlink" title="动漫"></a>动漫</h1><ul><li><a href="http://mikanani.me/">密柑计划</a></li><li><a href="https://www1.9anime.nl/home">9ANIME</a> *生肉</li><li><a href="https://bangumi.moe/">萌番组</a></li><li><a href="http://www.dilidili.name/">D站</a></li><li><a href="http://www.36dm.com/">简单动漫</a></li><li><a href="http://www.comicat.org/">漫猫动漫</a></li><li><a href="https://nyaso.com/"><del>喵搜</del></a></li></ul><h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><ul><li><a href="https://share.dmhy.org/">动漫花园</a></li></ul><h1 id="韩剧"><a href="#韩剧" class="headerlink" title="韩剧"></a>韩剧</h1><ul><li><a href="http://www.duduhanju.net/">嘟嘟韩剧网</a></li><li><a href="http://www.hanju.cc/">韩剧网</a></li><li><a href="http://www.hanmi520.com/forum-8-1.html">韩迷字幕组</a></li><li><a href="http://www.hanfan.cc/variety/">韩国综艺</a></li><li><a href="http://www.zzkorea.com/forum-67-1.html">住在韩国</a></li></ul><h1 id="日剧"><a href="#日剧" class="headerlink" title="日剧"></a>日剧</h1><ul><li><a href="https://neets.cc/category?country=japan&type=tv"><strong>neets搜索站-日剧</strong></a></li><li><a href="https://sub.kamigami.org/category/drama/%E8%AF%B8%E7%A5%9E%E6%97%A5%E5%89%A7%E7%BB%84"><strong>诸神字幕组-日剧</strong></a></li><li><a href="http://www.zmz2019.com/resourcelist?channel=tv&area=%E6%97%A5%E6%9C%AC">字幕组-日剧</a></li><li><a href="https://www.novipnoad.com/tv/japan/">NO视频</a></li><li><a href="http://www.hideystudio.com/drama/">隐社导航</a></li><li><a href="http://www.doki8.com/">心动日剧</a></li><li><a href="https://blog.aipanpan.com/">日剧网</a></li><li><a href="https://discuss.huayiwork.com/t/%E6%97%A5%E5%89%A7"><a href="https://discuss.huayiwork.com/">花译工坊</a></a></li><li><a href="http://zhuixinfan.com/main.php">追新番</a></li><li><a href="http://www.mytvbt.net/forumdisplay.php?fid=6&page=1">日菁字幕组</a></li><li><a href="http://forum.6cn.org/forum-105-1.html">第六感</a></li><li><a href="https://www.tokyonothot.com/drama">东京不够热</a></li></ul><h1 id="综艺"><a href="#综艺" class="headerlink" title="综艺"></a>综艺</h1><ul><li><a href="http://www.zybus.net/">综艺巴士</a></li><li></li></ul><h1 id="纪录片"><a href="#纪录片" class="headerlink" title="纪录片"></a>纪录片</h1><ul><li><a href="http://www.laojilu.com/">老纪录</a></li><li><a href="http://www.jlpcn.net/">纪录片天地</a></li><li><a href="http://docuwiki.net/index.php?title=Main_Page"><del>wiki</del></a></li></ul><h2 id="科学上网-1"><a href="#科学上网-1" class="headerlink" title="科学上网"></a>科学上网</h2><ul><li><a href="http://www.jlpzj.net/forum.php">纪录片之家</a></li><li><a href="https://sub.kamigami.org/category/documentary">纪录片-诸神字幕组</a></li></ul><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><h2 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h2><ul><li><a href="https://neets.cc/">neets搜索站</a></li></ul><h2 id="网盘搜索"><a href="#网盘搜索" class="headerlink" title="网盘搜索"></a>网盘搜索</h2><ul><li><a href="http://www.panduoduo.net/"><strong>盘多多</strong></a></li><li><a href="http://magnet.chongbuluo.com/">一网打尽</a></li><li><a href="https://www.fqsousou.com/">番茄搜搜</a></li><li><a href="http://www.slimego.cn/">史莱姆导航</a></li><li><a href="http://tansuo233.com/">探索云盘搜索</a></li><li><a href="http://www.panc.cc/">胖次</a></li><li><a href="http://www.pansoso.com/">盘搜搜</a></li><li><a href="https://www.panww.com/">盘窝窝</a></li><li><a href="http://uzi8.cn/">百度网盘搜索</a></li><li><a href="https://wp7.net/">网盘搜搜</a></li><li><a href="http://www.quzhuanpan.com/source/loadSourceList.do?type=1">去转盘网</a></li><li><a href="https://www.lingfengyun.com/">凌风云搜索</a></li><li><a href="http://www.panuso.com/">盘优搜</a></li><li><a href="http://www.sosoyunpan.com/">搜搜云盘</a></li><li><a href="http://www.soyunpan.com/">搜云盘</a></li><li><a href="http://www.58wangpan.com/">58搜索</a></li><li><a href="https://www.56wangpan.com/">百度网盘搜索</a></li><li><a href="http://www.kengso.com/">坑搜网</a></li><li><a href="http://www.sopanxia.com/">搜盘侠</a></li></ul><h2 id="BT搜索"><a href="#BT搜索" class="headerlink" title="BT搜索"></a>BT搜索</h2><ul><li><a href="https://cilijuhe.com/"><strong>磁力聚合搜索神器</strong></a></li><li><a href="http://www.btbuluo.com/"><strong>BT部落天堂</strong></a></li><li><a href="https://www.cilimao.space/">磁力猫</a></li><li><a href="https://www.cilishu.live/">磁力鼠</a></li><li><a href="https://www.wancisou.me/">万磁搜</a></li><li><a href="http://www.1btbtt.com/">BT之家</a></li><li><a href="%5Bhttp://liubi.com%5D(http://liubi.com/)">流弊网</a></li><li><a href="https://www.1080.cn/">蓝光电影网</a></li><li><a href="http://oabt005.com/home.html">磁力站</a></li><li><a href="https://www.chapianyuan.com/">查片源</a></li><li><a href="https://www.torrentdownload.ch/">torrentdownload</a></li><li><a href="http://diggbt.biz/">Diggbt</a></li><li><a href="http://kikibt.net/">kikiBT</a></li><li><a href="http://zhongzicili.net/">种子磁力</a></li><li><a href="http://v.yizhansou.com/">一站搜</a></li><li><a href="https://www.xiaobd.net/">小不点搜索</a></li></ul><h2 id="科学上网-2"><a href="#科学上网-2" class="headerlink" title="科学上网"></a>科学上网</h2><ul><li><a href="https://cn.torrentkitty.tv/search/">Torrent Kitty</a></li></ul><h1 id="外挂字幕库"><a href="#外挂字幕库" class="headerlink" title="外挂字幕库"></a>外挂字幕库</h1><ul><li><a href="http://www.zimuku.net/">字幕库</a></li><li><a href="http://www.opensubtitles.org/zh/xltf-on">opensubtitles</a></li><li><a href="http://sub.makedie.me/">伪射手</a></li><li><a href="http://www.r3sub.com/">R3字幕</a></li><li><a href="http://www.hd.club.tw/forum-25-1.html">台湾精研社R3官字幕</a></li><li><a href="http://www.zmtiantang.com/">字幕天堂</a></li></ul><h2 id="科学上网-3"><a href="#科学上网-3" class="headerlink" title="科学上网"></a>科学上网</h2><ul><li><a href="http://subhd.com/">SUBHD</a></li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li><a href="https://www.vmovier.com/">V电影</a>，国内优质短片分享平台，实时分享国内外各类短片，V电影专注于短片领域，收录的国内外优质短片作品近万部，被媒体称为中国版的VIMEO</li><li><a href="http://www.fangying.tv/"><del>放映TV</del></a>，网页简洁美观，动态酷炫，主页以大搜索框属人耳目，放映TV分类详细，每部影片的导演、主演、类型和上映时间具有详细数据，并采用的<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%25E8%25B1%2586%25E7%2593%25A3">豆瓣</a>和<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/IMDB">IMDB</a>的双重评分记录，每部影片至多有8家以内的主流视频网站云点播功能。</li><li><a href="https://www.moulem.com/">某柠檬</a></li></ul><hr><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.cryosky.com/2017/10/15/%E5%B8%B8%E7%94%A8%E5%90%84%E7%B1%BB%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E7%BD%91%E5%9D%80/">常用各类电影资源网址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora锚点-页内跳转</title>
      <link href="/2019/06/13/Typora%E9%94%9A%E7%82%B9-%E9%A1%B5%E5%86%85%E8%B7%B3%E8%BD%AC/"/>
      <url>/2019/06/13/Typora%E9%94%9A%E7%82%B9-%E9%A1%B5%E5%86%85%E8%B7%B3%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><p><strong>锚点：</strong>通俗简单地说，比如一篇很长的文章，你想按分段精确来看，那就可以用到锚点了。</p><p>锚点的用法有两种，但性质同样，都是通过链接标签<code>&lt;a&gt;&lt;/a&gt;</code>以及其<code>href</code>属性实现的：<br>一种是：页内跳转<br>一种是：跳到其他页面的某个指定区域</p><p>要想使用锚点必须在路径<code>href</code>值中使用<code>#</code></p><h2 id="的作用"><a href="#的作用" class="headerlink" title="# 的作用"></a><code>#</code> 的作用</h2><p><code>#</code>代表网页中的一个位置</p><p>其右面的字符，就是该位置的标识符。比如，<code>http://www.example.com/index.html#print</code>就代表网页index.html的<code>print</code>位置。浏览器读取这个URL后，会自动将print位置滚动至可视区域。<br><code>href</code>中<code>#</code>后面的值要跟<code>name</code>或<code>id</code>一致，</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打造个性超赞博客Hexo+Next+GitHub Pages的超深度优化</title>
      <link href="/2019/06/13/%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E8%B6%85%E8%B5%9E%E5%8D%9A%E5%AE%A2Hexo-NexT-GitHub-Pages%E7%9A%84%E8%B6%85%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%8C%96/"/>
      <url>/2019/06/13/%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E8%B6%85%E8%B5%9E%E5%8D%9A%E5%AE%A2Hexo-NexT-GitHub-Pages%E7%9A%84%E8%B6%85%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：<a href="https://io-oi.me/">reuixiy</a></p><p>原文：<a href="https://io-oi.me/tech/hexo-next-optimization/">https://io-oi.me/tech/hexo-next-optimization/</a></p><p>theme-next：<a href="https://github.com/xiongtianci-tc/hexo-theme-next">https://github.com/xiongtianci-tc/hexo-theme-next</a></p><p>PS：此博文是博主在使用hexo建站时看过的最详细的一篇，由于原作者<a href="https://io-oi.me/">reuixiy</a>在半个月前将博客主题进行了重构，故将此博文转载并附上我原先fork的主题地址，以便日后食用~ 侵权立删</p></blockquote><h1 id="必读-写在前面"><a href="#必读-写在前面" class="headerlink" title="必读 写在前面"></a>必读 写在前面</h1><p>本文主要内容是 NexT 主题的个性化定制和一些细节的优化。搭建的过程，已有的优化，Markdown 的使用，都直接贴出大佬的文章链接。</p><p>首先肯定是感谢各位大佬的文章，我一个小白，没学 HTML，没学 CSS，没学 JavaScript，连 C 也还没学会……如果你是一个和我一样的小白，且对本博客感觉还蛮满意，恭喜你！看完这篇文章，你自己也可以拥有一个这样的博客啦！</p><p>给小白（像我一样，也许还有完美主义和强迫症😂）却想搭建个性化博客提供参考，是我写这篇文章的主要目的，所以如果本文有幸被大佬读到，文中的不足还请大佬见谅。</p><p>本文参考的文章都会直接给出原文链接或者以注脚的形式标记出处，但 Google 参考了实在太多太多了，有些我当时没做记录，如有遗漏，欢迎指出。另外，有一些优化的很好的博客，有很多很酷的功能，我当时没收藏，后来非常后悔，提醒大家如果看到很赞的博客，一定要马上收藏。</p><h2 id="重要的定义"><a href="#重要的定义" class="headerlink" title="重要的定义"></a>重要的定义</h2><p>了解定义，防止懵逼和大脑混乱。这两个文件名字都叫<code>_config.yml</code>，容易乱。</p><p>1）<strong>站点</strong>配置文件，位于站点文件夹根目录内<br><code>~/blog/_config.yml</code></p><p>2）<strong>主题</strong>配置文件，位于主题文件夹根目录内<br><code>~/blog/themes/next/_config.yml</code></p><h2 id="我操作的环境"><a href="#我操作的环境" class="headerlink" title="我操作的环境"></a>我操作的环境</h2><p>留这个，是因为有时我 Google 教程，发现按流程走，却达不到应有的效果。故当按照这篇的某流程却达不到预期效果，可以考虑考虑这个，然后自己灵活点去 Google 解决方案。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [2017.12.13 更新]</span></span><br><span class="line"><span class="string">/*</span> <span class="string">调试浏览器</span> <span class="string">*/</span></span><br><span class="line"><span class="string">Google</span> <span class="string">Chrome</span> <span class="string">Version</span> <span class="number">62.0</span><span class="number">.3202</span><span class="number">.94</span> <span class="string">(Official</span> <span class="string">Build)</span> <span class="string">(64-bit)</span></span><br><span class="line"></span><br><span class="line"><span class="string">/*</span> <span class="string">版本信息</span> <span class="string">*/</span></span><br><span class="line"><span class="string">root@kali:~/blog#</span> <span class="string">hexo</span> <span class="string">version</span></span><br><span class="line"><span class="string">(node:6675)</span> [<span class="string">DEP0061</span>] <span class="attr">DeprecationWarning:</span> <span class="string">fs.SyncWriteStream</span> <span class="string">is</span> <span class="string">deprecated.</span></span><br><span class="line"><span class="attr">hexo:</span> <span class="number">3.4</span><span class="number">.1</span></span><br><span class="line"><span class="attr">hexo-cli:</span> <span class="number">1.0</span><span class="number">.4</span></span><br><span class="line"><span class="attr">os:</span> <span class="string">Linux</span> <span class="number">4.13</span><span class="number">.0</span><span class="string">-kali1-amd64</span> <span class="string">linux</span> <span class="string">x64</span></span><br><span class="line"><span class="attr">http_parser:</span> <span class="number">2.7</span><span class="number">.0</span></span><br><span class="line"><span class="attr">node:</span> <span class="number">8.3</span><span class="number">.0</span></span><br><span class="line"><span class="attr">v8:</span> <span class="number">6.0</span><span class="number">.286</span><span class="number">.52</span></span><br><span class="line"><span class="attr">uv:</span> <span class="number">1.13</span><span class="number">.1</span></span><br><span class="line"><span class="attr">zlib:</span> <span class="number">1.2</span><span class="number">.11</span></span><br><span class="line"><span class="attr">ares:</span> <span class="number">1.10</span><span class="number">.1</span><span class="string">-DEV</span></span><br><span class="line"><span class="attr">modules:</span> <span class="number">57</span></span><br><span class="line"><span class="attr">openssl:</span> <span class="number">1.0</span><span class="string">.2l</span></span><br><span class="line"><span class="attr">icu:</span> <span class="number">59.1</span></span><br><span class="line"><span class="attr">unicode:</span> <span class="number">9.0</span></span><br><span class="line"><span class="attr">cldr:</span> <span class="number">31.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">tz:</span> <span class="string">2017b</span></span><br><span class="line"></span><br><span class="line"><span class="string">/*</span> <span class="string">依赖包</span> <span class="string">*/</span></span><br><span class="line"><span class="string">root@kali:~/blog#</span> <span class="string">cat</span> <span class="string">package.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;hexo-site&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;:</span> <span class="string">&quot;0.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;private&quot;:</span> <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;hexo&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;:</span> <span class="string">&quot;3.4.1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;gulp&quot;:</span> <span class="string">&quot;^3.9.1&quot;</span>, <span class="string">/*</span> <span class="string">压缩代码</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;gulp-htmlclean&quot;:</span> <span class="string">&quot;^2.7.15&quot;</span>, <span class="string">/*</span> <span class="string">压缩代码</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;gulp-htmlmin&quot;:</span> <span class="string">&quot;^3.0.0&quot;</span>, <span class="string">/*</span> <span class="string">压缩代码</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;gulp-minify-css&quot;:</span> <span class="string">&quot;^1.2.4&quot;</span>, <span class="string">/*</span> <span class="string">压缩代码</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;:</span> <span class="string">&quot;^3.4.1&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;:</span> <span class="string">&quot;^0.3.1&quot;</span>, <span class="string">/*</span> <span class="string">Git</span> <span class="string">部署工具</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-filter-github-emojis&quot;:</span> <span class="string">&quot;^1.4.3&quot;</span>, <span class="string">/*</span> <span class="string">emoji</span> <span class="string">支持</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-footnotes&quot;:</span> <span class="string">&quot;^1.0.1&quot;</span>, <span class="string">/*</span> <span class="string">注脚</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;:</span> <span class="string">&quot;^0.1.5&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;:</span> <span class="string">&quot;^0.1.3&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-feed&quot;:</span> <span class="string">&quot;^1.2.2&quot;</span>, <span class="string">/*</span> <span class="string">RSS</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index-pin-top&quot;:</span> <span class="string">&quot;^0.2.2&quot;</span>, <span class="string">/*</span> <span class="string">替代默认安装的，支持文章置顶</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-searchdb&quot;:</span> <span class="string">&quot;^1.0.8&quot;</span>, <span class="string">/*</span> <span class="string">本地搜索</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-sitemap&quot;:</span> <span class="string">&quot;^1.2.0&quot;</span>, <span class="string">/*</span> <span class="string">生成</span> <span class="string">sitemap.xml，利于</span> <span class="string">SEO</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;:</span> <span class="string">&quot;^0.2.0&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;:</span> <span class="string">&quot;^0.3.0&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;:</span> <span class="string">&quot;^0.3.0&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;:</span> <span class="string">&quot;^0.3.1&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;:</span> <span class="string">&quot;^0.2.0&quot;</span>, <span class="string">/*</span> <span class="string">默认安装</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-tag-aplayer&quot;:</span> <span class="string">&quot;^2.0.5&quot;</span>, <span class="string">/*</span> <span class="string">音乐播放插件，支持歌词</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-tag-dplayer&quot;:</span> <span class="string">&quot;^0.2.1&quot;</span>, <span class="string">/*</span> <span class="string">视频播放插件，支持弹幕</span> <span class="string">*/</span></span><br><span class="line">    <span class="attr">&quot;hexo-wordcount&quot;:</span> <span class="string">&quot;^3.0.2&quot;</span> <span class="string">/*</span> <span class="string">字数统计</span> <span class="string">*/</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">/*</span> <span class="string">主题NexT版本</span> <span class="string">*/</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">5.1</span><span class="number">.3</span></span><br><span class="line"></span><br><span class="line"><span class="string">/*</span> <span class="string">优化主题NexT的设计版式</span> <span class="string">*/</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br></pre></td></tr></table></figure><h1 id="开始-搭建博客"><a href="#开始-搭建博客" class="headerlink" title="开始 搭建博客"></a>开始 搭建博客</h1><p>终于进入正文了！但是这个我却不打算写，因为看到了一些很好的文章，这里直接给出这些文章的链接🌚～</p><h2 id="在本地安装-Hexo"><a href="#在本地安装-Hexo" class="headerlink" title="在本地安装 Hexo"></a>在本地安装 Hexo</h2><p>直接参考 Hexo 官方文档，毕竟是<a href="https://hexo.io/zh-cn/docs/">官方文档</a>。安装好 Hexo 后，先任意目录新建个文件夹，名字可以为 blog，然后进入这个文件夹，输入命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>等一会，如果出现橙色的 <em>WARN</em> 没关系，只要不出现红色的 <em>ERROR</em> 就行。好了后，输入命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>然后点开 <a href="http://localhost:4000/">http://localhost:4000/</a> ，恭喜你！已经在本地搭建好博客了(๑•̀ㅂ•́)و✧！距离成功只差下一步——部署博客到 GitHub Pages 了～</p><h2 id="部署博客到-GitHub-Pages"><a href="#部署博客到-GitHub-Pages" class="headerlink" title="部署博客到 GitHub Pages"></a>部署博客到 GitHub Pages</h2><p><a href="https://pages.github.com/">GitHub Pages</a> 是开源协作社区 GitHub 的一个服务，将博客部署到它上面再合适不过了。</p><table><thead><tr><th>问题</th><th>解答</th></tr></thead><tbody><tr><td>为什么要部署到 GitHub Pages 上？</td><td>首先免费，其次省心，最后可以学习使用 GitHub。</td></tr><tr><td>GitHub Pages 有容量限制吗？</td><td>有，由 <a href="https://help.github.com/articles/what-is-github-pages/">What is GitHub Pages?</a> 可知：大小限制为 1GB，一个月 100GB 流量。</td></tr><tr><td>超出限制的容量怎么办？</td><td>讲真，如果图片音乐视频等大文件都放在<a href="https://www.qiniu.com/">七牛云 KODO</a>、<a href="https://www.aliyun.com/product/oss">阿里云 OSS</a> 或其它云存储上，那么压根不用担心，因为我的博客现在<code>[2017.11.17]</code>也才用了 6.73MB 😅，所以无需担心。</td></tr><tr><td>国内访问速度行不行，有必要同时部署在 <a href="https://coding.net/">Coding</a> 上吗？</td><td>个人感觉完全没必要，自己不用梯子时，感觉访问速度可以，毕竟站点的大文件都是放在了云存储上。</td></tr><tr><td>我可以用自己的域名吗？</td><td>可以，并且原生支持 https，教程见<a href="https://io-oi.me/tech/custom-domains-on-github-pages.html">这篇文章</a>。</td></tr></tbody></table><p>注册 GitHub 帐号和创建 Repository 请查看<a href="https://yangbingdong.com/2017/build-blog-hexo-base/#GitHub">这篇文章</a>，之后在<strong>站点</strong>文件夹根目录，安装 Git 部署插件（以后安装插件都先到这个目录），输入下面命令回车：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后，打开<strong>站点</strong>文件夹根目录下的<strong>站点</strong>配置文件，编辑：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/_config.yml</span><br><span class="line"># URL</span><br><span class="line">url: https://reuixiy.github.io/</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.省略……</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">-  type:</span><br><span class="line">+  type: git</span><br><span class="line">+  repository: https://github.com/reuixiy/reuixiy.github.io.git</span><br><span class="line">+  branch: master</span><br></pre></td></tr></table></figure><p>将其中的<code>reuixiy</code>改成你的 GitHub 注册的帐号名就行，然后执行下面的命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo</span><br></pre></td></tr></table></figure><p>输入你的 GitHub 的用户名和密码，成功后复制<code>https://帐号名.github.io/</code>到浏览器打开就行。看！这就是你的博客了，只要能连接到互联网，就能随时查看它(๑•̀ㅂ•́)و✧！</p><p>当然，如果你不想每次都输入用户名和密码，不想每次更新时，在 GitHub 上显示<code>invalid-email-address</code>，可以按上面所提的那篇文章操作。</p><h2 id="更新提示（可以最后看）"><a href="#更新提示（可以最后看）" class="headerlink" title="更新提示（可以最后看）"></a>更新提示（可以最后看）</h2><p>更新会有不确定因素，即讨厌又麻烦，但是不更新又怎么能享受新功能呢😑…</p><h3 id="其它更新"><a href="#其它更新" class="headerlink" title="其它更新"></a>其它更新</h3><p>1）npm 更新全局安装的包：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update -g</span><br></pre></td></tr></table></figure><p>2）npm 更新<strong>站点</strong>文件夹根目录下安装的依赖包：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm update</span><br></pre></td></tr></table></figure><p>3）更新 npm 它自己：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure><p>4）更新 Node.js 到最新版：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install n -g</span><br><span class="line"></span><br><span class="line">n latest</span><br></pre></td></tr></table></figure><h3 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h3><p>进入<strong>主题</strong>文件夹根目录，然后<code>git pull</code>，发现报错，怎么解决呢？可以先浏览<a href="http://www.01happy.com/git-resolve-conflicts/">这篇文章</a>，然后参考我的操作。</p><p>先到<strong>主题</strong>文件夹根目录：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>会发现报错，由于我们更改了相关文件，更新不成功，所以要将本地的所有修改先暂时存储起来：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">git stash</span><br></pre></td></tr></table></figure><p>然后再试一下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>可以了吧，接下来还原暂时存储的内容（即保存我们的所有修改）：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>如果报<code>CONFLICT</code>，是因为 Git 无法确定一些改动，所以要我们手动解决文件中冲突的部分，这个比较麻烦，可以参考我下面的流程。</p><p>首先打开报<code>CONFLICT</code>的文件，Ctrl + F 搜索<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes</code>，查看从此处到<code>=======</code>之间保存的代码，回忆一下自己当时更改了什么，是为了达到什么功能。</p><p>然后查看<code>=======</code>到<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream</code>之间更新的代码，与下面保存的代码进行对比（也请浏览下所标出代码前后的代码）：</p><ol><li>如果改动较大，可能是主题增加了新功能，建议保留更新的代码，然后更改一下，达到自己想要在保存的代码中实现的功能，最后删除保存的代码。</li><li>如果改动较小，建议还是保留更新的代码，然后更改一下，最后删除保存的代码。</li></ol><p>注意：要是自己不确定，一定记得将<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream</code>到<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes</code>之间的代码另存备份，然后进行调试，直到最后确定没有问题。</p><p>最后：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">root@kali:~/blog/themes/next# git pull</span><br><span class="line">error: Pulling is not possible because you have unmerged files.</span><br><span class="line">hint: Fix them up in the work tree, and then use &#x27;git add/rm &lt;file&gt;&#x27;</span><br><span class="line">hint: as appropriate to mark resolution and make a commit.</span><br><span class="line">fatal: Exiting because of an unresolved conflict.</span><br></pre></td></tr></table></figure><p>哇，又报错了😂😂😂，咋办？</p><p>先查看：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">root@kali:~/blog/themes/next# git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is up to date with &#x27;origin/master&#x27;.</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">modified:   layout/_custom/header.swig</span><br><span class="line">modified:   layout/_custom/sidebar.swig</span><br><span class="line">modified:   layout/_layout.swig</span><br><span class="line">modified:   layout/category.swig</span><br><span class="line">modified:   layout/tag.swig</span><br><span class="line">modified:   source/css/_common/components/post/post-meta.styl</span><br><span class="line">modified:   source/css/_common/components/post/post-nav.styl</span><br><span class="line">modified:   source/css/_common/scaffolding/base.styl</span><br><span class="line">modified:   source/css/_custom/custom.styl</span><br><span class="line">deleted:    source/images/avatar.gif</span><br><span class="line">modified:   source/lib/Han/dist/han.min.css</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span><br><span class="line"></span><br><span class="line">both modified:   _config.yml</span><br><span class="line">both modified:   languages/zh-Hans.yml</span><br><span class="line">both modified:   layout/_macro/post-copyright.swig</span><br><span class="line">both modified:   layout/_macro/post.swig</span><br><span class="line">both modified:   layout/_macro/sidebar.swig</span><br><span class="line">both modified:   layout/_partials/footer.swig</span><br><span class="line">both modified:   layout/page.swig</span><br><span class="line">both modified:   source/css/_variables/base.styl</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">layout/_macro/passage-end-tag.swig</span><br><span class="line">source/js/src/love.js</span><br></pre></td></tr></table></figure><p>看下面<code>Unmerged paths</code>，说<code>git reset HEAD &lt;file&gt;...</code>来取消修改（大概），<code>git add &lt;file&gt;...</code>来 mark 决定（大概），我们当然要保存这些文件的更改，所以：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">root@kali:~/blog/themes/next# git add _config.yml languages/zh-Hans.yml layout/_macro/post-copyright.swig layout/_macro/post.swig layout/_macro/sidebar.swig layout/_partials/footer.swig layout/page.swig source/css/_variables/base.styl layout/_macro/passage-end-tag.swig source/js/src/love.js</span><br></pre></td></tr></table></figure><p>顺便把新加的<code>passage-end-tag.swig</code>和<code>love.js</code>也加进去，最后再来试一下吧：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/next/</span></span><br><span class="line">root@kali:~/blog/themes/next# git pull</span><br><span class="line">Already up to date.</span><br></pre></td></tr></table></figure><p>哇，成功更新主题！</p><p>注意：更新有风险，一定要谨慎处理文件中冲突的部分！另，如果更新 NexT 主题后，配置文件有些新功能不会配置，可以查看 <a href="https://github.com/iissnan/hexo-theme-next/releases">Releases</a>（<a href="https://github.com/theme-next/hexo-theme-next/releases">最新版</a>）页面，去里面找说明。</p><h1 id="优化-基本功能配置"><a href="#优化-基本功能配置" class="headerlink" title="优化 基本功能配置"></a>优化 基本功能配置</h1><p>通过上面的折腾，你应该能够在自己的 GitHub Pages 上看到自己的博客了，接下来就是配置和增加功能，如阅读统计、加上评论和安装插件啥的，还有就是添加一些博客的基本信息，这些配置建议在写文章之前先折腾好。</p><p>基本功能配置大部分就是改两个文件，都叫<code>_config.yml</code>，文章的<a href="https://io-oi.me/tech/hexo-next-optimization.html#%E9%87%8D%E8%A6%81%E7%9A%84%E5%AE%9A%E4%B9%89">开头位置</a>已告诉大家。我觉得与其将两个文件中的每点都分开来解释，倒不如直接将这两个文件贴出来，然后通过注释的方式告诉大家配置的方法，所以下面我会贴出这两个文件，怎么配置看注释就好了😄～</p><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><p>不过还有一件事要先说一说，就是选择合适自己的主题，这是搭建好博客后最重要的一件事。默认的主题功能少，而且不太好看（个人感觉），而一些主题则有很多功能，也比较美观。</p><p>我选择的是 <a href="https://github.com/iissnan/hexo-theme-next">NexT</a>（<a href="https://github.com/theme-next/hexo-theme-next">最新版</a>），简洁且功能不少，也是在 GitHub 上<a href="https://github.com/search?o=desc&q=topic:hexo-theme&s=stars&type=Repositories">被 Star 最多</a><code>[2017.11.17]</code>的一个 Hexo 主题。第二多的是 <a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a>，第三多的是 <a href="https://github.com/viosey/hexo-theme-material">hexo-theme-material</a>（还有一个很棒的 Material Design 风格主题 <a href="https://github.com/yscoder/hexo-theme-indigo/tree/card">hexo-theme-material-indigo</a>），还有一个我感觉比较有特色的，叫 <a href="https://github.com/probberechts/cactus-dark">Cactus Dark</a>，这几个我感觉都不错，可以点开链接看看长啥样。要是我上面说的还是没有合你胃口的😅，咋办？去 <a href="https://hexo.io/themes/">Hexo Themes</a> 慢慢找。</p><p>至于换主题，很简单，我拿 NexT 主题举个栗子。首先在这个主题的 GitHub 页面的右上方复制链接，如下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/hexo-next-optimization-1.png" alt="hexo-next-optimization-1.png"></p><p>然后：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/themes/</span></span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next.git next</span><br></pre></td></tr></table></figure><p>再在<strong>站点</strong>配置文件中修改成如下即可：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/_config.yml</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h2 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h2><p>请先查看 <a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo 官方文档</a>，再查看下面我贴出的，如果这样后你还是对有些地方比较懵，可以自行 Google。如果你的文件中没有相关内容，请勿直接添加，且所有的<code>:</code>都为英文字符，它后面都有一个空格。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [2017.11.14 更新] 文件位置：~/blog/_config.yml</span></span><br><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">reuixiy</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Viva</span> <span class="string">La</span> <span class="string">Vida</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">易</span> <span class="string">象</span> <span class="string">辞</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">reuixiy</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://reuixiy.github.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment"># 博客文章的 URL 结构，请务必写文章之前就想好！</span></span><br><span class="line"><span class="comment"># 详细参数请查看：https://hexo.io/docs/permalinks.html</span></span><br><span class="line"><span class="comment"># 当然最好不要参考我的，我的太不利于 SEO 了，除非……</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:category/:year/:month/:day/:title.html</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 代码高亮设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 代码自动高亮</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"><span class="comment"># 关于代码高亮的更多知识，可以查看本文 6.5.2 节</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment"># URL 中的分类和标签「翻译」成英文</span></span><br><span class="line"><span class="comment"># 见：https://github.com/hexojs/hexo/issues/1162</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="comment"># 这个我有点懵，上面不是有啊……</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改归档页面、某一分类页面、某一标签页面的显示篇数</span></span><br><span class="line"><span class="comment">## 参考：http://theme-next.iissnan.com/faqs.html#setting-page-size</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">daily:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">category_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment"># RSS，要先进入站点文件夹根目录安装插件</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-feed --save 即可</span></span><br><span class="line"><span class="comment"># 无需更多配置</span></span><br><span class="line"><span class="comment"># 参数说明查看 README：https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="comment"># 文章数，0 为全部</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line"><span class="comment"># 是否包含文章内容</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># emoji 支持，教程见本文 6.3 节</span></span><br><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">idName:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">unicode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">localEmojis:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment"># 主题配置</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/reuixiy/reuixiy.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h2><p>如果你的主题不是 NexT，那么请另 Google。建议先查看 <a href="http://theme-next.iissnan.com/getting-started.html">NexT 官方文档</a>（<a href="https://theme-next.org/docs/">最新版</a>），写得很好，多逗留会没坏处。由于文件过长，为了保证文章阅读效果，我把文件放在了 <a href="https://github.com/reuixiy/blog-files/blob/master/_config.yml">GitHub</a>。另外，我把我没有配置的差不多都删了，有问题可以多 Google。如果里面有些设置你还想进一步自定义，比如进一步自定义页脚文字的顺序，折腾完本文<a href="https://io-oi.me/tech/hexo-next-optimization.html#%E8%BF%9B%E9%98%B6-%E9%AB%98%E7%BA%A7%E5%8A%9F%E8%83%BD%E9%85%8D%E7%BD%AE">第 5 节</a>你就会了😉。</p><h2 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h2><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/hexo-next-optimization-2.gif" alt="效果图"></p><p>在<strong>主题</strong>配置文件中，靠后面，改<code>canvas_nest: true</code>，想要更改颜色和数量？修改文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件位置</span></span><br><span class="line">~/blog/themes/next/source/lib/canvas-nest/canvas-nest.min.js</span><br></pre></td></tr></table></figure><p>怎么修改？参考 <a href="https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md">README</a>。</p><h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/hexo-next-optimization-footnotes.jpg" alt="Hexo 插件页面"></p><p>在 Hexo 插件搜索footnotes，发现目前有两种插件，右边的可以实现鼠标放在上面悬浮显示注释的功能，但是亲测有一个 Bug，有时对页面宽度有影响，强迫症难以忍受。我安装的是左边的，先进入站点文件夹根目录，然后：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-footnotes --save</span><br></pre></td></tr></table></figure><p>安装后按 <a href="https://github.com/LouisBarranqueiro/hexo-footnotes">README</a> 的介绍的语法书写，应该就可以了。注意：注脚的内容一定要放在 Markdown 文档的最后面，否则可能会有错误。</p><h1 id="优化-网页样式布局"><a href="#优化-网页样式布局" class="headerlink" title="优化 网页样式布局"></a>优化 网页样式布局</h1><p>发现页面有大量留白？颜色不合自己口味？那就 F12 开始吧，大换装开始！空白区？颜色？背景？圆角矩形？阴影？透明度？超链接样式？侧栏头像圆形并旋转？文章标题前面的竖线和颜色？只需按下 F12，改到自己想要的样式，然后 Copy 到<code>custom.styl</code>文件即可。感觉这是 NexT 主题非常棒的设计，因为这让我们能够很方便自定义博客的样式。怎么知道要修改这个文件呢？强烈推荐阅读<a href="http://www.cduyzh.com/hexo-settings-3/">这篇文章</a>。</p><h2 id="怎么更改？"><a href="#怎么更改？" class="headerlink" title="怎么更改？"></a>怎么更改？</h2><p>浏览器按 F12 即可，建议用 <a href="http://down.tech.sina.com.cn/content/40975.html">Google Chrome 浏览器</a>（有梯子的直接去 Google 下载😂），或者<a href="http://www.firefox.com.cn/download/">火狐浏览器</a>。如果你按下 F12 后简直特么一脸懵逼，那么别急，硬着头皮慢慢折腾吧哈哈哈嗝～</p><h3 id="bb-for-bb"><a href="#bb-for-bb" class="headerlink" title="bb - for - bb"></a>bb - for - bb</h3><p>不管你信不信，其实博主就是这样直接折腾过来的，我之前没学过 HTML 和 CSS，所以当时按下 F12 真是一脸懵逼。我一开始是 Google（关键字：<code>Hexo NexT 自定义</code>）到上面那篇文章，一点进去，卧槽！侧栏终于不是清一色的默认黑色，激动！这位大佬怎么改的啊？这篇文章一定有吧😍！？然后看下去，果然有！然后眼睛先盯着贴的<code>custom.styl</code>，久久看着少数的注释，Copy 一段到自己的<code>custom.styl</code>，保存，然后<code>hexo clean</code>、<code>hexo g</code>、<code>hexo s</code>（当时我还不知道可以<code>hexo s</code>后可以直接本地调试😭），再去浏览器刷新自己的本地调试页面，看看效果。效果是有了，但是不是我想要的效果啊……于是去百度其中一行 CSS 代码，再回去慢慢删改调试……博主由懵逼到熟悉花了不少时间，但是我写这篇文章就是为了减少像我这样的小白折腾的时间，所以下面详细说明下按下 F12 后怎么快速由懵逼到熟悉！</p><h3 id="快速由懵逼到熟悉"><a href="#快速由懵逼到熟悉" class="headerlink" title="快速由懵逼到熟悉"></a>快速由懵逼到熟悉</h3><p>首先按下 F12 后的操作流程图，就是<a href="https://yangbingdong.com/2017/build-blog-hexo-advanced/#%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0">这篇文章</a>中的三步骤，点小箭头定位元素，调试 CSS 代码，最后 Copy 到<code>custom.styl</code>。然后懵逼的地方，应该有下面两点：</p><ol><li>按下 F12 后弹出的界面是什么鬼？！</li><li>界面中的<code>&#123;&#125;</code>前面的和里面的英文是什么鬼？！</li></ol><p>第一点：弹出的界面是为调试设计的，如果你知道调试的是啥，也许就自然了解弹出的界面，所以我不多说，不过还是给一份 Google 官方的资料——<a href="https://developers.google.com/web/tools/chrome-devtools/">Chrome 开发者工具</a>。第二点：<code>&#123;&#125;</code>前面的是 HTML 的元素名，<code>&#123;&#125;</code>里面的是这个元素的 CSS 样式。</p><p>社交要先有自己原则，一段代码要先声明变量，一个数学问题有前提，一篇论文要先定义名词，到这里我们也必须要先了解一些 HTML 和 CSS 的基本语法知识了，才能继续折腾下去。建议先浏览下<a href="https://qianling.pw/grammar/">这篇文章</a>，但没必要记住里面的每一个语法知识，因为这样的记忆是不够深刻也并不高效的，只要浏览下留个印象（为了能找准元素）就行，而记忆是要在实践中记忆的。</p><h3 id="bb-for-fun"><a href="#bb-for-fun" class="headerlink" title="bb - for - fun"></a>bb - for - fun</h3><p>实践？对！就是打开自己的本地调试页面，然后用你挑剔的眼光看看，哪里让你不爽，就按 F12，定位元素，最后调试，直到改到自己满意。这不是与一开始说的三步骤一样吗，为啥现在又说一遍？不不不，想想如果你点开一个俄文网站，然后我给你个这页面上的一个俄文链接的中文翻译，让你找到这个俄文链接并点开，你会不会懵逼呢……一样的，如果我没有让先你浏览 HTML 和 CSS 的基本语法知识，那么对网页中出现的东东大脑压根就「翻译」不成 HTML 和 CSS 代码（反之一样）。对 HTML 和 CSS 的语法定义不明，就可能会找不准元素，而找不准元素不仅可能达不到预期效果，还可能会产生一些新的 bugs，所以要先浏览上面那篇文章。这也是我这个小白走过的坑中，最大的一个了，花费了我不少时间在无意义的搜索上，想达到一个效果，但是不知道输入什么搜索关键字……最后，要熟练还是要多折腾……喵？！多折腾，说好的快速呢！？快速是要有对比的，我填了定义不明这个大坑，你按我说的操作，与我的慢折腾经历相比，你的折腾当然是快速。诡辩？好吧说实话也算是谎言，不过是个善意的谎言，只为给你一种神奇的能量——Hope，这种谎言在生活中很常见，但我的缺少一个目的——钱。</p><h2 id="附上我的-custom-styl"><a href="#附上我的-custom-styl" class="headerlink" title="附上我的 custom.styl"></a>附上我的 custom.styl</h2><p>由于文件过长，为了保证文章阅读效果，我把文件放在了 <a href="https://github.com/reuixiy/blog-files/blob/master/custom.styl">GitHub</a>。请先找对元素，不然可能会制造出新 bug，建议大家修改一个，就加个注释，方便以后调试修改。注意：一定是先 F12 找到要自定义的元素，调试成自己喜欢的值，然后再复制到<code>custom.styl</code>，而不是直接复制我给出的，我给出的仅供参考。</p><h2 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h2><p>优化了这么多，但还有一个最影响博客形象和阅读体验的项没有优化，瓦特？字体！文章字体大小可以编辑：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_variables/base<span class="selector-class">.styl</span></span><br><span class="line">$<span class="attribute">font-size</span>-base = <span class="number">16px</span></span><br></pre></td></tr></table></figure><p>如果你是一个和我一样对字体一脸懵逼的人，推荐阅读：</p><ol><li><a href="https://www.voyax.me/posts/59710/">Web 中文字体排版指南</a></li><li><a href="https://blog.coding.net/blog/Web-Fonts">Web 字体的选择和运用</a></li><li><a href="https://segmentfault.com/a/1190000006110417">如何优雅的选择默认字体（font-family）</a></li><li><a href="http://www.ruanyifeng.com/blog/2014/07/chinese_fonts.html">中文字体网页开发指南</a></li><li><a href="https://csspod.com/using-the-system-font-in-web-content/">在 Web 内容中使用系统字体</a></li></ol><p>首先对于汉字来说，因为其字体库太大，通常都是调用本地中文字体库。然而，不同设备有不同默认中文字体和中文字体库，想要尽可能在不同设备上有较好的显示效果，就要在调用不同设备的本地字体库中显示效果较好的中文字体。下面附上我的供大家参考：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_variables/base<span class="selector-class">.styl</span></span><br><span class="line">// <span class="attribute">Font</span> families.</span><br><span class="line">$<span class="attribute">font-family</span>-chinese      = -apple-system, BlinkMacSystemFont, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;STHeiti&quot;, &quot;Source Han Sans SC&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Droid Sans Fallback&quot;, &quot;Microsoft YaHei&quot;</span><br><span class="line"></span><br><span class="line">$<span class="attribute">font-family</span>-base         = $<span class="attribute">font-family</span>-chinese, sans-serif</span><br><span class="line">$<span class="attribute">font-family</span>-base         = get_font_family(&#x27;global&#x27;), $<span class="attribute">font-family</span>-chinese, sans-serif if get_font_family(&#x27;global&#x27;)</span><br><span class="line"></span><br><span class="line">$<span class="attribute">font-family</span>-logo         = $<span class="attribute">font-family</span>-base</span><br><span class="line">$<span class="attribute">font-family</span>-logo         = get_font_family(&#x27;logo&#x27;), $<span class="attribute">font-family</span>-base if get_font_family(&#x27;logo&#x27;)</span><br><span class="line"></span><br><span class="line">$<span class="attribute">font-family</span>-headings     = $<span class="attribute">font-family</span>-base</span><br><span class="line">$<span class="attribute">font-family</span>-headings     = get_font_family(&#x27;headings&#x27;), $<span class="attribute">font-family</span>-base if get_font_family(&#x27;headings&#x27;)</span><br><span class="line"></span><br><span class="line">$<span class="attribute">font-family</span>-posts        = $<span class="attribute">font-family</span>-base</span><br><span class="line">$<span class="attribute">font-family</span>-posts        = get_font_family(&#x27;posts&#x27;), $<span class="attribute">font-family</span>-base if get_font_family(&#x27;posts&#x27;)</span><br><span class="line"></span><br><span class="line">$<span class="attribute">font-family</span>-monospace    = $<span class="attribute">font-family</span>-chinese, monospace</span><br><span class="line">$<span class="attribute">font-family</span>-monospace    = Menlo, Monaco, Consolas, get_font_family(&#x27;codes&#x27;), $<span class="attribute">font-family</span>-chinese, monospace if get_font_family(&#x27;codes&#x27;)</span><br></pre></td></tr></table></figure><p>注意：要想 NexT 主题的简体中文字体配置生效，<strong>站点</strong>配置文件中的 language 必须为 zh-CN。然后对于英文字体，因为其字体库很小，所以想要个性化就简单多了。首先去 <a href="https://fonts.google.com/">Google Fonts</a> 找自己喜欢的英文字体，然后编辑<strong>主题</strong>配置文件，可以查看一下 <a href="http://theme-next.iissnan.com/theme-settings.html#fonts-customization">NexT 官方文档</a>（<a href="https://theme-next.org/docs/theme-settings/#Fonts-Customization">最新版</a>）。下面附上我的供大家参考：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host. E.g. //fonts.googleapis.com (Default)</span></span><br><span class="line">  <span class="comment"># 亲测这个可用，如果不可用，自己搜索 [Google 字体 国内镜像]，找个能用的就行</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://fonts.loli.net</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used on &lt;body&gt; element.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="comment"># external: true will load this font family from host.</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lato</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Logo</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="comment"># The `size` option use `px` as unit</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Mono</span></span><br><span class="line">    <span class="attr">size:</span></span><br></pre></td></tr></table></figure><p>注意：本博客的字体最新设置方法请看我的<a href="https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts.html">这篇文章</a>。</p><h1 id="进阶-高级功能配置"><a href="#进阶-高级功能配置" class="headerlink" title="进阶 高级功能配置"></a>进阶 高级功能配置</h1><p>这些功能的配置，大部分都要修改 NexT 主题的一些文件，所以<code>git pull</code>升级主题的时候，会比较麻烦，解决方法见<a href="#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98">本文 2.3.2 节</a>。</p><h2 id="大佬的文章"><a href="#大佬的文章" class="headerlink" title="大佬的文章"></a>大佬的文章</h2><p>更多如外挂一样的功能配置，就直接贴大佬的文章了，哪些功能自己喜欢，按照大佬的教程来配置就行。不过也有坑，比如有些功能（超链接样式、侧栏头像圆形并旋转）可以直接通过在<code>custom.styl</code>添加 CSS 代码实现，无需更改其它文件。</p><ol><li><a href="http://cherryblog.site/Hexo-high-level-tutorialcloudmusic,bg-customthemes-statistical.html">Hexo 高阶教程 NexT 主题优化</a></li><li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html">Hexo 的 NexT 主题个性化教程：打造炫酷网站</a></li><li><a href="http://www.dingxuewen.com/categories/Site/">Hexo 搭建博客的个性化设置</a></li></ol><p>第一篇文章内有 NexT 主题的文件目录说明，这对自己自定义博客有很大帮助。此外，大佬的博客可不仅仅有一篇文章，多在上面逗留会，也许会有甜品。</p><h2 id="更改上一篇，下一篇的顺序"><a href="#更改上一篇，下一篇的顺序" class="headerlink" title="更改上一篇，下一篇的顺序"></a>更改上一篇，下一篇的顺序</h2><p>进入一篇文章，在文章底部，有上下篇的链接（&lt; &gt;），但是点 &gt; 发现进入的是页面中的的上面那篇文章，与操作习惯不符，别扭。</p><p>我猜这是从时间角度设计的，&gt; 英语叫 next，而 next 是更新的。不过别扭就改成习惯的好了，从空间位置角度设计。[^1]</p><p>方法就是修改文件：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/_macro/post.<span class="property">swig</span></span><br><span class="line">&#123;% <span class="keyword">if</span> not is_index and (post.<span class="property">prev</span> or post.<span class="property">next</span>) %&#125;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">&quot;post-nav&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-nav-next post-nav-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">-      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="language-xml">+      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="language-xml">-        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;next&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; post.next.title &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; post.prev.title &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">-          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-chevron-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &#123;&#123; post.next.title &#125;&#125;</span></span><br><span class="line"><span class="language-xml">+          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-chevron-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &#123;&#123; post.prev.title &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;% endif %&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-nav-divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-nav-prev post-nav-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">-      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="language-xml">+      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="language-xml">-        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; post.prev.title &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;next&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; post.next.title &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">-          &#123;&#123; post.prev.title &#125;&#125; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-chevron-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+          &#123;&#123; post.next.title &#125;&#125; <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-chevron-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;% endif %&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>自己改单词请注意：是 <em>prev</em> 不是 <em>perv</em>，之前自己搞错了，然后盯着电脑屏幕尴尬半天，不停想特么老子哪里错了，怎么特么就是达不到效果！？？？</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/heirenwenhaolian.jpg" alt="heirenwenhaolian.jpg"></p><h2 id="移动端显示-back-to-top-按钮和侧栏"><a href="#移动端显示-back-to-top-按钮和侧栏" class="headerlink" title="移动端显示 back-to-top 按钮和侧栏"></a>移动端显示 back-to-top 按钮和侧栏</h2><p>今天更新一下 NexT 主题，发现已经添加这功能，前提是主题的设计模版是 Muse 或 Mist，然后可以直接在<strong>主题</strong>配置文件中配置：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"><span class="comment"># Enable sidebar on narrow view</span></span><br><span class="line"><span class="attr">onmobile:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果你发现你的<strong>主题</strong>配置文件<code>_config.yml</code>中没有这段内容，可以尝试按<a href="#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98">本文 2.3.1 节</a>的方法更新主题。</p><h2 id="博客推广及谷歌搜索优化（必读）"><a href="#博客推广及谷歌搜索优化（必读）" class="headerlink" title="博客推广及谷歌搜索优化（必读）"></a>博客推广及谷歌搜索优化（必读）</h2><p>想自己写的文章被别人看到？希望得到别人的评论肯定？渴望用自己写的文章照亮他人，给整个文明光能？那么这个就不可或缺了。你能看到这篇文章，很大程度上也是因为这个😏。</p><h3 id="博客推广"><a href="#博客推广" class="headerlink" title="博客推广"></a>博客推广</h3><p>博客推广第一步，手动推广。你可以多浏览别人的博客并留下你的爪印（博客地址），比如评论；你可以去 <a href="https://github.com/iissnan/hexo-theme-next#live-preview">README.md</a> 中提到的这个 <a href="https://github.com/iissnan/hexo-theme-next/issues/119">issue</a> 留下你的爪印；你可以去 <a href="https://github.com/iissnan/hexo-theme-next/issues">Issues</a>（<a href="https://github.com/theme-next/hexo-theme-next/issues">最新版</a>）页面试着回答下大家的问题并留下你的爪印。</p><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>博客推广第二步，<a href="https://baike.baidu.com/item/SEO">SEO</a>（Search Engine Optimization）。搜索引擎是互联网上寻找资源的重要手段，而要让别人能够在搜索结果中看到自己的博客文章链接，就必须让搜索引擎收录，怎么操作呢？</p><p>直接参考<a href="http://www.ehcoo.com/seo.html">这篇文章</a>，学会使用站长工具抓取自己的网页，然后请求搜索引擎收录。博主也是刚接触不久，不太懂，但推荐提交次数尽量多，而且每天尽量都提交一次。我没有弄百度的，只弄了 Google 的，但是前几天百度<code>hexo next 优化</code>（其它关键字没试），发现第一页就有自己文章，而且文章图片也在上面，很显眼，让我非常惊喜😆！</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/hexo-next-optimization-3.jpg" alt="hexo-next-optimization-3.jpg"></p><p>看到<a href="https://segmentfault.com/p/1210000011450995">链接</a>是 SegmentFault 的，恍然大悟，原来是这个<a href="http://shenzekun.cn/">大佬</a>推荐的，不仅帮我把此文推到了掘金，还有 SegmentFault，在此再次感谢大佬！这也给了一个启示，除了直接向搜索引擎提交自己的链接，还可以通过这种途径优化博客的 SEO。</p><h3 id="间接影响"><a href="#间接影响" class="headerlink" title="间接影响"></a>间接影响</h3><p>另外，SEO 固然重要，但不要小看另一种影响，相比搜索引擎，这种可以称之为间接影响。这篇文章是一篇技术性的文章，而技术人员经常会用 Google，所以对这篇文章的浏览量，搜索引擎的功劳较大。但是，如果是其他的文章，比如一首诗，那么直接通过 Google 访问的读者几乎没有，那读者哪来？从其它文章上的读者「流」过来的。因为读者浏览着的不是一篇文章，而是一个博客。</p><p>而想让博客上的几乎不可能被 Google 的一首诗被浏览，就要这样间接拉读者了，可以称之「引流」。首先对博客上的每篇文章来说，肯定是读者花在自己博客的时间越长，被读到的可能性越大。这就意味着你要尽可能把用户留在自己的博客上，怎么留？</p><ol><li>博客要装饰好</li><li>文章质量要高</li></ol><p>读者的第二印象是博客的界面，如果界面够特别，也许马上就被加入了书签。第三印象是文章内容，这其实更加重要，如果文章质量很高，那么读者肯定不会让这么好的一篇文章消失在自己的记忆中，即使界面不咋地。第一印象？加载速度，试想点开半天还是空白，那么肯定马上关了。</p><p>如果做到上面三点，那么就算好不容易「骗」到一个 Google 浏览量，但是这个读者马上被博客和文章惊呆了，看完文章后，这读者心里美滋滋，认为这么好的文章（博客）必须分享啊（如上面的大佬推荐🌚），于是可能马上来了一大批满怀期待的读者，然后这批读者又……这时文章的读者数（博客的访问量）就不是简单的加法了～</p><h3 id="知识平台"><a href="#知识平台" class="headerlink" title="知识平台"></a>知识平台</h3><p>直接或间接因为 Google 这样的搜索引擎而来的读者，绝大部分都是技术人员，而他们只希望尽快解决自己的技术问题，这也是他们的目的，这就意味着博客上的一首诗还是很难被欣赏。而要想照亮他人，他人必须要能懂自己的文章，这样也才可能有更强的交互——评论。所以为了不浪费自己的光能，能把自己的光能完完整整地贡献给文明，那就必须也让一首诗也有评论，怎么做呢？让读者的类型多样化，不限于技术人员。还好现在大部分读者也不用搜索引擎了，谁在吞食搜索引擎的用户？移动端。智能手机的迅速普及导致搜索引擎已经不是人们获取知识的主要途径，大部分人已经将手机 APP 上的知识平台作为自己获取知识的主要途径，比如：知乎、简书、微信订阅号……所以，你还可以将自己的文章发布在这些知识平台上的相应分类上，然后留个博客链接，吸引更多类型的读者😄～</p><h3 id="谷歌分析"><a href="#谷歌分析" class="headerlink" title="谷歌分析"></a>谷歌分析</h3><p>你怎么知道自己推广的效果？你怎么知道有没有人看了自己的博客？哪篇文章最受欢迎？此时有没有人正浏览着自己的博客？自己的文章有没有被引用？这时最常用的就是强大免费的 <a href="https://analytics.google.com/">Google Analytics</a>，推荐博客建好后，就立即使用。</p><p>如何使用？请务必自备梯子查看 <a href="https://analytics.google.com/analytics/academy/course/6">Google 官方的教程</a>，开始使用后一定要按照里面的设置，先添加多份 view（数据视图）。</p><p>ATTENTION：虽然有个复制 view 选项，但由 Google Analytics（分析）帮助中的<a href="https://support.google.com/analytics/answer/3256366?hl=zh-Hans">具体复制内容</a>再加上我的实践，发现（用我这个外行人的话来说）：复制 view 时只会复制它的相关配置，不会复制数据！所以请使用后立即按照官方教程中的方式添加 view！</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/google-analytics-filter.png" alt="仅包含有效主机名"></p><p>我们写文章，会在本地调试，这时 Google Analytics 也是会收集数据的，会影响数据分析，所以必须添加一个 filter（过滤器）。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/google-analytics.png" alt="filter"></p><p>ATTENTION：由 Google Analytics（分析）的<a href="https://support.google.com/analytics/answer/6383007">工作原理</a>可知，filter 是在数据处理时生效的（如上图），也就是说添加 filter 后只能过滤添加它之后的数据，而无法过滤添加它之前的数据（处理后），而 view 是利用处理后的数据生成的，所以要想去除自己在本地调试时的影响（在 view 中看不到自己在本地调试时的访问），请添加 view 之后就立即添加 filter！</p><h2 id="时间轴页面的年份分隔"><a href="#时间轴页面的年份分隔" class="headerlink" title="时间轴页面的年份分隔"></a>时间轴页面的年份分隔</h2><p>在 Archives（归档）页面，文章之间有年份分隔，而某一个 category 和 tag 的时间轴页面却没有。怎么办呢？修改两个文件，加代码即可😌～</p><h3 id="category"><a href="#category" class="headerlink" title="category"></a>category</h3><p>加到哪？要加两个位置：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/category.<span class="property">swig</span></span><br><span class="line">    &#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.<span class="property">posts</span> %&#125;</span><br><span class="line">              位置A</span><br><span class="line">      &#123;&#123; post_template.<span class="title function_">render</span>(post) &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.（省略好多行）</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">位置B（没错最后面）</span><br></pre></td></tr></table></figure><p>加什么？绿色的自己看着加：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/category.<span class="property">swig</span></span><br><span class="line"># <span class="attr">https</span>:<span class="comment">//github.com/reuixiy/blog-files/blob/master/category.swig</span></span><br><span class="line">    &#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.<span class="property">posts</span> %&#125;</span><br><span class="line">+</span><br><span class="line">+      &#123;# <span class="title class_">Show</span> year #&#125;</span><br><span class="line">+      &#123;% set year %&#125;</span><br><span class="line">+      &#123;% set post.<span class="property">year</span> = <span class="title function_">date</span>(post.<span class="property">date</span>, <span class="string">&#x27;YYYY&#x27;</span>) %&#125;</span><br><span class="line">+</span><br><span class="line">+      &#123;% <span class="keyword">if</span> post.<span class="property">year</span> !== year %&#125;</span><br><span class="line">+        &#123;% set year = post.<span class="property">year</span> %&#125;</span><br><span class="line">+        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collection-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;archive-year motion-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;archive-year-&#123;&#123; year &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; year &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">+      &#123;% endif %&#125;</span><br><span class="line">+      &#123;# endshow #&#125;</span><br><span class="line">+</span><br><span class="line">      &#123;&#123; post_template.<span class="title function_">render</span>(post) &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.（省略好多行）</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">+&#123;% block script_extra %&#125;</span><br><span class="line">+  &#123;% <span class="keyword">if</span> theme.<span class="property">use_motion</span> %&#125;</span><br><span class="line">+    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">id</span>=<span class="string">&quot;motion.page.archive&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      $(<span class="string">&#x27;.archive-year&#x27;</span>).<span class="title function_">velocity</span>(<span class="string">&#x27;transition.slideLeftIn&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">+  &#123;% endif %&#125;</span><br><span class="line">+&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><p>文件位置：<code>~/blog/themes/next/layout/tag.swig</code>，修改内容与 category 的完全一样。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>两段代码直接 Copy 同目录下的 archive.swig 文件里面的，而且 tag.swig 和 category.swig 好像都预留了位置似的，代码小白的我折腾了半天，才改好😭😭😭，不知道写代码的大佬怎么想的w(ﾟДﾟ)w～</p><h2 id="文章底部加上评分小星星"><a href="#文章底部加上评分小星星" class="headerlink" title="文章底部加上评分小星星"></a>文章底部加上评分小星星</h2><p>淘宝买东西，作为消费者的我们，看评价很重要。现在作为博主，写了一篇文章，很期待读者的反馈。而与淘宝一样，确认收货后，相比评论，更愿意五星好评。那么博客文章怎么加上呢？首先打开<strong>主题</strong>配置文件：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Star rating support to each article.</span></span><br><span class="line"><span class="comment"># To get your ID visit https://widgetpack.com</span></span><br><span class="line"><span class="attr">rating:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span>     </span><br><span class="line">  <span class="attr">color:</span> <span class="string">f79533</span></span><br></pre></td></tr></table></figure><p>先去注释中的网站，首页点 Rating，然后注册个帐号，填一下自己博客的信息，左上角有个 ID，填进<strong>主题</strong>配置文件中就行，<code>color</code>改成自己喜欢的即可。另：</p><p>1）可以配置评分方式，侧栏 &gt; Rating &gt; Setting，建议用 IP address 或 Device(cookie)，免登录，毕竟 Socials 里面的选项几乎都被墙，不适合国内网络环境。<br>2）建议在侧栏 &gt; Site &gt; Setting 中勾选 Private 选项。<br>3）上面两步勾选后别忘了点击页面右下方的 <em>SAVE SETTING</em> 绿色按钮保存。</p><p>如果感觉上下留白太多，咋整？浏览器 F12 找元素，调成自己喜欢的值，然后 Copy 到<code>custom.styl</code>即可，参考<a href="https://io-oi.me/tech/hexo-next-optimization.html#%E9%99%84%E4%B8%8A%E6%88%91%E7%9A%84-custom-styl">本文 4.2 节</a>。经过上面的配置，默认最下面只会显示 5 颗小星星，简洁但不明了😂，怎么加上文字说明呢？编辑下面这个文件，Ctrl + F 搜索<code>rating</code>，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/_macro/post.<span class="property">swig</span></span><br><span class="line"></span><br><span class="line">        &#123;% <span class="keyword">if</span> theme.<span class="property">rating</span>.<span class="property">enable</span> %&#125;</span><br><span class="line">          &lt;div <span class="keyword">class</span>=<span class="string">&quot;wp_rating&quot;</span>&gt;</span><br><span class="line">+            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px&quot;</span>&gt;</span>(<span class="symbol">&amp;gt;</span>看完记得五星好评哦亲<span class="symbol">&amp;lt;</span>)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wpac-rating&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="侧栏加入已运行的时间"><a href="#侧栏加入已运行的时间" class="headerlink" title="侧栏加入已运行的时间"></a>侧栏加入已运行的时间</h2><p>我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～</p><p>首先要加入下面代码：[^2]</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/_custom/sidebar.<span class="property">swig</span></span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">&quot;days&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">function</span> <span class="title function_">show_date_time</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;show_date_time()&quot;</span>, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">BirthDay</span>=<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;05/27/2017 15:13:14&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    today=<span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    timeold=(today.<span class="title function_">getTime</span>()-<span class="title class_">BirthDay</span>.<span class="title function_">getTime</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    sectimeold=timeold/<span class="number">1000</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    secondsold=<span class="title class_">Math</span>.<span class="title function_">floor</span>(sectimeold);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    msPerDay=<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    e_daysold=timeold/msPerDay</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    daysold=<span class="title class_">Math</span>.<span class="title function_">floor</span>(e_daysold);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    e_hrsold=(e_daysold-daysold)*<span class="number">24</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    hrsold=<span class="title function_">setzero</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(e_hrsold));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    e_minsold=(e_hrsold-hrsold)*<span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    minsold=<span class="title function_">setzero</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>((e_hrsold-hrsold)*<span class="number">60</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    seconds=<span class="title function_">setzero</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>((e_minsold-minsold)*<span class="number">60</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;days&#x27;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;已运行 &quot;</span>+daysold+<span class="string">&quot; 天 &quot;</span>+hrsold+<span class="string">&quot; 小时 &quot;</span>+minsold+<span class="string">&quot; 分 &quot;</span>+seconds+<span class="string">&quot; 秒&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">function</span> <span class="title function_">setzero</span>(<span class="params">i</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">if</span> (i&lt;<span class="number">10</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        i=<span class="string">&quot;0&quot;</span> + i</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> i;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">show_date_time</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上面<code>Date</code>的值记得改为你自己的，且按上面格式，然后修改：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/_macro/sidebar.<span class="property">swig</span></span><br><span class="line"></span><br><span class="line">        &#123;# <span class="title class_">Blogroll</span> #&#125;</span><br><span class="line">        &#123;% <span class="keyword">if</span> theme.<span class="property">links</span> %&#125;</span><br><span class="line">          &lt;div <span class="keyword">class</span>=<span class="string">&quot;links-of-blogroll motion-element &#123;&#123; &quot;</span>links-<span class="keyword">of</span>-blogroll-<span class="string">&quot; + theme.links_layout | default(&#x27;inline&#x27;) &#125;&#125;&quot;</span>&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;links-of-blogroll-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa  fa-fw fa-&#123;&#123; theme.links_icon | default(&#x27;globe&#x27;) | lower &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;&#123; theme.links_title &#125;&#125;<span class="symbol">&amp;nbsp;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa  fa-fw fa-&#123;&#123; theme.links_icon | default(&#x27;globe&#x27;) | lower &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;links-of-blogroll-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;% for name, link in theme.links %&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;links-of-blogroll-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; link &#125;&#125;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; name &#125;&#125;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;% endfor %&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">+        &#123;% include <span class="string">&#x27;../_custom/sidebar.swig&#x27;</span> %&#125;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">         &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">-        &#123;% include <span class="string">&#x27;../_custom/sidebar.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure><p>这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的<code>custom.styl</code>加入：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义的侧栏时间样式</span><br><span class="line"><span class="selector-id">#days</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面的值 F12 调成自己喜欢的，然后更改即可。要是不想放在侧栏，想放在页脚，自己应该能折腾了吧😄～</p><h2 id="添加-TopX-页面"><a href="#添加-TopX-页面" class="headerlink" title="添加 TopX 页面"></a>添加 TopX 页面</h2><p>博客已有的分类，如 categories 和 tags，都是基于博主的，那么有没有一种分类是基于读者的呢？有，一种是搜索，另一种就是这里的文章阅读量排行榜。前提是在主题配置文件中配置了 leancloud_visitors，配置方法见本文 3.3 节中我的主题配置文件中的教程链接。首先新建页面：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line"></span><br><span class="line">hexo new page &quot;top&quot;</span><br></pre></td></tr></table></figure><p>然后在<strong>主题</strong>配置文件中加上菜单 top 和它的 icon：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">top:</span> <span class="string">/top/</span> <span class="string">||</span> <span class="string">signal</span></span><br></pre></td></tr></table></figure><p>接着在语言翻译文件中加上菜单 top：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/languages/zh_Hans.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="attr">top:</span> <span class="string">TopX</span> <span class="string">/*</span> <span class="string">可以不为</span> <span class="string">TopX，随便取</span> <span class="string">*/</span></span><br></pre></td></tr></table></figure><p>注意：如果你的<strong>站点</strong>配置文件中的 languages 写的不是 zh-CN，那么这里请更改相应语言配置文件。最后，编辑第一步新建页面生成的文件：[^3]</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>source/top/index.<span class="property">md</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="attr">title</span>: <span class="title class_">TopX</span> <span class="comment">/* 可以不为 TopX，随便取 */</span></span><br><span class="line"><span class="attr">comments</span>: <span class="literal">false</span></span><br><span class="line"><span class="attr">keywords</span>: top,文章阅读量排行榜</span><br><span class="line"><span class="attr">description</span>: 博客文章阅读量排行榜</span><br><span class="line">---</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable constant_">AV</span>.<span class="title function_">initialize</span>(<span class="string">&quot;app_id&quot;</span>, <span class="string">&quot;app_key&quot;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> time=<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> title=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> url=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> query = <span class="keyword">new</span> <span class="variable constant_">AV</span>.<span class="title class_">Query</span>(<span class="string">&#x27;Counter&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    query.<span class="title function_">notEqualTo</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">0</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    query.<span class="title function_">descending</span>(<span class="string">&#x27;time&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    query.<span class="title function_">limit</span>(<span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    query.<span class="title function_">find</span>().<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">todo</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> result=todo[i].<span class="property">attributes</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            time=result.<span class="property">time</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            title=result.<span class="property">title</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            url=result.<span class="property">url</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> content=<span class="string">&quot;&lt;a href=&#x27;&quot;</span>+<span class="string">&quot;https://reuixiy.github.io&quot;</span>+url+<span class="string">&quot;&#x27;&gt;&quot;</span>+title+<span class="string">&quot;&lt;/a&gt;&quot;</span>+<span class="string">&quot;&lt;br /&gt;&quot;</span>+<span class="string">&quot;&lt;font color=&#x27;#555&#x27;&gt;&quot;</span>+<span class="string">&quot;阅读次数：&quot;</span>+time+<span class="string">&quot;&lt;/font&gt;&quot;</span>+<span class="string">&quot;&lt;br /&gt;&lt;br /&gt;&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;top&quot;</span>).<span class="property">innerHTML</span>+=content</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-class">.post-description</span> &#123; <span class="attribute">display</span>: none; &#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>必须将里面的里面的<code>app_id</code>和<code>app_key</code>替换为你的<strong>主题</strong>配置文件中的值，必须替换里面博客的链接，<code>1000</code>是显示文章的数量，其它可以自己看情况更改。最后，修改样式可以在<code>custom.styl</code>中加入自定义代码，参考<a href="https://io-oi.me/tech/hexo-next-optimization.html#%E9%99%84%E4%B8%8A%E6%88%91%E7%9A%84-custom-styl">本文 4.2 节</a>。Okay！完成了！不过还有几点需要注意：</p><p>1）如果在设置 &gt; 安全中心中，没有将<code>http://localhost:4000</code>加入 Web 安全域名，那么本地调试将看不到，可以先将之加入，调试完后删除。<br>2）如果你发现文章标题显示不对，这是由于更改过文章标题导致的，在存储 &gt; Counter 双击<code>title</code>修改即可。</p><p>另外，应该也可以按类似的方式，利用 JS 代码，将评分（rating）高╱多的文章，评论多的文章，也加入这个页面，不过现在博客的阅读量还不多，我暂时没折腾（其实也不太会）。如果你实现了，麻烦告诉我哦😘～</p><p>注意：如果你的博客使用了 Valine 评论系统，那么可能会有代码冲突问题，解决方法见<a href="https://io-oi.me/tech/use-valine-in-theme-next.html">这篇文章</a>。</p><h2 id="利用-gulp-压缩代码"><a href="#利用-gulp-压缩代码" class="headerlink" title="利用 gulp 压缩代码"></a>利用 gulp 压缩代码</h2><p>右键查看网页源代码发现有大量留白，咋整？利用 gulp。首先任意目录全局安装：[^4]</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install gulp@3.9.1 -g</span><br></pre></td></tr></table></figure><p>然后到<strong>站点</strong>文件夹根目录：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install gulp@3.9.1 gulp-minify-css gulp-htmlmin gulp-htmlclean --save</span><br></pre></td></tr></table></figure><p>接着在<strong>站点</strong>文件夹根目录新建 gulpfile.js：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/gu</span>lpfile.<span class="property">js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlmin&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-css&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">minifycss</span>())</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-html&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">htmlclean</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">htmlmin</span>(&#123;</span><br><span class="line">         <span class="attr">removeComments</span>: <span class="literal">true</span>,</span><br><span class="line">         <span class="attr">minifyJS</span>: <span class="literal">true</span>,</span><br><span class="line">         <span class="attr">minifyCSS</span>: <span class="literal">true</span>,</span><br><span class="line">         <span class="attr">minifyURLs</span>: <span class="literal">true</span></span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, [<span class="string">&#x27;minify-html&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>最后部署到 GitHub Pages 上查看效果：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>我没有压缩 JavaScript，因为我发现会报错，实际也并不需要，因为大部分 JavaScript 都已压缩过。这里的这段代码执行 gulp 后也不支持<code>hexo s</code>本地调试，记得在哪看过解决方法，需要的自己 Google。另外，可能会产生一些奇怪的 bugs，没看到最好，要是看到了的话就自己解决吧～（逃……</p><h2 id="让页脚的心跳动起来"><a href="#让页脚的心跳动起来" class="headerlink" title="让页脚的心跳动起来"></a>让页脚的心跳动起来</h2><p>世界上有一种伟大的力量，它的名字无人不晓，就是——❤～</p><p>首先编辑<strong>主题</strong>配置文件：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line"><span class="bullet">-</span>  <span class="attr">icon:</span> <span class="string">user</span></span><br><span class="line"><span class="string">+</span>  <span class="attr">icon:</span> <span class="string">heart</span></span><br></pre></td></tr></table></figure><p>然后编辑：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/_partials/footer.<span class="property">swig</span></span><br><span class="line">- &lt;span class=&quot;with-love&quot;&gt;</span><br><span class="line">+ &lt;span class=&quot;with-love&quot; id=&quot;heart&quot;&gt;</span><br></pre></td></tr></table></figure><p>接着编辑<code>custom.styl</code>，加入：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义页脚跳动的心样式</span><br><span class="line"><span class="keyword">@keyframes</span> heartAnimate &#123;</span><br><span class="line">    <span class="number">0%</span>,<span class="number">100%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1</span>);&#125;</span><br><span class="line">    <span class="number">10%</span>,<span class="number">30%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.9</span>);&#125;</span><br><span class="line">    <span class="number">20%</span>,<span class="number">40%</span>,<span class="number">60%</span>,<span class="number">80%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">    <span class="number">50%</span>,<span class="number">70%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#heart</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: heartAnimate <span class="number">1.33s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.with-love</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>color</code>的值可以改成你自己喜欢的，灵感来自 <a href="https://diygod.me/">DIYgod</a> 大佬的博客，CSS 代码参考<a href="http://www.jianshu.com/p/73b46c376188">这篇文章</a>。</p><p>注意：最新版本的主题已支持，无需添加代码，直接<a href="https://theme-next.org/docs/theme-settings/footer">设置</a><code>animated</code>即可。</p><h2 id="页脚加上微信二维码"><a href="#页脚加上微信二维码" class="headerlink" title="页脚加上微信二维码"></a>页脚加上微信二维码</h2><p>主题默认的微信订阅个人感觉不美观，看到很多网站都是在页脚有个微信的 LOGO，然后鼠标移动到上面便会显示二维码，这样感觉很棒。</p><p>首先编辑文件，在文件最后加上下面代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/layout/_partials/footer.swig</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;weixin-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;weixin-menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;weixin-hover&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;weixin-description&quot;</span>&gt;</span>微信扫一扫，订阅本博客<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后编辑<code>custom.styl</code>，加入：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义的页脚微信订阅号样式</span><br><span class="line"><span class="selector-class">.weixin-box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">43px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.weixin-menu</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://微信的logo.svg</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">24px</span> <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.weixin-hover</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://二维码.svg</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">150px</span> <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.35s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1024</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.weixin-menu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.weixin-hover</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">170px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.weixin-description</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">3%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">5%</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">5%</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.35s</span> <span class="built_in">cubic-bezier</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.weixin-menu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.weixin-description</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图片务必用矢量图 SVG 格式，否则手机上显示效果很差，其它的自己看情况更改。微信 LOGO 的图片我准备好了，点击下载 <a href="https://github.com/reuixiy/reuixiy.github.io/raw/master/uploads/wechat.svg">wechat.svg (1.6KB)</a>。微信订阅号的二维码怎么弄成 SVG 格式呢，安利个<a href="https://cli.im/weixin">网站</a>，下载 SVG 格式的就行。最后，我参考了<a href="https://codepen.io/hj624608494/pen/dpQyJo">这个代码</a>。</p><h2 id="更改标签云（tagcloud）的颜色"><a href="#更改标签云（tagcloud）的颜色" class="headerlink" title="更改标签云（tagcloud）的颜色"></a>更改标签云（tagcloud）的颜色</h2><p>如果你和我一样个性化了博客的整体布局颜色，那么默认的标签云页面可能看起来很丑，怎么更改？修改下文件：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>themes/next/layout/page.<span class="property">swig</span></span><br><span class="line">&#123;&#123; <span class="title function_">tagcloud</span>(&#123;<span class="attr">min_font</span>: <span class="number">13</span>, <span class="attr">max_font</span>: <span class="number">31</span>, <span class="attr">amount</span>: <span class="number">1000</span>, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: <span class="string">&#x27;#9733EE&#x27;</span>, <span class="attr">end_color</span>: <span class="string">&#x27;#FF512F&#x27;</span>&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure><p>修改对应参数值即可，参数说明见 <a href="https://hexo.io/zh-cn/docs/helpers.html#tagcloud">Hexo 官方文档</a>，颜色可以参考<a href="https://uigradients.com/">这个网站</a>，自己去纠结……</p><h2 id="点击侧栏头像回到博客首页"><a href="#点击侧栏头像回到博客首页" class="headerlink" title="点击侧栏头像回到博客首页"></a>点击侧栏头像回到博客首页</h2><p>不知道为什么，我看到侧栏头像的第一反应是点击，然后心理预期会跳到博客首页，可惜也仅是预期，那么开始动手吧～首先要在<strong>主题</strong>配置文件中配置好，比如我把头像<code>avatar.gif</code>放在<code>~/blog/source/uploads/</code>下，则：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="string">-#avatar:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line"><span class="string">+avatar:</span> <span class="string">/uploads/avatar.gif</span></span><br></pre></td></tr></table></figure><p>然后编辑文件：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/layout/_macro/sidebar.swig</span><br><span class="line"></span><br><span class="line">+       <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;site-author-image&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;image&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for( theme.avatar | default(theme.images + &#x27;/avatar.gif&#x27;) ) &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">alt</span>=<span class="string">&quot;&#123;&#123; theme.author &#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line">+       <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文章摘要图片"><a href="#文章摘要图片" class="headerlink" title="文章摘要图片"></a>文章摘要图片</h2><p>俗话说：「图文并茂」，现实中用笔书写文章实现起来比较困难，但在博客上可以很轻松实现😎。首先，文章摘要（excerpt）是指每篇文章（post）在页面（page）上显示的那部分内容，也就是 [Read More] 之前的文章内容。由于它会展示在页面，因此在每篇文章的文章摘要中加一张图片，页面看起来就很美观。但是有时候可能会出现一个问题：你想从文章中选一张图片作为文章摘要图片，而这张图片由于写作要求，必须添加在文章的末尾，这样点 [Read More] 查看文章时，这张图片就会重复出现了。咋办？</p><p>前提是在<strong>主题</strong>配置文件中：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/themes/next/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>首先加代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/layout/_macro/post.swig</span><br><span class="line"></span><br><span class="line">      &#123;% if is_index %&#125;</span><br><span class="line">        &#123;% if post.description and theme.excerpt_description %&#125;</span><br><span class="line">          &#123;&#123; post.description &#125;&#125;</span><br><span class="line">          <span class="comment">&lt;!--noindex--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-button text-center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">              &#123;&#123; __(&#x27;post.read_more&#x27;) &#125;&#125; <span class="symbol">&amp;raquo;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--/noindex--&gt;</span></span><br><span class="line">        &#123;% elif post.excerpt  %&#125;</span><br><span class="line">          &#123;&#123; post.excerpt &#125;&#125;</span><br><span class="line">+          </span><br><span class="line">+        &#123;% if post.image %&#125;</span><br><span class="line">+        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;out-img-topic&quot;</span>&gt;</span></span><br><span class="line">+          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;&#123;</span> <span class="attr">post.image</span> &#125;&#125; <span class="attr">class</span>=<span class="string">&quot;img-topic&quot;</span> /&gt;</span></span><br><span class="line">+        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">+        &#123;% endif %&#125;</span><br><span class="line">+          </span><br><span class="line">          <span class="comment">&lt;!--noindex--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-button text-center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.path) &#125;&#125;&#123;% if theme.scroll_to_more %&#125;#&#123;&#123; __(&#x27;post.more&#x27;) &#125;&#125;&#123;% endif %&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;contents&quot;</span>&gt;</span></span><br><span class="line">              &#123;&#123; __(&#x27;post.read_more&#x27;) &#125;&#125; <span class="symbol">&amp;raquo;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--/noindex--&gt;</span></span><br></pre></td></tr></table></figure><p>为了防止有的图片宽度不够导致风格不够统一，页面不美观，需要在<code>custom.styl</code>中加入：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义的文章摘要图片样式</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-class">.img-topic</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后编辑有这需求的相关文章时，在<code>Front-matter</code>（文件最上方以<code>---</code>分隔的区域）加上一行：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">url</span></span><br></pre></td></tr></table></figure><p><code>url</code>即图片的链接地址～</p><p>参考：</p><ol><li>issue：<a href="https://github.com/iissnan/hexo-theme-next/issues/1190">https://github.com/iissnan/hexo-theme-next/issues/1190</a></li><li>文章：<a href="http://wellliu.com/2016/12/30/%E3%80%90%E8%BD%AC%E3%80%91Blog%E6%91%98%E8%A6%81%E9%85%8D%E5%9B%BE/">http://wellliu.com/2016/12/30/【转】Blog摘要配图/</a></li></ol><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><p>由于博客的首页可能是被浏览最多的页面，所以首页的前几篇文章被阅读的可能性比较大。可以利用这个特点，通过将自己认为重要的文章放在首页，从而让重要的文章被阅读的可能性增大😄。但是，默认的排序只有一个维度——时间，两种选择——正序和倒序，这就造成自己的得意之作被埋没了，怎么办呢，如何实现文章的置顶？</p><p>NexT 主题以前有过这个功能，然而由于一些 bugs（<a href="https://github.com/iissnan/hexo-theme-next/issues/415">issue</a>）被去掉了。不过在这个丰富的 issue 中，我自己摸索出了一种解决方法，参考了 issue 中的那篇<a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/">文章</a>。</p><p>首先移除默认安装的插件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm uninstall hexo-generator-index --save</span><br></pre></td></tr></table></figure><p>然后安装新插件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>最后编辑有这需求的相关文章时，在<code>Front-matter</code>（文件最上方以<code>---</code>分隔的区域）加上一行：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后就行了。如果你置顶了多篇，怎么控制顺序呢？设置<code>top</code>的值（大的在前面），比如：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post a.md</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">a</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post b.md</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">b</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>那么文章 b 便会显示在文章 a 的前面。可是，没有任何标记啊，读者怎么知道文章置顶了😂～还好 NexT 原有的置顶功能有考虑到这个，且置顶的样式没有被移除，所以可以直接利用，编辑文件：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>node_modules/hexo-generator-index-pin-top/lib/generator.<span class="property">js</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">&#x27;hexo-pagination&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">locals</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="variable language_">this</span>.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.<span class="property">posts</span>;</span><br><span class="line">    posts.<span class="property">data</span> = posts.<span class="property">data</span>.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.<span class="property">sticky</span> &amp;&amp; b.<span class="property">sticky</span>) &#123; <span class="comment">// 两篇文章sticky都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.<span class="property">sticky</span> == b.<span class="property">sticky</span>) <span class="keyword">return</span> b.<span class="property">date</span> - a.<span class="property">date</span>; <span class="comment">// 若sticky值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.<span class="property">sticky</span> - a.<span class="property">sticky</span>; <span class="comment">// 否则按照sticky值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.<span class="property">sticky</span> &amp;&amp; !b.<span class="property">sticky</span>) &#123; <span class="comment">// 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.<span class="property">sticky</span> &amp;&amp; b.<span class="property">sticky</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.<span class="property">date</span> - a.<span class="property">date</span>; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.<span class="property">pagination_dir</span> || <span class="string">&#x27;page&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">pagination</span>(<span class="string">&#x27;&#x27;</span>, posts, &#123;</span><br><span class="line">    <span class="attr">perPage</span>: config.<span class="property">index_generator</span>.<span class="property">per_page</span>,</span><br><span class="line">    <span class="attr">layout</span>: [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;archive&#x27;</span>],</span><br><span class="line">    <span class="attr">format</span>: paginationDir + <span class="string">&#x27;/%d/&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">__index</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>也就是将插件的<code>top</code>全部替换为 NexT 原有的<code>sticky</code>，然后将<code>Front-matter</code>中的<code>top</code>替换为<code>sticky</code>，就能调用 NexT 主题原有的置顶样式了。</p><p>最后可以自定义一下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义的文章置顶样式</span><br><span class="line"><span class="selector-class">.post-sticky-flag</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: inherit;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: help;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-sticky-flag</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#07b39b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>已发现的 bug：新安装的插件无法实现<strong>站点</strong>配置文件中<code>order_by: date</code>，即文章按时间从旧到新排列的配置，也就意味着文章只能按默认的时间从新到旧排列。</p><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>1）CSS</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 背景图片</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://背景图.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2）jquery-backstretch</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/layout/_layout.swig</span><br><span class="line"></span><br><span class="line">+  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">+  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">+  $(<span class="string">&quot;body&quot;</span>).<span class="title function_">backstretch</span>(<span class="string">&quot;https://背景图.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">+  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加入到文件最后面<code>&lt;/body&gt;</code>前面即可。你可以浏览器按 F12 查看我的页面，就可以在<code>&lt;/body&gt;</code>前发现。幻灯片等更多用法请自行查看 GitHub 上的 <a href="https://github.com/jquery-backstretch/jquery-backstretch">README</a>。</p><h2 id="动态效果"><a href="#动态效果" class="headerlink" title="动态效果"></a>动态效果</h2><p>可以在<strong>主题</strong>配置文件<code>_config.yml</code>里的<code>motion</code>中配置，但是如果你和我一样更改了博客的背景色，可能不能达到很好的效果，怎么办呢？参考<a href="https://github.com/iissnan/hexo-theme-next/pull/1829/files">这里</a>，修改下面两个文件的相应内容。</p><ol><li>~&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post.styl</li><li>~&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;js&#x2F;src&#x2F;motion.js</li></ol><h2 id="相关╱热门╱推荐文章"><a href="#相关╱热门╱推荐文章" class="headerlink" title="相关╱热门╱推荐文章"></a>相关╱热门╱推荐文章</h2><p><a href="https://io-oi.me/tech/related-popular-recommended-posts.html">https://io-oi.me/tech/related-popular-recommended-posts.html</a></p><h2 id="MathJax-的静态显示（svg）"><a href="#MathJax-的静态显示（svg）" class="headerlink" title="MathJax 的静态显示（svg）"></a>MathJax 的静态显示（svg）</h2><p><a href="https://io-oi.me/tech/hexo-mathjax-svg.html">https://io-oi.me/tech/hexo-mathjax-svg.html</a></p><h2 id="加速-Hexo-博客"><a href="#加速-Hexo-博客" class="headerlink" title="加速 Hexo 博客"></a>加速 Hexo 博客</h2><p><a href="https://io-oi.me/tech/speed-up-hexo.html">https://io-oi.me/tech/speed-up-hexo.html</a></p><h2 id="往归档页面加入-12-生肖"><a href="#往归档页面加入-12-生肖" class="headerlink" title="往归档页面加入 12 生肖"></a>往归档页面加入 12 生肖</h2><p><a href="https://io-oi.me/tech/add-chinese-zodiac-to-next.html">https://io-oi.me/tech/add-chinese-zodiac-to-next.html</a></p><h1 id="进阶-写出优雅文章"><a href="#进阶-写出优雅文章" class="headerlink" title="进阶 写出优雅文章"></a>进阶 写出优雅文章</h1><p>博客搭好了，只能说有个漂亮的外壳，内容丰富且颜值高的文章才是真正的精华。文章内容只能靠自己，不过这里教你几招提高文章颜值的方法。写文章前请先查看 Hexo 官方文档之<a href="https://hexo.io/zh-cn/docs/writing.html">写作</a>，写得很棒！</p><h2 id="文章的模版文件"><a href="#文章的模版文件" class="headerlink" title="文章的模版文件"></a>文章的模版文件</h2><p>如果你是在<strong>站点</strong>文件夹根目录用<code>hexo new post &lt;title&gt;</code>新建的文章，那么其实它就是将文章的模版文件<code>post.md</code>「复制」了一份到<code>~/blog/source/_posts/</code>下，所以这也意味着：</p><ol><li>你可以直接通过在<code>~/blog/source/_posts/</code>下新建<code>.md</code>结尾的文件来写新的文章。</li><li>你可以通过自定义文章的模版文件，从而每次命令行新建的文章都会有你自定义的内容。</li></ol><p>注意：如果自己直接新建文件，一定要记得加上文件最上方的参数，即下面的相关内容，还有编码请用 UTF-8。</p><p>关于文件最上方的参数，参见 Hexo 官方文档的 <a href="https://hexo.io/docs/front-matter.html">Front-matter</a> 和<a href="https://hexo.io/zh-cn/docs/variables.html#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F">页面变量</a>，下面是我的总结：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* ！！！！！！！！！！</span><br><span class="line">** 每一项的 : 后面均有一个空格</span><br><span class="line">** 且 : 为英文符号</span><br><span class="line">** ！！！！！！！！！！</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">title:</span><br><span class="line">/* 文章标题，可以为中文 */</span><br><span class="line"></span><br><span class="line">date:</span><br><span class="line">/* 建立日期，如果自己手动添加，请按固定格式</span><br><span class="line">** 就算不写，页面每篇文章顶部的发表于……也能显示</span><br><span class="line">** 只要在主题配置文件中，配置了 created_at 就行</span><br><span class="line">** 那为什么还要自己加上？</span><br><span class="line">** 自定义文章发布的时间</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">updated:</span><br><span class="line">/* 更新日期，其它与上面的建立日期类似</span><br><span class="line">** 不过在页面每篇文章顶部，是更新于……</span><br><span class="line">** 在主题配置文件中，是 updated_at</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">permalink:</span><br><span class="line">/* 若站点配置文件下的 permalink 配置了 title</span><br><span class="line">** 则可以替换文章 URL 里面的 title（文章标题）</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">categories:</span><br><span class="line">/* 分类，支持多级，比如：</span><br><span class="line">- technology</span><br><span class="line">- computer</span><br><span class="line">- computer-aided-art</span><br><span class="line">则为 technology/computer/computer-aided-art</span><br><span class="line">（不适用于 layout: page）</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">tags:</span><br><span class="line">/* 标签</span><br><span class="line">** 多个可以这样写 [标签1,标签2,标签3]</span><br><span class="line">** （不适用于 layout: page）</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">description:</span><br><span class="line">/* 文章的描述，在每篇文章标题下方显示</span><br><span class="line">** 并且作为网页的 description 元数据</span><br><span class="line">** 如果不写，则自动取 &lt;!-- more --&gt;</span><br><span class="line">** 之前的文字作为网页的 description 元数据</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">keywords:</span><br><span class="line">/* 关键字，并且作为网页的 keywords 元数据</span><br><span class="line">** 如果不写，则自动取 tags 里的项</span><br><span class="line">** 作为网页的 keywords 元数据</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">comments:</span><br><span class="line">/* 是否开启评论</span><br><span class="line">** 默认值是 true</span><br><span class="line">** 要关闭写 false</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">layout:</span><br><span class="line">/* 页面布局，默认值是 post，默认值可以在</span><br><span class="line">** 站点配置文件中修改 default_layout</span><br><span class="line">** 另：404 页面可能用到，将其值改为 false</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">type:</span><br><span class="line">/* categories，目录页面</span><br><span class="line">** tags，标签页面</span><br><span class="line">** picture，用来生成 group-pictures</span><br><span class="line">** quote？</span><br><span class="line">** https://io-oi.me/tech/test.html</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">photos:</span><br><span class="line">/* Gallery support，用来支持画廊╱相册，用法如下：</span><br><span class="line">- photo_url_1</span><br><span class="line">- photo_url_2</span><br><span class="line">- photo_url_3</span><br><span class="line">https://io-oi.me/tech/test.html</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">link:</span><br><span class="line">/* 文章的外部链接</span><br><span class="line">** https://io-oi.me/tech/test.html</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">image:</span><br><span class="line">/* 自定义的文章摘要图片，只在页面展示，文章内消失</span><br><span class="line">** 此项只有参考本文 5.14 节配置好，否则请勿添加！</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">sticky:</span><br><span class="line">/* 文章置顶</span><br><span class="line">** 此项只有参考本文 5.15 节配置好，否则请勿添加！</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">password:</span><br><span class="line">/* 文章密码，此项只有参考教程：</span><br><span class="line">** http://shenzekun.cn/hexo的next主题个性化配置教程.html</span><br><span class="line">** 第 24 节，配置好，否则请勿添加！</span><br><span class="line">** 发现还是有 bug 的，就是右键在新标签中打开</span><br><span class="line">** 然后无论是否输入密码，都能看到内容</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><p>灵活利用 permalink，如果你是一个和我一样希望文章 URL 中不会出现中文的人。</p><h2 id="使用-Markdown（必读）"><a href="#使用-Markdown（必读）" class="headerlink" title="使用 Markdown（必读）"></a>使用 Markdown（必读）</h2><p>用 Hexo 写文章是直接用 Markdown 写的，而不是像 WordPress 有一个类似 Word 一样的文字编辑器，所以第一次用会感觉有点难，但你熟练之后，就会觉得文字编辑器都是辣鸡🌚…</p><h3 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h3><p>Markdown 的目标是实现「易读易写」。</p><p>不过最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，然而最大灵感来源其实是纯文字的电子邮件格式。</p><p>因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像<strong>强调</strong>。Markdown 的清单看起来，嗯，就是清单。假如你有使用过电子邮件，区块引言看起来就真的像是引用一段文字。[^5]</p><h3 id="Markdown-教程"><a href="#Markdown-教程" class="headerlink" title="Markdown 教程"></a>Markdown 教程</h3><p>这是写文章必须掌握的技能哦，一开始可能比较懵，因为大脑没有相关概念，无法将 Markdown 语法「翻译」成相应样式，不过多写几篇就好啦🙊。</p><ol><li><a href="http://markdown.tw/">Markdown 语法说明</a></li><li><a href="https://kennylee26.gitbooks.io/markdown/content/index.html">Markdown 教程</a></li></ol><h3 id="我个人的总结"><a href="#我个人的总结" class="headerlink" title="我个人的总结"></a>我个人的总结</h3><p>1）文章内标题请从二级标题（<code>##</code>）开始！<br>2）英语单词、数字左右看情况加上空格！<br>3）Markdwon 文档写完一段回车后务必再回车一次空一行！</p><h2 id="如何使用-emoji"><a href="#如何使用-emoji" class="headerlink" title="如何使用 emoji"></a>如何使用 emoji</h2><p>在这个表情横行的时代，使用 emoji 似乎已经是日常。之前一直搜索相关插件，安装了很多，但都失败了。后来发现，直接 Copy &amp; Paste 就能用😆，可以去这个网站 Copy。但是有个缺点，就是不同系统，不同浏览器，渲染的效果不同，有些甚至不能显示。为什么呢？因为这种方法 Copy 的是 Unicode，因此显示时有上面这个缺点，但是我们也可以直接调用图片，保证显示效果一致。另：无论主题配置文件中的 fancybox 的值是 true 还是 false，对下面这种方法都没太大影响✌。</p><p>首先安装插件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>然后在<strong>站点</strong>配置文件的适当位置中加入：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="bullet">-</span>  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line"><span class="string">+</span>  <span class="attr">idName:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">unicode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">localEmojis:</span></span><br></pre></td></tr></table></figure><p>没错，加入的是<code>idName</code>这行而非<code>className</code>这行，为什么我要这样写？因为要编辑文件：</p><ol><li>Ctrl + F 搜索<code>class</code>，全部替换为<code>id</code>。</li><li>Ctrl + F 搜索<code>title</code>，更改相关代码，如下：</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~<span class="regexp">/blog/</span>node_modules/hexo-filter-github-emojis/index.<span class="property">js</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> codepoints = emojis[emojiName].<span class="property">codepoints</span></span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">unicode</span> &amp;&amp; codepoints) &#123;</span><br><span class="line">      codepoints = codepoints.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">code</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&amp;#x&#x27;</span> + code + <span class="string">&#x27;;&#x27;</span></span><br><span class="line">      &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;&lt;span id=&quot;&#x27;</span> + options.<span class="property">idName</span> + <span class="string">&#x27;&quot; &#x27;</span> +</span><br><span class="line">        styles +</span><br><span class="line">-        <span class="string">&#x27; title=&quot;&#x27;</span> + emojiName +</span><br><span class="line">-        <span class="string">&#x27;&quot; data-src=&quot;&#x27;</span> + emojis[emojiName].<span class="property">src</span> +</span><br><span class="line">+        <span class="string">&#x27; data-src=&quot;&#x27;</span> + emojis[emojiName].<span class="property">src</span> +</span><br><span class="line">        <span class="string">&#x27;&quot;&gt;&#x27;</span> + codepoints + <span class="string">&#x27;&lt;/span&gt;&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;&lt;img id=&quot;&#x27;</span> + options.<span class="property">idName</span> + <span class="string">&#x27;&quot; &#x27;</span> +</span><br><span class="line">        styles +</span><br><span class="line">-        <span class="string">&#x27; title=&quot;&#x27;</span> + emojiName + <span class="string">&#x27;&quot; alt=&quot;&#x27;</span> + emojiName + <span class="string">&#x27;&quot; src=&quot;&#x27;</span> +</span><br><span class="line">+        <span class="string">&#x27; alt=&quot;&#x27;</span> + emojiName + <span class="string">&#x27;&quot; src=&quot;&#x27;</span> +</span><br><span class="line">        emojis[emojiName].<span class="property">src</span> + <span class="string">&#x27;&quot; height=&quot;20&quot; width=&quot;20&quot; /&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于 NexT 主题的相关样式会干扰 emoji 图片的显示效果，所以要在<code>custom.styl</code>中加代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 里面的 color 值请改为你博客的！ */</span></span><br><span class="line">// 自定义emoji样式</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-id">#github-emoji</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: text-bottom;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">cursor</span>: text;</span><br><span class="line">    <span class="attribute">box-shadow</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">// 文章超链接样式（为emoji特设）</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line">// 标签云页面超链接样式（为emoji特设）</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>);</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">// 文章元数据中categories的样式（为emoji特设）</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.categories</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.categories</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line">// tabs标签（为emoji特设）</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-class">.tabs</span> <span class="selector-tag">ul</span><span class="selector-class">.nav-tabs</span> <span class="selector-tag">li</span><span class="selector-class">.tab</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">// 图片下方标题设置（为emoji特设）</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.fancybox</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 按钮样式（为emoji特设）</span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#222</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后直接去 <a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/">Emoji Cheat Sheet</a> 点一下自己想要的表情复制，再粘贴到自己的文章中即可👻～而且用途不止于 emoji，手机里的各种表情包，传到自己的云存储，然后按照插件 <a href="https://github.com/crimx/hexo-filter-github-emojis">README</a> 中的写法：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;github-emoji&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://表情包.gif&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>改下 URL，看情况改下 height 和 width 的值即可啦，GIF 也可以哦～当然，还有萌即正义的<a href="http://www.yanwenzi.com/">颜文字</a> (ﾉ*･ω･)ﾉ～</p><table><thead><tr><th>问题</th><th>解答</th></tr></thead><tbody><tr><td>调用的是哪里的 emoji 图片？</td><td>由这个插件的 <a href="https://github.com/crimx/hexo-filter-github-emojis">README</a> 可知，调用 <a href="https://api.github.com/emojis">GitHub 的 API</a>，写法也是按照 GitHub 的😉～</td></tr><tr><td>为什么要将插件源码里的<code>class</code>改为<code>id</code>？</td><td>按下 F12 可看到，开启 fancyBox 后，NexT 会为默认的图片标签（<code>img</code>）加上一个<code>fancybox</code>的<code>class</code>，里面有一个样式：<code>display: block !important;</code>，因为我们要让 emoji 显示在文字之间（<code>display: inline;</code>），但是由于默认的<code>class</code>已经加了<code>!important</code>，所以必须用样式规则的应用优先权高于<code>class</code>的<code>id</code>。</td></tr><tr><td>为什么要删除插件源码里的<code>title</code>？</td><td>因为开启 fancyBox 后，NexT 会将图片的<code>title</code>显示在图片下方，显然不满足 emoji 的显示要求。</td></tr><tr><td>为什么要修改<code>.post-body a</code>的样式？</td><td>因为开启 fancyBox 后，NexT 会将图片标签包裹在一个<code>a</code>标签内，而<code>a</code>标签是有下划线的，emoji 下面竟然有根线？显然不满足要求。</td></tr><tr><td>加进<code>custom.styl</code>的其它一大堆代码是什么鬼？</td><td>补 bugs😑…</td></tr></tbody></table><h2 id="插入音乐和视频"><a href="#插入音乐和视频" class="headerlink" title="插入音乐和视频"></a>插入音乐和视频</h2><p>音乐的话，网易云音乐的外链很好用，不仅有可以单曲，还能有歌单，有兴趣的自己去<a href="https://music.163.com/">网易云音乐</a>找首歌尝试。但是有一些音乐因为版权原因放不了，还有就是不完全支持 https，导致小绿锁不见了。要解决这些缺点，就需要安装插件👽。</p><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><p>1）直接用 HTML 的标签，写法如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;https://什么什么什么.mp3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">loop</span>=<span class="string">&quot;loop&quot;</span> <span class="attr">preload</span>=<span class="string">&quot;meta&quot;</span>&gt;</span>Your browser does not support the audio tag.<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2）用插件，有显示歌词功能，也美观。首先在<strong>站点</strong>文件夹根目录安装插件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>然后文章中的写法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">&quot;歌曲名&quot;</span> <span class="string">&quot;歌手名&quot;</span> <span class="string">&quot;https://什么什么什么.mp3&quot;</span> <span class="string">&quot;https://封面图.jpg&quot;</span> <span class="string">&quot;lrc:https://歌词.lrc&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><p>另外可以支持歌单：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;autoplay&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;showlrc&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;mutex&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;music&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;歌曲名&quot;</span>,</span><br><span class="line">            <span class="string">&quot;author&quot;</span>: <span class="string">&quot;歌手名&quot;</span>,</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://什么什么什么.mp3&quot;</span>,</span><br><span class="line">            <span class="string">&quot;pic&quot;</span>: <span class="string">&quot;https://封面图.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;lrc&quot;</span>: <span class="string">&quot;https://歌词.lrc&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;歌曲名&quot;</span>,</span><br><span class="line">            <span class="string">&quot;author&quot;</span>: <span class="string">&quot;歌手名&quot;</span>,</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://什么什么什么.mp3&quot;</span>,</span><br><span class="line">            <span class="string">&quot;pic&quot;</span>: <span class="string">&quot;https://封面图.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;lrc&quot;</span>: <span class="string">&quot;https://歌词.lrc&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><p>里面的详细参数见 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">README</a> 和这插件的「母亲」Aplayer 的<a href="https://aplayer.js.org/">官方文档</a>。关于 <a href="https://baike.baidu.com/item/lrc/46935">LRC</a>歌词，可以用<a href="https://www.zhihu.com/question/27638171">工具</a>下载网易云音乐的歌词，另发现暂时不支持<code>offset</code>参数。当然，如果那歌词很操蛋，有错误（比如字母大小写和标点符号乱加）或者时间完全对不上，然后你也和我一样是个完美主义者，那接下来就是令人窒息的操作了，一句一句自己查看修改……</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190613/lingrenzhixidecaozuo.jpg" alt="lingrenzhixidecaozuo.jpg"></p><p>什么，你想把网易云的几百首歌手动同步到博客😨？慢慢慢，有一种<a href="https://github.com/MoePlayer/hexo-tag-aplayer#meingjs-support-new-in-30">非常简单的方法</a>，此这种方法也支持单曲，将参数里的<code>playlist</code>更改为<code>song</code>即可，非常建议食用！更多功能请仔细阅读 README。</p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>1）直接用 HTML 的标签，写法如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">poster</span>=<span class="string">&quot;https://封面图.jpg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://什么什么什么.mp4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">loop</span>=<span class="string">&quot;loop&quot;</span> <span class="attr">preload</span>=<span class="string">&quot;meta&quot;</span>&gt;</span>Your browser does not support the video tag.<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2）用插件，可支持弹幕，首先在<strong>站点</strong>文件夹根目录安装插件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所在目录：~/blog/</span></span><br><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><p>然后文章中的写法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">&quot;url=https://什么什么什么.mp4&quot;</span> <span class="string">&quot;https://封面图.jpg&quot;</span> <span class="string">&quot;api=https://api.prprpr.me/dplayer/&quot;</span> <span class="string">&quot;id=&quot;</span> <span class="string">&quot;loop=false&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><p>要使用弹幕，必须有<code>api</code>和<code>id</code>两项，并且若使用的是官方的 api 地址（即上面的），id 的值不能与<a href="https://api.prprpr.me/dplayer/list">这个列表</a>的值一样。id 的值自己随便取，唯一要求就是前面这点。如果唯一要求难倒了你，可以使用<a href="http://tool.oschina.net/encrypt?type=2">这个工具</a>将一段与众不同的文字😂生成一段看起来毫无意义的哈希值，这样看起来是不是好多了。</p><p>当然，这个插件的功能还有很多，可以去 <a href="https://github.com/MoePlayer/hexo-tag-dplayer">README</a> 和这插件的「母亲」Dplayer 的<a href="https://dplayer.js.org/">官方文档</a>看看。</p><h2 id="好玩的写作样式"><a href="#好玩的写作样式" class="headerlink" title="好玩的写作样式"></a>好玩的写作样式</h2><p>用一些特殊的样式，可以增加文章的可读性。不过也不是越多越好，没必要写一篇文章就把下面的样式全部用一遍，这样只会适得其反，从下面的样式中选几个自己觉得比较好的、经常会用的就行。而且写博客重点是文章的文字内容，而不是这些样式，样式只是为了让文章更美观，更适合阅读。这和我们用 Markdown 写文章是一样的道理，用 Markdown 而不是直接写 HTML 代码，就是为了将更多时间花在文字上🐒。</p><h3 id="主题自带样式-代码块高亮"><a href="#主题自带样式-代码块高亮" class="headerlink" title="主题自带样式 代码块高亮"></a>主题自带样式 代码块高亮</h3><p>先看效果：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Java</span><br><span class="line"># 代码来自这：https:<span class="comment">//highlightjs.org/static/demo/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> l2f.gameserver.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">L2Char</span> <span class="keyword">extends</span> <span class="title class_">L2Object</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Short</span> <span class="variable">ERROR</span> <span class="operator">=</span> <span class="number">0x0001</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveTo</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> &#123;</span><br><span class="line">    _ai = <span class="literal">null</span>;</span><br><span class="line">    log(<span class="string">&quot;Should not be called&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里指的是**```**代码块，而不是行内代码块（`代码`），它的用法如下：</p><p>```[language] [title] [url] [link-text]</p><p>代码</p><p>```</p><ul><li>[language] 是代码语言的名称，用来设置代码块颜色高亮，非必须；</li><li>[title] 是顶部左边的说明，非必须；</li><li>[url] 是顶部右边的超链接地址，非必须；</li><li>[link text] 如它的字面意思，超链接的名称，非必须。</li></ul><p>亲测这 4 项应该是根据空格来分隔，而不是<code>[]</code>，故请不要加<code>[]</code>。除非如果你想写后面两个，但不想写前面两个，那么就必须加<code>[]</code>了，要这样写：<code>[] [] [url] [link text]</code>。</p><p>首先关于代码块颜色高亮，高亮的模式可以在<strong>主题</strong>配置文件中设置：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br></pre></td></tr></table></figure><p>要颜色正确高亮，代码语言的名称肯定要写对，各种支持语言的名称可以查看<a href="https://almostover.ru/2016-07/hexo-highlight-code-styles/">这篇文章</a>。当然，如果你和我一样懒，可以在<strong>站点</strong>配置文件<code>_config.yml</code>中设置自动高亮：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/blog/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 代码自动高亮</span></span><br><span class="line"><span class="bullet">-</span>  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">+</span>  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>咦？发现了什么没有😳，红色<code>-</code>和绿色<code>+</code>的样式哪来的？哈哈哈，原来这也是一种语言，叫<code>diff</code>，所以你只需在 [language] 这写<code>diff</code>，然后在相应代码前面加上<code>-</code>和<code>+</code>就行了。</p><p>当然，要是你不满意顶部的文字样式，也可以自己在<code>custom.styl</code>自定义：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 文章```代码块顶部样式</span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">figcaption</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0em</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e9e9e9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">figcaption</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考了 Hexo 官方文档的<a href="https://hexo.io/zh-cn/docs/tag-plugins.html#%E4%BB%A3%E7%A0%81%E5%9D%97">标签插件</a>页面，这个页面还有更多的 Hexo 标签插件（Tag Plugins）的用法，请自行查看。</p><h3 id="主题自带样式-各种标签"><a href="#主题自带样式-各种标签" class="headerlink" title="主题自带样式 各种标签"></a>主题自带样式 各种标签</h3><p><a href="https://theme-next.org/docs/tag-plugins/">https://theme-next.org/docs/tag-plugins/</a></p><h3 id="自定义样式-数字块"><a href="#自定义样式-数字块" class="headerlink" title="自定义样式 数字块"></a>自定义样式 数字块</h3><p>由于是自定义的样式，故要自己将 CSS 代码加到<code>custom.styl</code>中。为什么可以自定义呢？如果你是一个和我一样的小白，可以<a href="http://www.divcss5.com/rumen/r3.shtml">点击这里</a>了解了解 CSS 中<code>id</code>和<code>class</code>的知识。</p><p>需加入<code>custom.styl</code>的代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/blog/themes/next/source/css/_custom/custom<span class="selector-class">.styl</span></span><br><span class="line"></span><br><span class="line">// 自定义的数字块</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-toc</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">80%</span> <span class="number">100%</span> <span class="number">90%</span> <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">227</span>, <span class="number">242</span>, <span class="number">253</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.05em</span> <span class="number">0.4em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;inline-toc&quot;</span>&gt;</span>1.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://qianling.pw/style/#TOC%E6%95%B0%E5%AD%97%E5%9D%97">https://qianling.pw/style/#TOC数字块</a></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>其实写这篇文章时，犯了一个很大的错误，把定制（customization）写成了优化（optimization），本文的内容都是个性化的定制，而非优化🌚… 然后毕竟只是小白，本文如有错误，欢迎评论指出～也欢迎你把这篇文章加入收藏夹，毕竟 NexT 主题一直在更新，会有一些新的功能和配置，这篇文章自然也会一直保持更新😄～</p><p>不知道这篇文章有木有照亮你呢？为修改这篇文章博主光通宵就来了两次，如果你觉得这篇文章很赞，欢迎分享本文给更多像我一样的小白看到！感谢😘φ(≧ω≦*)♪～</p><p>最后如果引用本文的内容，麻烦<strong>留个本文的链接</strong>，因为如果读者或我自己发现文章有错误，我会在这里更正，留个本文的链接，防止我暂时的疏漏耽误了他人宝贵的时间。</p><hr><p>[^1]: <a href="https://github.com/ahonn/hexo-theme-even/issues/69">https://github.com/ahonn/hexo-theme-even/issues/69</a><a href="#fnref:1">↑</a><br>[^2]: <a href="http://lovekernel.com/2017/hexo%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA%E7%AC%94%E8%AE%B0/">http://lovekernel.com/2017/hexo博客构建笔记/</a><a href="#fnref:2">↑</a><br>[^3]: <a href="http://lovekernel.com/2017/hexo%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA%E7%AC%94%E8%AE%B0/">http://lovekernel.com/2017/hexo博客构建笔记/</a><a href="#fnref:3">↑</a><br>[^4]: <a href="https://leaferx.online/2017/06/16/use-gulp-to-minimize/">https://leaferx.online/2017/06/16/use-gulp-to-minimize/</a><a href="#fnref:4">↑</a><br>[^5]: <a href="http://markdown.tw/">http://markdown.tw/</a><a href="#fnref:5">↑</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git push报错：The current branch master has no upstream branch</title>
      <link href="/2019/06/12/git-push%E6%8A%A5%E9%94%99%EF%BC%9AThe-current-branch-master-has-no-upstream-branch/"/>
      <url>/2019/06/12/git-push%E6%8A%A5%E9%94%99%EF%BC%9AThe-current-branch-master-has-no-upstream-branch/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>进行<code>git push</code>操作时报错：<code>fatal: The current branch master has no upstream branch.</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190612/1560320619462.png" alt="1560320619462"></p><p><strong>原因：</strong>没有将本地的分支与远程仓库的分支进行关联<br>通过<code>git branch</code>查看本地分支只有<code>master</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190612/1560321303707.png" alt="1560321303707"></p><p>通过<code>git branch -a</code>查看远程分支，有<code>master</code>和<code>remotes/origin/master</code>两个</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190612/1560321309091.png" alt="1560321309091"></p><p>这时由于远程仓库太多，且分支较多。在默认情况下，<code>git push</code>时一般会上传到<code>origin</code>下的<code>master</code>分支上，然而当<code>repository</code>和<code>branch</code>过多，而又没有设置关联时，git就会产生疑问，因为它无法判断你的push目标</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>使用<code>git push --set-upstream origin master</code>命令</p><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><p>使用<code>git push -u origin master</code>命令</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令汇总</title>
      <link href="/2019/06/12/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
      <url>/2019/06/12/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建文章</span></span><br><span class="line">hexo n</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清除缓存</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成静态页面+部署</span></span><br><span class="line">hexo d -g# 等同：hexo g &amp;&amp; hexo d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成静态网页</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部署</span></span><br><span class="line">hexo d</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务器预览</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装hexo</span></span><br><span class="line">npm install hexo -g</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">升级hexo</span></span><br><span class="line">npm update hexo -g</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hexo初始化</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看node.js版本号</span></span><br><span class="line">node -v</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看npm版本号</span></span><br><span class="line">npm -v</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看git版本号</span></span><br><span class="line">git --version</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看hexo版本号</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="插件安装和卸载"><a href="#插件安装和卸载" class="headerlink" title="插件安装和卸载"></a>插件安装和卸载</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装插件</span></span><br><span class="line">npm install hexo-xxx-xxx --save</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载插件</span></span><br><span class="line">npm uninstall hexo-xxx-xxx --save</span><br></pre></td></tr></table></figure><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><table><thead><tr><th align="center">指令</th><th align="center">简写</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">hexo new</td><td align="center">hexo n</td><td align="center">新建文章</td></tr><tr><td align="center">hexo generate</td><td align="center">hexo g</td><td align="center">生成静态文件</td></tr><tr><td align="center">hexo deploy</td><td align="center">hexo d</td><td align="center">部署</td></tr><tr><td align="center">hexo server</td><td align="center">hexo s</td><td align="center">启动服务预览</td></tr><tr><td align="center">hexo publish</td><td align="center">hexo p</td><td align="center">发表草稿</td></tr></tbody></table><p><strong>注: <code>hexo clean</code> 没有简写, <code>git --version</code> 没有简写</strong></p><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个网站</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init [folder]</span></span><br></pre></td></tr></table></figure><p>如果没有设置<code>folder</code>，Hexo默认在<strong>当前文件夹</strong>建立网站</p><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一篇文章,文章名称和标题为 [title],文章采用 [layout] 布局</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure><p>会在目录<code>source/_posts</code>下生成 [title].md 文件，[title].md文件的顶部会使用<code>---</code>分割区域，也称作<strong>Front matter</strong>区<br>如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替（一般默认是<code>post</code>）。<br>如果标题包含空格的话，请使用<strong>引号</strong>括起来。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">eg</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new <span class="string">&quot;post title with whitespace&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成静态文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo generate</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-d</code>, <code>--deploy</code></td><td>文件生成后立即部署网站</td></tr><tr><td><code>-w</code>, <code>--watch</code></td><td>监视文件变动</td></tr></tbody></table><p>执行 <code>$ hexo g</code>后会在站点根目录下生成<code>public</code>文件夹, hexo会将<code>/blog/source/</code>下面的<code>.md</code>后缀的文件编译为<code>.html后</code>缀的文件,存放在<code>/blog/public/ </code>路径下</p><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">发表草稿</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo publish [layout] &lt;filename&gt;</span></span><br></pre></td></tr></table></figure><p><code>hexo publish [layout] &lt;title&gt;</code> 通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹<br>如:<code>$ hexo publish [layout] &lt;title&gt;</code>，草稿默认是不会显示在页面中的，可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code>来预览草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务器（常用于调试）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo server</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br></pre></td></tr></table></figure><p>默认情况下，访问网址为： <code>http://localhost:4000/</code>。Hexo 会监视文件变动并自动更新，除修改<strong>站点配置文件</strong>外,无须重启服务器,直接刷新网页即可生效。</p><table><thead><tr><th>选项</th><th>描述</th><th>eg</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--port</code></td><td>重设端口</td><td>hexo s -p 5000</td></tr><tr><td><code>-s</code>, <code>--static</code></td><td>只使用静态文件</td><td></td></tr><tr><td><code>-l</code>, <code>--log</code></td><td>启动日记记录，使用覆盖记录格式</td><td></td></tr><tr><td><code>-i</code></td><td>自定义IP</td><td>hexo s -i 192.168.1.1</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部署网站,将本地数据部署到远端服务器(如github、coding)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo deploy</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-g</code>, <code>--generate</code></td><td>部署之前预先生成静态文件</td></tr></tbody></table><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 渲染文件</span><br><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-o</code>, <code>--output</code></td><td>设置输出路径</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo migrate &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清除缓存,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo clean</span></span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出网站资料</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo list &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示 Hexo 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo version</span></span><br></pre></td></tr></table></figure><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，执行后将不再使用 <code>_config.yml</code>。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://hexo.io/zh-cn/docs/commands">hexo官方文档</a></li><li><a href="https://segmentfault.com/a/1190000002632530#articleHeader1">hexo常用命令笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命名汇总</title>
      <link href="/2019/06/12/git%E5%B8%B8%E7%94%A8%E5%91%BD%E5%90%8D%E6%B1%87%E6%80%BB/"/>
      <url>/2019/06/12/git%E5%B8%B8%E7%94%A8%E5%91%BD%E5%90%8D%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><h2 id="将本地项目初始化"><a href="#将本地项目初始化" class="headerlink" title="将本地项目初始化"></a>将本地项目初始化</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># </span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给项目添加远程仓库</span></span><br><span class="line">git remote add origin git@github.xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地分支和远程分支建立联系(使用git branch -vv  可以查看本地分支和远程分支的关联关系)</span></span><br><span class="line">git branch --set-upstream-to=origin/远程分支 本地分支   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 首次提交,推送到master并关联此分支</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支</span></span><br><span class="line">git merge [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看分支的合并情况</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">简略信息</span></span><br><span class="line">git log --graph --pretty=oneline --abbrev-commit</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">详细信息</span></span><br><span class="line">git log --graph</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作目录和暂存区的状态</span></span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作区与暂存区的差异</span></span><br><span class="line">git diff</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看某个文件的工作区与暂存区的差异</span></span><br><span class="line">git diff file.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看日志，一个压缩后的每一条提交记录只占一行的输出</span></span><br><span class="line">git log --pretty=oneline</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看命令历史</span></span><br><span class="line">git reflog</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">----分支</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看git本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看git远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有本地分支和远程分支，远程分支为红色</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看每个本地分支的最后一次提交</span></span><br><span class="line">git branch -v</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看本地分支和远程分支联系</span></span><br><span class="line">git branch -vv</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换git分支</span></span><br><span class="line">git checkout branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建分支</span></span><br><span class="line">git branch branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建并切换git分支</span></span><br><span class="line">git checkout -b branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除git分支</span></span><br><span class="line">git branch -d branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制删除git分支</span></span><br><span class="line">git branch -D branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除git远程分支</span></span><br><span class="line">git push origin -d branch-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地分支和远程分支建立联系</span></span><br><span class="line">git branch --set-upstream-to=origin/远程分支 本地分支</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看git 配置</span></span><br><span class="line">git config -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把远程分支迁到本地分支</span></span><br><span class="line">git checkout develop origin/develop</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把远程分支迁到本地顺便切换到该分支</span></span><br><span class="line">git checkout -b develop origin/develop</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改远程仓库地址</span></span><br><span class="line">git remote set-url origin git@github.xxx.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地分支回滚到指定版本</span></span><br><span class="line">git reset --hard &lt;commit ID号&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制推送到远程分支</span></span><br><span class="line">git push -f origin &lt;branch name&gt;</span><br></pre></td></tr></table></figure><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">回退到上一个版本 HEAD表示当前版本</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git reset --hard HEAD~1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">回退到指定版本(版本号可以只写前几位,一般写前4位即可)</span></span><br><span class="line">git reset --hard 56db0ffa425e86bd999683e6b9903e1196290def</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">放弃工作区某个文件的修改</span></span><br><span class="line">git checkout -- file</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把暂存区某个文件的修改撤销掉</span></span><br><span class="line">git reset HEAD &lt;file&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="删除commit记录"><a href="#删除commit记录" class="headerlink" title="删除commit记录"></a>删除commit记录</h2><p>何时需要删除Git提交的历史记录</p><ol><li>当历史记录中出现过<strong>密码</strong>等敏感信息在历史记录中, 需要删除历史记录时</li><li>当项目因历史记录过多, 导致历史记录占用了<strong>大量内存</strong>时, 比如<strong>Github仓库个人总容量时1GB不够用时</strong></li><li>当你想要一个全新的项目的时候, 并且想保持项目代码不变</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 创建全新的孤立分支 latest_branch</span></span><br><span class="line">git checkout --orphan latest_branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 暂存所有文件</span></span><br><span class="line">git add -A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 提交所有文件的修改到latest_branch</span></span><br><span class="line">git commit -am <span class="string">&quot;del all history&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 删除原来的master分支</span></span><br><span class="line">git branch -D master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 修改latest_branch分支名为master</span></span><br><span class="line">git branch -m master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 强制更新远程服务器的master分支, 至此清空git所有历史</span></span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><h2 id="修改commit注释"><a href="#修改commit注释" class="headerlink" title="修改commit注释"></a>修改commit注释</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改最近一次</span></span><br><span class="line">git commit --amend</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改最近多次</span></span><br><span class="line"><span class="comment"># pick -&gt; edit</span></span><br><span class="line">git rebase -i HEAD~n</span><br><span class="line"><span class="comment"># 编辑注释信息</span></span><br><span class="line">git commit --amend</span><br><span class="line"><span class="comment"># 保存</span></span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><blockquote><p>修改完后通过<code>git push -f remote branch</code>强制更新到远程仓库</p></blockquote><h1 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">git init [project-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载一个项目和它的整个代码历史</span></span><br><span class="line">git clone [url]</span><br></pre></td></tr></table></figure><h2 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h2><p><code>git init</code>命令将当前目录转为git仓库<br>它会在当前目录下生成一个<code>.git</code>子目录，在其中写入git的配置和项目的快照</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">git init [project-name]</span><br></pre></td></tr></table></figure><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><p><code>git clone</code>命令用于克隆远程分支</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载一个项目和它的整个代码历史</span></span><br><span class="line">git clone [url]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将alpha目录（必须是git代码仓库），克隆到delta目录</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bare参数表示delta目录只有仓库区，没有工作区和暂存区，即delta目录中就是.git目录的内容</span></span><br><span class="line">git clone alpha delta --bare</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前的Git配置</span></span><br><span class="line">git config --list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑Git配置文件</span></span><br><span class="line">git config -e [--global]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置提交代码时的用户信息</span></span><br><span class="line">git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure><h2 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h2><p>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下，也可以在项目目录下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前的Git配置</span></span><br><span class="line">git config --list </span><br><span class="line">git config -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑Git配置文件</span></span><br><span class="line">git config -e [--global]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置提交代码时的用户信息</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.系统级别：--system</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.用户全局：--global</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.单独一个项目：--<span class="built_in">local</span></span></span><br><span class="line">git config --global user.name &quot;xxxx&quot; #用户名</span><br><span class="line">git config --global user.email &quot;xxxx@xxx.com&quot; #邮箱</span><br><span class="line">git config --global core.editor vim #编辑器</span><br><span class="line"></span><br><span class="line">git config --global alias.st status #按这种方法，配置别名</span><br></pre></td></tr></table></figure><h1 id="增加-x2F-删除文件"><a href="#增加-x2F-删除文件" class="headerlink" title="增加&#x2F;删除文件"></a>增加&#x2F;删除文件</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定文件到暂存区</span></span><br><span class="line">git add [file1] [file2] ...</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm [file1] [file2] ...</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">git rm --cached [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h2><p><code>git add</code>命令用于将变化的文件，从工作区提交到暂存区。它的作用就是告诉 Git，下一次哪些变化需要保存到仓库区。用户可以使用<code>git status</code>命令查看目前的暂存区放置了哪些文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定文件到暂存区</span></span><br><span class="line">git add [file1] [file2] ...</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加当前目录的所有文件到暂存区</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会把当前目录中所有有改动的文件（不包括.gitignore中要忽略的文件）都添加到git缓冲区以待提交</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会把当前目录中所有有改动的文件（包括.gitignore中要忽略的文件）都添加到git缓冲区以待提交</span></span><br><span class="line">git add *#&lt;不推荐&gt;</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p><code>-u</code>参数表示只添加暂存区已有的文件（包括删除操作），但不添加新增的文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add -u</span><br></pre></td></tr></table></figure><p><code>-A</code>或者<code>--all</code>参数表示追踪所有操作，包括新增、修改和删除</p><blockquote><p>Git 2.0 版开始，<code>-A</code>参数成为默认，即<code>git add .</code>等同于<code>git add -A</code></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add -A</span><br></pre></td></tr></table></figure><p> <code>-f</code>参数表示强制添加某个文件，不管<code>.gitignore</code>是否包含了这个文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add -f &lt;fileName&gt;</span><br></pre></td></tr></table></figure><p><code>-p</code>参数表示进入交互模式，指定哪些修改需要添加到暂存区。即使是同一个文件，也可以只提交部分变动。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加每个变化前，都会要求确认，对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">git add -p</span><br></pre></td></tr></table></figure><p>注意，Git 2.0 版以前，<code>git add</code>默认不追踪删除操作。即在工作区删除一个文件后，<code>git add</code>命令不会将这个变化提交到暂存区，导致这个文件继续存在于历史中。<code>Git 2.0</code> 改变了这个行为。</p><h2 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h2><p><code>git rm</code>命令用于删除文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm [file1] [file2] ...</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">git rm --cached [file]</span><br></pre></td></tr></table></figure><h2 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h1 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交暂存区到仓库区</span></span><br><span class="line">git commit -m [message]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交时显示所有diff信息</span></span><br><span class="line">git commit -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit --amend &lt;file1&gt; &lt;file2&gt; ...</span><br></pre></td></tr></table></figure><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><p><code>git commit</code>命令用于将<code>暂存区</code>中的变化提交到<code>仓库区</code>。<br><code>-m</code>参数用于指定 commit 信息，是<strong>必需</strong>的。如果省略<code>-m</code>参数，<code>git commit</code>会自动打开文本编辑器，要求输入。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交暂存区到仓库区</span></span><br><span class="line">git commit -m &quot;message&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交暂存区的指定文件到仓库区</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将工作区中指定文件的变化，先添加到暂存区，然后再将暂存区提交到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><h4 id="m"><a href="#m" class="headerlink" title="-m"></a>-m</h4><p><code>-m</code>参数用于添加提交说明<br>如果没有指定提交说明，运行 commit 会直接打开默认的文本编辑器，让用户撰写提交说明</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;message&quot;</span><br></pre></td></tr></table></figure><h4 id="a"><a href="#a" class="headerlink" title="-a"></a>-a</h4><p><code>-a</code>参数用于先将所有<code>工作区</code>的变动文件，提交到<code>暂存区</code>，再运行<code>git commit</code>。<br>用了<code>-a</code>参数，就不用执行<code>git add .</code>命令了。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -am &quot;message&quot;</span><br></pre></td></tr></table></figure><h4 id="–allow-empty"><a href="#–allow-empty" class="headerlink" title="–allow-empty"></a>–allow-empty</h4><p><code>--allow-empty</code>参数用于没有提交信息的 commit</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit --allow-empty</span><br></pre></td></tr></table></figure><h4 id="–amend"><a href="#–amend" class="headerlink" title="–amend"></a>–amend</h4><p>–amend参数用于撤销上一次 commit，然后生成一个新的 commit</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit --amend &lt;file1&gt; &lt;file2&gt; ...</span><br></pre></td></tr></table></figure><h4 id="–fixup"><a href="#–fixup" class="headerlink" title="–fixup"></a>–fixup</h4><p><code>--fixup</code>参数的含义是，当前添加的 commit 是以前某一个 commit 的<strong>修正</strong>。<br>以后执行互动式的<code>git rebase</code>的时候，这两个 commit 将会<strong>合并</strong>成一个。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交说明将自动生成，即在目标 commit 的提交说明的最前面，添加<span class="string">&quot;fixup!&quot;</span>这个词</span></span><br><span class="line">git commit --fixup &lt;commit&gt;</span><br></pre></td></tr></table></figure><h4 id="–squash"><a href="#–squash" class="headerlink" title="–squash"></a>–squash</h4><p><code>--squash</code>参数的作用与<code>--fixup</code>类似，表示当前添加的 commit 应该与以前某一个 commit 合并成一个，以后执行互动式的<code>git rebase</code>的时候，这两个 commit 将会合并成一个。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit --squash &lt;commit&gt;</span><br></pre></td></tr></table></figure><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，指向指定commit</span></span><br><span class="line">git branch [branch-name] [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">git branch --track [branch-name] [remote-branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">git branch --set-upstream [branch-name] [remote-branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支</span></span><br><span class="line">git merge [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选择一个commit，合并进当前分支</span></span><br><span class="line">git cherry-pick [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除分支</span></span><br><span class="line">git branch -d [branch-name]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除远程分支</span></span><br><span class="line">git push origin --delete &lt;branch-name&gt;</span><br><span class="line">git branch -dr &lt;remote/branch&gt;</span><br></pre></td></tr></table></figure><h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><p><code>git branch</code>是分支操作命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h3 id="新建一个分支"><a href="#新建一个分支" class="headerlink" title="新建一个分支"></a>新建一个分支</h3><p>直接在<code>git branch</code>后面跟上分支名，就表示新建该分支</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch branch-name</span><br></pre></td></tr></table></figure><p>新建一个分支，指向当前 commit。本质是在<code>refs/heads/</code>目录中生成一个文件，文件名为分支名，内容为当前 commit 的哈希值</p><blockquote><p>注意：创建后，还是停留在原来分支，需要用<code>git checkout</code>切换到新建分支</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout branch-name</span><br></pre></td></tr></table></figure><p>使用 <code>-b</code> 参数，可以新建的同时切换到新分支（如果已存在同名分支，则报错）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b NewBranch [MyBranch]</span><br></pre></td></tr></table></figure><p>使用 <code>-B</code> 参数，会强制创建新的分支（如果已存在同名分支，新建分支会覆盖掉原来的分支）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b NewBranch [MyBranch]</span><br></pre></td></tr></table></figure><h4 id="新建一个空分支"><a href="#新建一个空分支" class="headerlink" title="新建一个空分支"></a>新建一个空分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 --orphan 参数创建一个没有父级与其他分支断开的空分支</span></span><br><span class="line">git checkout --orphan branch-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有文件</span></span><br><span class="line">git <span class="built_in">rm</span> -rf .</span><br></pre></td></tr></table></figure><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p><code>-d</code>参数用来删除一个分支，<strong>前提</strong>是该分支没有未合并的变动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除分支</span></span><br><span class="line">git branch -d &lt;branch-name分支名&gt;</span><br></pre></td></tr></table></figure><p><strong>强制删除</strong>一个分支，不管有没有未合并变化</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch -D &lt;branch-name分支名&gt;</span><br></pre></td></tr></table></figure><p>删除<strong>远程分支</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除远程分支</span></span><br><span class="line">git push origin --delete &lt;branch-name&gt;</span><br><span class="line">git branch -dr &lt;remote/branch&gt;</span><br></pre></td></tr></table></figure><h3 id="分支改名"><a href="#分支改名" class="headerlink" title="分支改名"></a>分支改名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支</span></span><br><span class="line">git checkout -b twitter-experiment feature132</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除原来的分支，使用新的分支，从而达到重命名操作</span></span><br><span class="line">git branch -d feature132</span><br></pre></td></tr></table></figure><p>另一种写法</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为当前分支改名</span></span><br><span class="line">git branch -m twitter-experiment</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为指定分支改名</span></span><br><span class="line">git branch -m feature132 twitter-experiment</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果有重名分支，强制改名</span></span><br><span class="line">git branch -m feature132 twitter-experiment</span><br></pre></td></tr></table></figure><h3 id="查看-merge-情况"><a href="#查看-merge-情况" class="headerlink" title="查看 merge 情况"></a>查看 merge 情况</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示全部合并到当前分支的分支</span></span><br><span class="line">git branch --merged</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示未合并到当前分支的分支</span></span><br><span class="line">git branch --no-merged</span><br></pre></td></tr></table></figure><h3 id="拉取远程所有分支"><a href="#拉取远程所有分支" class="headerlink" title="拉取远程所有分支"></a>拉取远程所有分支</h3><blockquote><p><a href="http://stackoverflow.com/questions/10312521/how-to-fetch-all-git-branches">Stack Overflow</a></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch -r | grep -v &#x27;-&gt;&#x27; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;; done</span><br><span class="line">git fetch --all</span><br><span class="line">git pull --all</span><br></pre></td></tr></table></figure><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h2><p>合并指定分支到当前分支</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支</span></span><br><span class="line">git merge [branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支(生成一个新的提交记录)</span></span><br><span class="line">git merge --no-ff [branch]</span><br></pre></td></tr></table></figure><h2 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h2><p><code>git cherry-pick</code>命令”复制”一个提交节点并在当前分支做一次完全一样的新提交</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选择一个commit，合并进当前分支</span></span><br><span class="line">git cherry-pick [commit]</span><br></pre></td></tr></table></figure><h2 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把未提交的修改(工作区和暂存区)储藏起来</span></span><br><span class="line">git stash</span><br><span class="line">git stash save &quot;描述&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看stash内容</span></span><br><span class="line">git stash list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复stash内容</span></span><br><span class="line">git stash pop</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复指定stash内容</span></span><br><span class="line">git stash apply stash@&#123;0&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除stash内容</span></span><br><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有tag</span></span><br><span class="line">git tag</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个tag在当前commit</span></span><br><span class="line">git tag [tag]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个tag在指定commit</span></span><br><span class="line">git tag [tag] [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建带有说明的标签；通过 git show [tag] 查看</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-a 指定标签名；-m 指定说明文字</span></span><br><span class="line">git tag -a [tag] -m [说明] [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除标签(删除本地)</span></span><br><span class="line">git tag -d [tag]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除标签(删除远程,先删除本地)</span></span><br><span class="line">git push origin :refs/tags/[tag]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看tag信息</span></span><br><span class="line">git show [tag]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交指定tag到远程</span></span><br><span class="line">git push [remote] [tag]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交所有tag到远程</span></span><br><span class="line">git push [remote] --tags</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，指向某个tag</span></span><br><span class="line">git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h2><p><code>git tag</code>命令用于为 commit 打标签<br>Tag 分两种：普通tag和注解tag<br>只有<code>annotated tag</code>(注解tag) 才会产生 object</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag tmp # 生成.git/refs/tags/tmp</span><br><span class="line">git tag -a release</span><br><span class="line">git tag -a [VERSION] -m &quot;released [VERSION]&quot;</span><br></pre></td></tr></table></figure><p>上面代码表示为<strong>当前commit</strong>打上一个带注解的标签，标签名为<strong>release</strong><br>普通标签的写法</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag 1.0.0</span><br><span class="line">git push --tags</span><br><span class="line"></span><br><span class="line">git tag v0.0.1</span><br><span class="line">git push origin master --tags</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>标签总是和某个commit挂钩。如果这个commit既出现在master分支，又出现在dev分支，那么在这两个分支上都可以看到这个标签。</p><h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">git blame [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示暂存区和工作区的差异</span></span><br><span class="line">git diff</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示暂存区和上一个commit的差异</span></span><br><span class="line">git diff --cached [&lt;file&gt;]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">git diff HEAD</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示两次提交之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交的元数据和内容变化</span></span><br><span class="line">git show [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交发生变化的文件</span></span><br><span class="line">git show --name-only [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交时，某个文件的内容</span></span><br><span class="line">git show [commit]:[filename]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前分支的最近几次提交</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前分支的版本历史</span></span><br><span class="line">git log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git log --stat</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">git log --follow [file]</span><br><span class="line">git whatchanged [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定文件相关的每一次diff</span></span><br><span class="line">git log -p [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看提交历史[简略信息]</span></span><br><span class="line">git log [--pretty=oneline]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出概要日志,这条命令等同于</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">log</span> --pretty=oneline --abbrev-commit</span></span><br><span class="line">git log --oneline</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过ASCII艺术的树形结构来展示所有的分支, 每个分支都标示了他的名字和标签</span></span><br><span class="line">git log --graph --oneline --decorate --all</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提供类似GUI工具的 <span class="built_in">log</span> 展示</span></span><br><span class="line">git log --graph --date=relative --pretty=tformat:&#x27;%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只看某一个人的提交记录</span></span><br><span class="line">git log --author=username</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">看看哪些文件改变了</span></span><br><span class="line">git log --name-status</span><br></pre></td></tr></table></figure><h1 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h1><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><p>当你从远程仓库克隆时，实际上Git自动把本地的<code>master</code>分支和远程的<code>master</code>分支对应起来了，并且，远程仓库的默认名称是<code>origin</code><br><code>git remote</code>查看远程库的信息</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载远程仓库的所有变动</span></span><br><span class="line">git fetch [remote]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看远程库详细信息</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示可以抓取(fetch)和推送(push)的origin的地址；如果没有推送权限，就看不到push的地址</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某个远程仓库的信息</span></span><br><span class="line">git remote show [remote]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">增加一个新的远程仓库，并命名</span></span><br><span class="line">git remote add [shortname] [url]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改远程仓库地址</span></span><br><span class="line">git remote set-url origin git@github.xxx.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git pull [remote] [branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传本地指定分支到远程仓库</span></span><br><span class="line">git push [remote] [branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push [remote] --force</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推送所有分支到远程仓库</span></span><br><span class="line">git push [remote] --all</span><br></pre></td></tr></table></figure><h1 id="查看版本改动"><a href="#查看版本改动" class="headerlink" title="查看版本改动"></a>查看版本改动</h1><h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><p><code>git diff</code>命令用于查看文件之间的差异</p><p>在git提交环节，存在三大部分：<strong>working tree</strong>（工作区）, <strong>index file</strong>（暂存区：stage）, <strong>commit</strong>（分支：master）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作区与暂存区的差异</span></span><br><span class="line">git diff</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看某个文件的工作区与暂存区的差异</span></span><br><span class="line">git diff file.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看暂存区与当前 commit 的差异</span></span><br><span class="line">git diff --cached</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看两个commit的差异</span></span><br><span class="line">git diff &lt;commitBefore&gt; &lt;commitAfter&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看暂存区与仓库区的差异</span></span><br><span class="line">git diff --cached</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作区与上一次commit之间的差异</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">即如果执行 git commit -a，将提交的文件</span></span><br><span class="line">git diff HEAD</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作区与某个 commit 的差异</span></span><br><span class="line">git diff &lt;commit&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示两次提交之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作区与当前分支上一次提交的差异，但是局限于<span class="built_in">test</span>文件</span></span><br><span class="line">git diff HEAD -- ./test</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前分支上一次提交与上上一次提交之间的差异</span></span><br><span class="line">git diff HEAD -- ./test</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成patch</span></span><br><span class="line">git format-patch master --stdout &gt; mypatch.patch</span><br></pre></td></tr></table></figure><p>比较两个分支</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看topic分支与master分支最新提交之间的差异</span></span><br><span class="line">git diff topic master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">与上一条命令相同</span></span><br><span class="line">git diff topic..master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看自从topic分支建立以后，master分支发生的变化</span></span><br><span class="line">git diff topic...master</span><br></pre></td></tr></table></figure><h1 id="版本回退-1"><a href="#版本回退-1" class="headerlink" title="版本回退"></a>版本回退</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复某个commit的指定文件到工作区</span></span><br><span class="line">git checkout [commit] [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复上一个commit的所有文件到工作区</span></span><br><span class="line">git checkout .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">git reset [file]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">git reset --hard</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">git reset [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">git reset --hard [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">git reset --keep [commit]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">git revert [commit]</span><br></pre></td></tr></table></figure><h1 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制添加到Git</span></span><br><span class="line">git add -f &lt;filename&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看某文件在.gitignore对应的过滤规则</span></span><br><span class="line">git check-ignore -v &lt;filename&gt;</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成一个可供发布的压缩包</span></span><br><span class="line">git archive</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除未跟踪的目录和文件【慎用】</span></span><br><span class="line">git clean -d -f</span><br></pre></td></tr></table></figure><p><code>HEAD</code>表示当前版本，也就是最新的提交。上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，<br>往上100个版本写100个<code>^</code> 比较容易数不过来，所以写成<code>HEAD~100</code>。<code>HEAD~2</code>相当于<code>HEAD^^</code></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰官方网站</a>、<a href="https://www.bookstack.cn/books/git-tutorial">阮一峰 Git 教程</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式公式</title>
      <link href="/2019/06/10/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%85%AC%E5%BC%8F/"/>
      <url>/2019/06/10/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：艾欢欢</p><p>链接：<a href="https://mp.weixin.qq.com/s?__biz=MzIwMTY0NDU3Nw==&mid=2651939156&idx=1&sn=79f0579d9070be0fb61bce7e503ea9be&chksm=8d0f0e1aba78870ce8a2b6749b1749069946d4cba32a819c424b96d1c1b38ba0c096452fdcb1&mpshare=1&scene=1&srcid=&key=c057d35eab709d25144f00cb6fa9b63212b36228878f80f4bce5a77b2439611899d707ea217205f14f3957120d4979ff78fd401ea654e0b67635d0d36e71dd4b347163fa798001e7963ac98d4cd62e50&ascene=1&uin=MjYxNjc3MjAzOA==&devicetype=Windows+10&version=62060833&lang=zh_CN&pass_ticket=2Z5hSrTwDuopoqQqW4vKeZajl7djxXXhYMTrGA/C5uVIPjB09bhdrVYCqRhocWOj">收藏一波：常用正则表达式公式总结</a></p></blockquote><h1 id="校验数字的表达式"><a href="#校验数字的表达式" class="headerlink" title="校验数字的表达式"></a>校验数字的表达式</h1><p>一位数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[0-9]\*$</span><br></pre></td></tr></table></figure><p>n位的数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d&#123;n&#125;$</span><br></pre></td></tr></table></figure><p>至少n位的数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d&#123;n,&#125;$</span><br></pre></td></tr></table></figure><p>m-n位的数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d&#123;m,n&#125;$</span><br></pre></td></tr></table></figure><p>零和非零开头的数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(0|[1-9][0-9]\*)$</span><br></pre></td></tr></table></figure><p>非零开头的最多带两位小数的数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^([1-9][0-9]\*)+(\.[0-9]&#123;1,2&#125;)?$</span><br></pre></td></tr></table></figure><p>带1-2位小数的正数或负数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(\-)?\d+(\.\d&#123;1,2&#125;)$</span><br></pre></td></tr></table></figure><p>正数、负数、和小数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(\-|\+)?\d+(\.\d+)?$</span><br></pre></td></tr></table></figure><p>有两位小数的正实数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[0-9]+(\.[0-9]&#123;2&#125;)?$</span><br></pre></td></tr></table></figure><p>有1~3位小数的正实数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[0-9]+(\.[0-9]&#123;1,3&#125;)?$</span><br></pre></td></tr></table></figure><p>非零的正整数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[1-9]\d\*$</span><br><span class="line">或</span><br><span class="line">^([1-9][0-9]\*)&#123;1,3&#125;$</span><br><span class="line">或</span><br><span class="line">^\+?[1-9][0-9]\*$</span><br></pre></td></tr></table></figure><p>非零的负整数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\-[1-9][]0-9&quot;\*$</span><br><span class="line">或</span><br><span class="line">^-[1-9]\d\*$</span><br></pre></td></tr></table></figure><p>非负整数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d+$</span><br><span class="line">或</span><br><span class="line">^[1-9]\d\*|0$</span><br></pre></td></tr></table></figure><p>非正整数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^-[1-9]\d\*|0$</span><br><span class="line">或</span><br><span class="line">^((-\d+)|(0+))$</span><br></pre></td></tr></table></figure><p>非负浮点数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d+(\.\d+)?$</span><br><span class="line">或</span><br><span class="line">^[1-9]\d\*\.\d\*|0\.\d\*[1-9]\d\*|0?\.0+|0$</span><br></pre></td></tr></table></figure><p>非正浮点数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^((-\d+(\.\d+)?)|(0+(\.0+)?))$</span><br><span class="line">或</span><br><span class="line">^(-([1-9]\d\*\.\d\*|0\.\d\*[1-9]\d\*))|0?\.0+|0$</span><br></pre></td></tr></table></figure><p>正浮点数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[1-9]\d\*\.\d\*|0\.\d\*[1-9]\d\*$</span><br><span class="line">或</span><br><span class="line">^(([0-9]+\.[0-9]\*[1-9][0-9]\*)|([0-9]\*[1-9][0-9]\*\.[0-9]+)|([0-9]\*[1-9][0-9]\*))$</span><br></pre></td></tr></table></figure><p>负浮点数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^-([1-9]\d\*\.\d\*|0\.\d\*[1-9]\d\*)$</span><br><span class="line">或</span><br><span class="line">^(-(([0-9]+\.[0-9]\*[1-9][0-9]\*)|([0-9]\*[1-9][0-9]\*\.[0-9]+)|([0-9]\*[1-9][0-9]\*)))$</span><br></pre></td></tr></table></figure><p>浮点数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(-?\d+)(\.\d+)?$</span><br><span class="line">或</span><br><span class="line">^-?([1-9]\d\*\.\d\*|0\.\d\*[1-9]\d\*|0?\.0+|0)$</span><br></pre></td></tr></table></figure><h1 id="校验字符的表达式"><a href="#校验字符的表达式" class="headerlink" title="校验字符的表达式"></a>校验字符的表达式</h1><p>汉字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[\u4e00-\u9fa5]&#123;0,&#125;$</span><br></pre></td></tr></table></figure><p>英文和数字：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[A-Za-z0-9]+$</span><br><span class="line">或</span><br><span class="line">^[A-Za-z0-9]&#123;4,40&#125;$</span><br></pre></td></tr></table></figure><p>长度为3-20的所有字符：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^.&#123;3,20&#125;$</span><br></pre></td></tr></table></figure><p>由26个英文字母组成的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[A-Za-z]+$</span><br></pre></td></tr></table></figure><p>由26个大写英文字母组成的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[A-Z]+$</span><br></pre></td></tr></table></figure><p>由26个小写英文字母组成的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[a-z]+$</span><br></pre></td></tr></table></figure><p>由数字和26个英文字母组成的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[A-Za-z0-9]+$</span><br></pre></td></tr></table></figure><p>由数字、26个英文字母或者下划线组成的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\w+$ 或 ^\w&#123;3,20&#125;$</span><br></pre></td></tr></table></figure><p>中文、英文、数字包括下划线：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[\u4E00-\u9FA5A-Za-z0-9_]+$</span><br></pre></td></tr></table></figure><p>中文、英文、数字但不包括下划线等符号：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</span><br></pre></td></tr></table></figure><p>禁止输入含有~的字符：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[^~\x22]+</span><br></pre></td></tr></table></figure><h1 id="特殊需求表达式"><a href="#特殊需求表达式" class="headerlink" title="特殊需求表达式"></a>特殊需求表达式</h1><p>Email地址：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\w+([-+.]\w+)\*@\w+([-.]\w+)\*\.\w+([-.]\w+)\*$</span><br></pre></td></tr></table></figure><p>域名：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?</span><br></pre></td></tr></table></figure><p>InternetURL：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[a-zA-z]+://[^\s]\* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]\*)?$</span><br></pre></td></tr></table></figure><p>手机号码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</span><br></pre></td></tr></table></figure><p>国内电话号码(0511-4405222、021-87888822)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</span><br></pre></td></tr></table></figure><p>电话号码正则表达式（支持手机号码，3-4位区号，7-8位直播号码，1－4位分机号）:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">((\d&#123;11&#125;)|^((\d&#123;7,8&#125;)|(\d&#123;4&#125;|\d&#123;3&#125;)-(\d&#123;7,8&#125;)|(\d&#123;4&#125;|\d&#123;3&#125;)-(\d&#123;7,8&#125;)-(\d&#123;4&#125;|\d&#123;3&#125;|\d&#123;2&#125;|\d&#123;1&#125;)|(\d&#123;7,8&#125;)-(\d&#123;4&#125;|\d&#123;3&#125;|\d&#123;2&#125;|\d&#123;1&#125;))$)</span><br></pre></td></tr></table></figure><p>身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)</span><br></pre></td></tr></table></figure><p>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br></pre></td></tr></table></figure><p>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^[a-zA-Z]\w&#123;5,17&#125;$</span><br></pre></td></tr></table></figure><p>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(?=.\*\d)(?=.\*[a-z])(?=.\*[A-Z])[a-zA-Z0-9]&#123;8,10&#125;$</span><br></pre></td></tr></table></figure><p>强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(?=.\*\d)(?=.\*[a-z])(?=.\*[A-Z]).&#123;8,10&#125;$</span><br></pre></td></tr></table></figure><p>日期格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br></pre></td></tr></table></figure><p>一年的12个月(01～09和1～12)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^(0?[1-9]|1[0-2])$</span><br></pre></td></tr></table></figure><p>一个月的31天(01～09和1～31)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^((0?[1-9])|((1|2)[0-9])|30|31)$</span><br></pre></td></tr></table></figure><p>xml文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</span><br></pre></td></tr></table></figure><p>中文字符的正则表达式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[\u4e00-\u9fa5]</span><br></pre></td></tr></table></figure><p>空白行的正则表达式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\n\s\*\r (可以用来删除空白行)</span><br></pre></td></tr></table></figure><p>HTML标记的正则表达式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;(\S\*?)[^&gt;]\*&gt;.\*?|&lt;.\*? /&gt; ( 首尾空白字符的正则表达式：^\s\*|\s\*$或(^\s\*)|(\s\*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br></pre></td></tr></table></figure><p>腾讯QQ号：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1-9][0-9]&#123;4,&#125; (腾讯QQ号从10000开始)</span><br></pre></td></tr></table></figure><p>中国邮政编码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1-9]\d&#123;5&#125;(?!\d) (中国邮政编码为6位数字)</span><br></pre></td></tr></table></figure><p>IP地址：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一千行MySQL学习笔记</title>
      <link href="/2019/06/05/%E4%B8%80%E5%8D%83%E8%A1%8CMySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/06/05/%E4%B8%80%E5%8D%83%E8%A1%8CMySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：Jioby</p><p>链接： <a href="https://shockerli.net/post/1000-line-mysql-note/">https://shockerli.net/post/1000-line-mysql-note/</a></p></blockquote><h1 id="Windows服务"><a href="#Windows服务" class="headerlink" title="Windows服务"></a>Windows服务</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 启动mysql</span></span><br><span class="line">net <span class="keyword">start</span> mysql</span><br><span class="line"><span class="comment">-- 创建windows服务(注意：等号与值之间有空格)</span></span><br><span class="line">sc <span class="keyword">create</span> mysql binpath<span class="operator">=</span> mysqld_bin_path</span><br></pre></td></tr></table></figure><h1 id="连接与断开服务器"><a href="#连接与断开服务器" class="headerlink" title="连接与断开服务器"></a>连接与断开服务器</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 连接（地址、端口可不填，默认为localhost:3306）</span></span><br><span class="line">mysql <span class="operator">-</span>h 地址 <span class="operator">-</span>P 端口 <span class="operator">-</span>u 用户名 <span class="operator">-</span>p 密码</span><br><span class="line"><span class="comment">-- 显示哪些线程正在运行</span></span><br><span class="line"><span class="keyword">show</span> processlist</span><br><span class="line"><span class="comment">-- 显示系统变量信息</span></span><br><span class="line"><span class="keyword">show</span> variables</span><br></pre></td></tr></table></figure><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看当前数据库</span></span><br><span class="line"><span class="keyword">select</span> database();</span><br><span class="line"><span class="comment">-- 显示当前时间、用户名、数据库版本</span></span><br><span class="line"><span class="keyword">select</span> now(), <span class="keyword">user</span>(), version();</span><br><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line"><span class="keyword">create</span> database [if <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名 数据库选项</span><br><span class="line">    <span class="comment">-- 数据库选项：</span></span><br><span class="line">    <span class="type">character</span> <span class="keyword">set</span> charset_name</span><br><span class="line">    <span class="keyword">collate</span> collation_name</span><br><span class="line"><span class="comment">-- 查看已有库</span></span><br><span class="line"><span class="keyword">show</span> databases [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]</span><br><span class="line"><span class="comment">-- 查看当前库信息</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database 数据库名</span><br><span class="line"><span class="comment">-- 修改库的选项信息</span></span><br><span class="line"><span class="keyword">alter</span> database 库名 选项信息</span><br><span class="line"><span class="comment">-- 删除库</span></span><br><span class="line"><span class="keyword">drop</span> database[ if <span class="keyword">exists</span>] 数据库名</span><br><span class="line"><span class="comment">-- 同时删除该数据库相关的目录及其目录内容</span></span><br></pre></td></tr></table></figure><h1 id="表的操作"><a href="#表的操作" class="headerlink" title="表的操作"></a>表的操作</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> [temporary] <span class="keyword">table</span> [if <span class="keyword">not</span> <span class="keyword">exists</span>] [库名.]表名 (表的结构定义) [表选项]</span><br><span class="line">每个字段必须有数据类型</span><br><span class="line">最后一个字段后不能有逗号</span><br><span class="line">temporary 临时表，会话结束时表自动消失</span><br><span class="line">对于字段的定义：</span><br><span class="line">字段名 数据类型 [<span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span> <span class="keyword">null</span>] [<span class="keyword">default</span> default_value] [auto_increment] [<span class="keyword">unique</span> [key] <span class="operator">|</span> [<span class="keyword">primary</span>] key] [comment <span class="string">&#x27;string&#x27;</span>]</span><br><span class="line"><span class="comment">-- 表选项</span></span><br><span class="line"><span class="comment">-- 字符集</span></span><br><span class="line">        charset <span class="operator">=</span> charset_name</span><br><span class="line">        如果表没有设定，则使用数据库字符集</span><br><span class="line">    <span class="comment">-- 存储引擎</span></span><br><span class="line">        engine <span class="operator">=</span> engine_name</span><br><span class="line">        表在管理数据时采用的不同的数据结构，结构不同会导致处理方式、提供的特性操作等不同</span><br><span class="line">        常见的引擎：innodb myisam memory<span class="operator">/</span>heap bdb <span class="keyword">merge</span> example csv maxdb archive</span><br><span class="line">        不同的引擎在保存表的结构和数据时采用不同的方式</span><br><span class="line">        myisam表文件含义：.frm表定义，.myd表数据，.myi表索引</span><br><span class="line">        innodb表文件含义：.frm表定义，表空间数据和日志文件</span><br><span class="line">        <span class="keyword">show</span> engines <span class="comment">-- 显示存储引擎的状态信息</span></span><br><span class="line">        <span class="keyword">show</span> engine 引擎名 &#123;logs<span class="operator">|</span>status&#125; <span class="comment">-- 显示存储引擎的日志或状态信息</span></span><br><span class="line">    <span class="comment">-- 自增起始数</span></span><br><span class="line">    auto_increment <span class="operator">=</span> 行数</span><br><span class="line">    <span class="comment">-- 数据文件目录</span></span><br><span class="line">        data directory <span class="operator">=</span> <span class="string">&#x27;目录&#x27;</span></span><br><span class="line">    <span class="comment">-- 索引文件目录</span></span><br><span class="line">        index directory <span class="operator">=</span> <span class="string">&#x27;目录&#x27;</span></span><br><span class="line">    <span class="comment">-- 表注释</span></span><br><span class="line">        comment <span class="operator">=</span> <span class="string">&#x27;string&#x27;</span></span><br><span class="line">    <span class="comment">-- 分区选项</span></span><br><span class="line">        <span class="keyword">partition</span> <span class="keyword">by</span> ... (详细见手册)</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span>[ if <span class="keyword">exists</span>] 表名 ...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空表数据</span></span><br><span class="line"><span class="keyword">truncate</span> [<span class="keyword">table</span>] 表名</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看所有表</span></span><br><span class="line"><span class="keyword">show</span> tables [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]</span><br><span class="line"><span class="keyword">show</span> tables <span class="keyword">from</span> 表名</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表机构</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名 （信息更详细）</span><br><span class="line"><span class="keyword">desc</span> 表名 <span class="operator">/</span> <span class="keyword">describe</span> 表名 <span class="operator">/</span> explain 表名 <span class="operator">/</span> <span class="keyword">show</span> columns <span class="keyword">from</span> 表名 [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status [<span class="keyword">from</span> db_name] [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 复制表结构</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 <span class="keyword">like</span> 要复制的表名</span><br><span class="line"><span class="comment">-- 复制表结构和数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 [<span class="keyword">as</span>] <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 要复制的表名</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查表是否有错误</span></span><br><span class="line"><span class="keyword">check</span> <span class="keyword">table</span> tbl_name [, tbl_name] ... [option] ...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 优化表</span></span><br><span class="line">optimize [<span class="keyword">local</span> <span class="operator">|</span> no_write_to_binlog] <span class="keyword">table</span> tbl_name [, tbl_name] ...</span><br><span class="line"><span class="comment">-- 修复表</span></span><br><span class="line">repair [<span class="keyword">local</span> <span class="operator">|</span> no_write_to_binlog] <span class="keyword">table</span> tbl_name [, tbl_name] ... [quick] [extended] [use_frm]</span><br><span class="line"><span class="comment">-- 分析表</span></span><br><span class="line">analyze [<span class="keyword">local</span> <span class="operator">|</span> no_write_to_binlog] <span class="keyword">table</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ### 修改表 ###</span></span><br><span class="line"><span class="comment">-- 修改表本身的选项</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 表的选项</span><br><span class="line">eg: <span class="keyword">alter</span> <span class="keyword">table</span> 表名 engine<span class="operator">=</span>myisam;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对表进行重命名</span></span><br><span class="line">rename <span class="keyword">table</span> 原表名 <span class="keyword">to</span> 新表名</span><br><span class="line">rename <span class="keyword">table</span> 原表名 <span class="keyword">to</span> 库名.表名 （可将表移动到另一个数据库）</span><br><span class="line"><span class="comment">-- rename可以交换两个表名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表的字段机构（13.1.2. alter table语法）</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 操作名</span><br><span class="line"><span class="comment">-- 操作名</span></span><br><span class="line"><span class="keyword">add</span>[ <span class="keyword">column</span>] 字段定义       <span class="comment">-- 增加字段</span></span><br><span class="line">after 字段名          <span class="comment">-- 表示增加在该字段名后面</span></span><br><span class="line"><span class="keyword">first</span>               <span class="comment">-- 表示增加在第一个</span></span><br><span class="line"><span class="keyword">add</span> <span class="keyword">primary</span> key(字段名)   <span class="comment">-- 创建主键</span></span><br><span class="line"><span class="keyword">add</span> <span class="keyword">unique</span> [索引名] (字段名)<span class="comment">-- 创建唯一索引</span></span><br><span class="line"><span class="keyword">add</span> index [索引名] (字段名) <span class="comment">-- 创建普通索引</span></span><br><span class="line"><span class="keyword">drop</span>[ <span class="keyword">column</span>] 字段名      <span class="comment">-- 删除字段</span></span><br><span class="line">modify[ <span class="keyword">column</span>] 字段名 字段属性     <span class="comment">-- 支持对字段属性进行修改，不能修改字段名(所有原有属性也需写上)</span></span><br><span class="line">change[ <span class="keyword">column</span>] 原字段名 新字段名 字段属性      <span class="comment">-- 支持对字段名修改</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">primary</span> key    <span class="comment">-- 删除主键(删除主键前需删除其auto_increment属性)</span></span><br><span class="line"><span class="keyword">drop</span> index 索引名 <span class="comment">-- 删除索引</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">foreign</span> key 外键    <span class="comment">-- 删除外键</span></span><br></pre></td></tr></table></figure><h1 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 增</span></span><br><span class="line"><span class="keyword">insert</span> [<span class="keyword">into</span>] 表名 [(字段列表)] <span class="keyword">values</span> (值列表)[, (值列表), ...]</span><br><span class="line">    <span class="comment">-- 如果要插入的值列表包含所有字段并且顺序一致，则可以省略字段列表。</span></span><br><span class="line">    <span class="comment">-- 可同时插入多条数据记录！</span></span><br><span class="line">    replace 与 <span class="keyword">insert</span> 完全一样，可互换</span><br><span class="line"><span class="keyword">insert</span> [<span class="keyword">into</span>] 表名 <span class="keyword">set</span> 字段名<span class="operator">=</span>值[, 字段名<span class="operator">=</span>值, ...]</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名[ 删除条件子句]</span><br><span class="line">⚠没有条件子句，则会删除全部</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查</span></span><br><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 [其他子句]</span><br><span class="line">    <span class="comment">-- 可来自多个表的多个字段</span></span><br><span class="line">    <span class="comment">-- 其他子句可以不使用</span></span><br><span class="line">    <span class="comment">-- 字段列表可以用*代替，表示所有字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 改</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名<span class="operator">=</span>新值[, 字段名<span class="operator">=</span>新值] [更新条件]</span><br></pre></td></tr></table></figure><h1 id="字符集编码"><a href="#字符集编码" class="headerlink" title="字符集编码"></a>字符集编码</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- mysql、数据库、表、字段均可设置编码</span></span><br><span class="line"><span class="comment">-- 数据编码与客户端编码不需一致</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;character_set_%&#x27;</span>   <span class="comment">-- 查看所有字符集编码项</span></span><br><span class="line">    character_set_client        客户端向服务器发送数据时使用的编码</span><br><span class="line">    character_set_results       服务器端将结果返回给客户端所使用的编码</span><br><span class="line">    character_set_connection    连接层编码</span><br><span class="line"><span class="keyword">set</span> 变量名 <span class="operator">=</span> 变量值</span><br><span class="line">    <span class="keyword">set</span> character_set_client <span class="operator">=</span> gbk;</span><br><span class="line">    <span class="keyword">set</span> character_set_results <span class="operator">=</span> gbk;</span><br><span class="line">    <span class="keyword">set</span> character_set_connection <span class="operator">=</span> gbk;</span><br><span class="line"><span class="keyword">set</span> names gbk;  <span class="comment">-- 相当于完成以上三个设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 校对集</span></span><br><span class="line">    校对集用以排序</span><br><span class="line">    <span class="keyword">show</span> <span class="type">character</span> <span class="keyword">set</span> [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]<span class="operator">/</span><span class="keyword">show</span> charset [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]   查看所有字符集</span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">collation</span> [<span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>]     查看所有校对集</span><br><span class="line">    charset 字符集编码     设置字符集编码</span><br><span class="line">    <span class="keyword">collate</span> 校对集编码     设置校对集编码</span><br></pre></td></tr></table></figure><h1 id="数据类型-列类型"><a href="#数据类型-列类型" class="headerlink" title="数据类型(列类型)"></a>数据类型(列类型)</h1><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 数值类型</span><br><span class="line"><span class="comment">-- ### a.整型 ###</span></span><br><span class="line">类型         字节     范围（有符号位）</span><br><span class="line">tinyint     <span class="number">1</span>字节    <span class="number">-128</span> <span class="operator">~</span> <span class="number">127</span>      无符号位：<span class="number">0</span> <span class="operator">~</span> <span class="number">255</span></span><br><span class="line"><span class="type">smallint</span>    <span class="number">2</span>字节    <span class="number">-32768</span> <span class="operator">~</span> <span class="number">32767</span></span><br><span class="line">mediumint   <span class="number">3</span>字节    <span class="number">-8388608</span> <span class="operator">~</span> <span class="number">8388607</span></span><br><span class="line"><span class="type">int</span>         <span class="number">4</span>字节</span><br><span class="line"><span class="type">bigint</span>      <span class="number">8</span>字节</span><br><span class="line"><span class="type">int</span>(m)  m表示总位数</span><br><span class="line"><span class="operator">-</span> 默认存在符号位，unsigned 属性修改</span><br><span class="line"><span class="operator">-</span> 显示宽度，如果某个数不够定义字段时设置的位数，则前面以<span class="number">0</span>补填，zerofill 属性修改</span><br><span class="line">例：<span class="type">int</span>(<span class="number">5</span>)   插入一个数<span class="string">&#x27;123&#x27;</span>，补填后为<span class="string">&#x27;00123&#x27;</span></span><br><span class="line"><span class="operator">-</span> 在满足要求的情况下，越小越好。</span><br><span class="line"><span class="operator">-</span> <span class="number">1</span>表示bool值真，<span class="number">0</span>表示bool值假。mysql没有布尔类型，通过整型<span class="number">0</span>和<span class="number">1</span>表示。常用tinyint(<span class="number">1</span>)表示布尔型。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ### b.浮点型 ###</span></span><br><span class="line">类型             字节     范围</span><br><span class="line"><span class="type">float</span>(单精度)     <span class="number">4</span>字节</span><br><span class="line"><span class="keyword">double</span>(双精度)    <span class="number">8</span>字节</span><br><span class="line">浮点型既支持符号位 unsigned 属性，也支持显示宽度 zerofill 属性。</span><br><span class="line">不同于整型，前后均会补填<span class="number">0.</span></span><br><span class="line">定义浮点型时，需指定总位数和小数位数。</span><br><span class="line"><span class="type">float</span>(m, d)     <span class="keyword">double</span>(m, d)</span><br><span class="line">m表示总位数，d表示小数位数。</span><br><span class="line">m和d的大小会决定浮点数的范围。不同于整型的固定范围。</span><br><span class="line">m既表示总位数（不包括小数点和正负号），也表示显示宽度（所有显示符号均包括）。</span><br><span class="line">支持科学计数法表示。</span><br><span class="line">浮点数表示近似值。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ### c.定点数 ###</span></span><br><span class="line"><span class="type">decimal</span> <span class="comment">-- 可变长度</span></span><br><span class="line"><span class="type">decimal</span>(m, d)   m也表示总位数，d表示小数位数。</span><br><span class="line">保存一个精确的数值，不会发生数据的改变，不同于浮点数的四舍五入。</span><br><span class="line">将浮点数转换为字符串来保存，每<span class="number">9</span>位数字保存为<span class="number">4</span>个字节。</span><br></pre></td></tr></table></figure><h2 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">2.</span> 字符串类型</span><br><span class="line"><span class="comment">-- ### a. char/varchar ###</span></span><br><span class="line">    <span class="type">char</span>    定长字符串，速度快，但浪费空间</span><br><span class="line">    <span class="type">varchar</span> 变长字符串，速度慢，但节省空间</span><br><span class="line">    m表示能存储的最大长度，此长度是字符数，非字节数。</span><br><span class="line">    不同的编码，所占用的空间不同。</span><br><span class="line">    <span class="type">char</span>,最多<span class="number">255</span>个字符，与编码无关。</span><br><span class="line">    <span class="type">varchar</span>,最多<span class="number">65535</span>字符，与编码有关。</span><br><span class="line">    一条有效记录最大不能超过<span class="number">65535</span>个字节。</span><br><span class="line">        utf8 最大为<span class="number">21844</span>个字符，gbk 最大为<span class="number">32766</span>个字符，latin1 最大为<span class="number">65532</span>个字符</span><br><span class="line">    <span class="type">varchar</span> 是变长的，需要利用存储空间保存 <span class="type">varchar</span> 的长度，如果数据小于<span class="number">255</span>个字节，则采用一个字节来保存长度，反之需要两个字节来保存。</span><br><span class="line">    <span class="type">varchar</span> 的最大有效长度由最大行大小和使用的字符集确定。</span><br><span class="line">    最大有效长度是<span class="number">65532</span>字节，因为在<span class="type">varchar</span>存字符串时，第一个字节是空的，不存在任何数据，然后还需两个字节来存放字符串的长度，所以有效长度是<span class="number">64432</span><span class="number">-1</span><span class="number">-2</span><span class="operator">=</span><span class="number">65532</span>字节。</span><br><span class="line">    例：若一个表定义为 <span class="keyword">create</span> <span class="keyword">table</span> tb(c1 <span class="type">int</span>, c2 <span class="type">char</span>(<span class="number">30</span>), c3 <span class="type">varchar</span>(n)) charset<span class="operator">=</span>utf8; 问n的最大值是多少？ 答：(<span class="number">65535</span><span class="number">-1</span><span class="number">-2</span><span class="number">-4</span><span class="number">-30</span><span class="operator">*</span><span class="number">3</span>)<span class="operator">/</span><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ### b. blob/text ###</span></span><br><span class="line">    <span class="type">blob</span> 二进制字符串（字节字符串）</span><br><span class="line">        tinyblob, <span class="type">blob</span>, mediumblob, longblob</span><br><span class="line">    text 非二进制字符串（字符字符串）</span><br><span class="line">        tinytext, text, mediumtext, longtext</span><br><span class="line">    text 在定义时，不需要定义长度，也不会计算总长度。</span><br><span class="line">    text 类型在定义时，不可给<span class="keyword">default</span>值</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ### c. binary/varbinary ###</span></span><br><span class="line">    类似于<span class="type">char</span>和<span class="type">varchar</span>，用于保存二进制字符串，也就是保存字节字符串而非字符字符串。</span><br><span class="line">    <span class="type">char</span>, <span class="type">varchar</span>, text 对应 <span class="type">binary</span>, <span class="type">varbinary</span>, blob.</span><br></pre></td></tr></table></figure><h2 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">3.</span> 日期时间类型</span><br><span class="line">一般用整型保存时间戳，因为php可以很方便的将时间戳进行格式化。</span><br><span class="line">datetime    <span class="number">8</span>字节    日期及时间<span class="number">1000</span><span class="number">-01</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> 到 <span class="number">9999</span><span class="number">-12</span><span class="number">-31</span> <span class="number">23</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line"><span class="type">date</span>        <span class="number">3</span>字节    日期         <span class="number">1000</span><span class="number">-01</span><span class="number">-01</span> 到 <span class="number">9999</span><span class="number">-12</span><span class="number">-31</span></span><br><span class="line"><span class="type">timestamp</span>   <span class="number">4</span>字节    时间戳 <span class="number">19700101000000</span> 到 <span class="number">2038</span><span class="number">-01</span><span class="number">-19</span> <span class="number">03</span>:<span class="number">14</span>:<span class="number">07</span></span><br><span class="line"><span class="type">time</span>        <span class="number">3</span>字节    时间         <span class="number">-838</span>:<span class="number">59</span>:<span class="number">59</span> 到 <span class="number">838</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line"><span class="keyword">year</span>        <span class="number">1</span>字节    年份         <span class="number">1901</span> <span class="operator">-</span> <span class="number">2155</span></span><br><span class="line"><span class="comment">-- ######</span></span><br><span class="line">datetime    yyyy<span class="operator">-</span>mm<span class="operator">-</span>dd hh:mm:ss</span><br><span class="line"><span class="type">timestamp</span>   yy<span class="operator">-</span>mm<span class="operator">-</span>dd hh:mm:ss</span><br><span class="line">            yyyymmddhhmmss</span><br><span class="line">            yymmddhhmmss</span><br><span class="line">            yyyymmddhhmmss</span><br><span class="line">            yymmddhhmmss</span><br><span class="line"><span class="type">date</span>        yyyy<span class="operator">-</span>mm<span class="operator">-</span>dd</span><br><span class="line">            yy<span class="operator">-</span>mm<span class="operator">-</span>dd</span><br><span class="line">            yyyymmdd</span><br><span class="line">            yymmdd</span><br><span class="line">            yyyymmdd</span><br><span class="line">            yymmdd</span><br><span class="line"><span class="type">time</span>        hh:mm:ss</span><br><span class="line">            hhmmss</span><br><span class="line">            hhmmss</span><br><span class="line"><span class="keyword">year</span>        yyyy</span><br><span class="line">            yy</span><br><span class="line">            yyyy</span><br><span class="line">            yy</span><br></pre></td></tr></table></figure><h2 id="枚举和集合"><a href="#枚举和集合" class="headerlink" title="枚举和集合"></a>枚举和集合</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">4.</span> 枚举和集合</span><br><span class="line"><span class="comment">-- 枚举(enum) ----------</span></span><br><span class="line">enum(val1, val2, val3...)</span><br><span class="line">    在已知的值中进行单选。最大数量为<span class="number">65535.</span></span><br><span class="line">    枚举值在保存时，以<span class="number">2</span>个字节的整型(<span class="type">smallint</span>)保存。每个枚举值，按保存的位置顺序，从<span class="number">1</span>开始逐一递增。</span><br><span class="line">    表现为字符串类型，存储却是整型。</span><br><span class="line">    <span class="keyword">null</span>值的索引是<span class="keyword">null</span>。</span><br><span class="line">    空字符串错误值的索引值是<span class="number">0</span>。</span><br><span class="line"><span class="comment">-- 集合（set） ----------</span></span><br><span class="line"><span class="keyword">set</span>(val1, val2, val3...)</span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> tab ( gender <span class="keyword">set</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;无&#x27;</span>) );</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tab <span class="keyword">values</span> (<span class="string">&#x27;男, 女&#x27;</span>);</span><br><span class="line">    最多可以有<span class="number">64</span>个不同的成员。以<span class="type">bigint</span>存储，共<span class="number">8</span>个字节。采取位运算的形式。</span><br><span class="line">    当创建表时，<span class="keyword">set</span>成员值的尾部空格将自动被删除。</span><br></pre></td></tr></table></figure><h1 id="选择类型"><a href="#选择类型" class="headerlink" title="选择类型"></a>选择类型</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- php角度</span></span><br><span class="line"><span class="number">1.</span> 功能满足</span><br><span class="line"><span class="number">2.</span> 存储空间尽量小，处理效率更高</span><br><span class="line"><span class="number">3.</span> 考虑兼容问题</span><br><span class="line"><span class="comment">-- ip存储 ----------</span></span><br><span class="line"><span class="number">1.</span> 只需存储，可用字符串</span><br><span class="line"><span class="number">2.</span> 如果需计算，查找等，可存储为<span class="number">4</span>个字节的无符号<span class="type">int</span>，即unsigned</span><br><span class="line">    <span class="number">1</span>) php函数转换</span><br><span class="line">        ip2long可转换为整型，但会出现携带符号问题。需格式化为无符号的整型。</span><br><span class="line">        利用sprintf函数格式化字符串</span><br><span class="line">        sprintf(&quot;%u&quot;, ip2long(<span class="string">&#x27;192.168.3.134&#x27;</span>));</span><br><span class="line">        然后用long2ip将整型转回ip字符串</span><br><span class="line">    <span class="number">2</span>) mysql函数转换(无符号整型，unsigned)</span><br><span class="line">        inet_aton(<span class="string">&#x27;127.0.0.1&#x27;</span>) 将ip转为整型</span><br><span class="line">        inet_ntoa(<span class="number">2130706433</span>) 将整型转为ip</span><br></pre></td></tr></table></figure><h1 id="列属性（列约束）"><a href="#列属性（列约束）" class="headerlink" title="列属性（列约束）"></a>列属性（列约束）</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">primary</span> 主键</span><br><span class="line">    <span class="operator">-</span> 能唯一标识记录的字段，可以作为主键。</span><br><span class="line">    <span class="operator">-</span> 一个表只能有一个主键。</span><br><span class="line">    <span class="operator">-</span> 主键具有唯一性。</span><br><span class="line">    <span class="operator">-</span> 声明字段时，用 <span class="keyword">primary</span> key 标识。</span><br><span class="line">        也可以在字段列表之后声明</span><br><span class="line">            例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span>, stu <span class="type">varchar</span>(<span class="number">10</span>), <span class="keyword">primary</span> key (id));</span><br><span class="line">    <span class="operator">-</span> 主键字段的值不能为<span class="keyword">null</span>。</span><br><span class="line">    <span class="operator">-</span> 主键可以由多个字段共同组成。此时需要在字段列表后声明的方法。</span><br><span class="line">        例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span>, stu <span class="type">varchar</span>(<span class="number">10</span>), age <span class="type">int</span>, <span class="keyword">primary</span> key (stu, age));</span><br><span class="line"><span class="number">2.</span> <span class="keyword">unique</span> 唯一索引（唯一约束）</span><br><span class="line">    使得某字段的值也不能重复。</span><br><span class="line"><span class="number">3.</span> <span class="keyword">null</span> 约束</span><br><span class="line">    <span class="keyword">null</span>不是数据类型，是列的一个属性。</span><br><span class="line">    表示当前列是否可以为<span class="keyword">null</span>，表示什么都没有。</span><br><span class="line">    <span class="keyword">null</span>, 允许为空。默认。</span><br><span class="line">    <span class="keyword">not</span> <span class="keyword">null</span>, 不允许为空。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tab <span class="keyword">values</span> (<span class="keyword">null</span>, <span class="string">&#x27;val&#x27;</span>);</span><br><span class="line">        <span class="comment">-- 此时表示将第一个字段的值设为null, 取决于该字段是否允许为null</span></span><br><span class="line"><span class="number">4.</span> <span class="keyword">default</span> 默认值属性</span><br><span class="line">    当前字段的默认值。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tab <span class="keyword">values</span> (<span class="keyword">default</span>, <span class="string">&#x27;val&#x27;</span>);    <span class="comment">-- 此时表示强制使用默认值。</span></span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> tab ( add_time <span class="type">timestamp</span> <span class="keyword">default</span> <span class="built_in">current_timestamp</span> );</span><br><span class="line">        <span class="comment">-- 表示将当前时间的时间戳设为默认值。</span></span><br><span class="line">        <span class="built_in">current_date</span>, <span class="built_in">current_time</span></span><br><span class="line"><span class="number">5.</span> auto_increment 自动增长约束</span><br><span class="line">    自动增长必须为索引（主键或<span class="keyword">unique</span>）</span><br><span class="line">    只能存在一个字段为自动增长。</span><br><span class="line">    默认为<span class="number">1</span>开始自动增长。可以通过表属性 auto_increment <span class="operator">=</span> x进行设置，或 <span class="keyword">alter</span> <span class="keyword">table</span> tbl auto_increment <span class="operator">=</span> x;</span><br><span class="line"><span class="number">6.</span> comment 注释</span><br><span class="line">    例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span> ) comment <span class="string">&#x27;注释内容&#x27;</span>;</span><br><span class="line"><span class="number">7.</span> <span class="keyword">foreign</span> key 外键约束</span><br><span class="line">    用于限制主表与从表数据完整性。</span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> t1 <span class="keyword">add</span> <span class="keyword">constraint</span> `t1_t2_fk` <span class="keyword">foreign</span> key (t1_id) <span class="keyword">references</span> t2(id);</span><br><span class="line">        <span class="comment">-- 将表t1的t1_id外键关联到表t2的id字段。</span></span><br><span class="line">        <span class="comment">-- 每个外键都有一个名字，可以通过 constraint 指定</span></span><br><span class="line">    存在外键的表，称之为从表（子表），外键指向的表，称之为主表（父表）。</span><br><span class="line">    作用：保持数据一致性，完整性，主要目的是控制存储在外键表（从表）中的数据。</span><br><span class="line">    mysql中，可以对innodb引擎使用外键约束：</span><br><span class="line">    语法：</span><br><span class="line">    <span class="keyword">foreign</span> key (外键字段） <span class="keyword">references</span> 主表名 (关联字段) [主表记录删除时的动作] [主表记录更新时的动作]</span><br><span class="line">    此时需要检测一个从表的外键需要约束为主表的已存在的值。外键在没有关联的情况下，可以设置为null.前提是该外键列，没有<span class="keyword">not</span> <span class="keyword">null</span>。</span><br><span class="line">    可以不指定主表记录更改或更新时的动作，那么此时主表的操作被拒绝。</span><br><span class="line">    如果指定了 <span class="keyword">on</span> <span class="keyword">update</span> 或 <span class="keyword">on</span> <span class="keyword">delete</span>：在删除或更新时，有如下几个操作可以选择：</span><br><span class="line">    <span class="number">1.</span> cascade，级联操作。主表数据被更新（主键值更新），从表也被更新（外键值更新）。主表记录被删除，从表相关记录也被删除。</span><br><span class="line">    <span class="number">2.</span> <span class="keyword">set</span> <span class="keyword">null</span>，设置为<span class="keyword">null</span>。主表数据被更新（主键值更新），从表的外键被设置为<span class="keyword">null</span>。主表记录被删除，从表相关记录外键被设置成<span class="keyword">null</span>。但注意，要求该外键列，没有<span class="keyword">not</span> <span class="keyword">null</span>属性约束。</span><br><span class="line">    <span class="number">3.</span> restrict，拒绝父表删除和更新。</span><br><span class="line">    注意，外键只被innodb存储引擎所支持。其他引擎是不支持的。</span><br></pre></td></tr></table></figure><h1 id="建表规范"><a href="#建表规范" class="headerlink" title="建表规范"></a>建表规范</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- normal format, nf</span></span><br><span class="line">    <span class="operator">-</span> 每个表保存一个实体信息</span><br><span class="line">    <span class="operator">-</span> 每个具有一个id字段作为主键</span><br><span class="line">    <span class="operator">-</span> id主键 <span class="operator">+</span> 原子表</span><br><span class="line"><span class="comment">-- 1nf, 第一范式</span></span><br><span class="line">    字段不能再分，就满足第一范式。</span><br><span class="line"><span class="comment">-- 2nf, 第二范式</span></span><br><span class="line">    满足第一范式的前提下，不能出现部分依赖。</span><br><span class="line">    消除符合主键就可以避免部分依赖。增加单列关键字。</span><br><span class="line"><span class="comment">-- 3nf, 第三范式</span></span><br><span class="line">    满足第二范式的前提下，不能出现传递依赖。</span><br><span class="line">    某个字段依赖于主键，而有其他字段依赖于该字段。这就是传递依赖。</span><br><span class="line">    将一个实体信息的数据放在一个表内实现。</span><br></pre></td></tr></table></figure><p><strong>部分依赖指的是某个（或多个）列依赖于别的列，且和其他的列没有任何直接关系</strong>。当表的设计中有部分依赖时，我们需要将一张表拆分成多张表，这些表包括基本信息表和关系表，从而消除数据的部分依赖。这和设计模式中常说的耦合是一个原则，要尽可能实现低耦合高内聚（low in coupling and high in cohesion)。</p><p>比如下面这张学生信息表：</p><table><thead><tr><th>学生编号</th><th>学生姓名</th><th>学生性别</th><th>老师名称</th><th>老师性别</th></tr></thead><tbody><tr><td>1001</td><td>李小桐</td><td>男</td><td>张三</td><td>男</td></tr><tr><td>1002</td><td>徐小盼</td><td>女</td><td>张三</td><td>男</td></tr></tbody></table><h1 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h1><h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">all</span><span class="operator">|</span><span class="keyword">distinct</span>] select_expr <span class="keyword">from</span> <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">where</span> <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">group</span> <span class="keyword">by</span> [合计函数] <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">having</span> <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">-</span><span class="operator">&gt;</span> limit</span><br><span class="line">a. select_expr</span><br><span class="line">    <span class="comment">-- 可以用 * 表示所有字段。</span></span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb;</span><br><span class="line">    <span class="comment">-- 可以使用表达式（计算公式、函数调用、字段也是个表达式）</span></span><br><span class="line">        <span class="keyword">select</span> stu, <span class="number">29</span><span class="operator">+</span><span class="number">25</span>, now() <span class="keyword">from</span> tb;</span><br><span class="line">    <span class="comment">-- 可以为每个列使用别名。适用于简化列标识，避免多个列标识符重复。</span></span><br><span class="line">        <span class="operator">-</span> 使用 <span class="keyword">as</span> 关键字，也可省略 as.</span><br><span class="line">        <span class="keyword">select</span> stu<span class="operator">+</span><span class="number">10</span> <span class="keyword">as</span> add10 <span class="keyword">from</span> tb;</span><br><span class="line">b. <span class="keyword">from</span> 子句</span><br><span class="line">    用于标识查询来源。</span><br><span class="line">    <span class="comment">-- 可以为表起别名。使用as关键字。</span></span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb1 <span class="keyword">as</span> tt, tb2 <span class="keyword">as</span> bb;</span><br><span class="line">    <span class="comment">-- from子句后，可以同时出现多个表。</span></span><br><span class="line">        <span class="comment">-- 多个表会横向叠加到一起，而数据会形成一个笛卡尔积。</span></span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb1, tb2;</span><br><span class="line">    <span class="comment">-- 向优化符提示如何选择索引</span></span><br><span class="line">        use index、ignore index、force index</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 use index (key1,key2) <span class="keyword">where</span> key1<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> key2<span class="operator">=</span><span class="number">2</span> <span class="keyword">and</span> key3<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 ignore index (key3) <span class="keyword">where</span> key1<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> key2<span class="operator">=</span><span class="number">2</span> <span class="keyword">and</span> key3<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line">c. <span class="keyword">where</span> 子句</span><br><span class="line">    <span class="comment">-- 从from获得的数据源中进行筛选。</span></span><br><span class="line">    <span class="comment">-- 整型1表示真，0表示假。</span></span><br><span class="line">    <span class="comment">-- 表达式由运算符和运算数组成。</span></span><br><span class="line">        <span class="comment">-- 运算数：变量（字段）、值、函数返回值</span></span><br><span class="line">        <span class="comment">-- 运算符：</span></span><br><span class="line">            <span class="operator">=</span>, <span class="operator">&lt;=&gt;</span>, <span class="operator">&lt;&gt;</span>, <span class="operator">!=</span>, <span class="operator">&lt;=</span>, <span class="operator">&lt;</span>, <span class="operator">&gt;=</span>, <span class="operator">&gt;</span>, <span class="operator">!</span>, <span class="operator">&amp;&amp;</span>, <span class="operator">||</span>,</span><br><span class="line">            <span class="keyword">in</span> (<span class="keyword">not</span>) <span class="keyword">null</span>, (<span class="keyword">not</span>) <span class="keyword">like</span>, (<span class="keyword">not</span>) <span class="keyword">in</span>, (<span class="keyword">not</span>) <span class="keyword">between</span> <span class="keyword">and</span>, <span class="keyword">is</span> (<span class="keyword">not</span>), <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">not</span>, xor</span><br><span class="line">            <span class="keyword">is</span><span class="operator">/</span><span class="keyword">is</span> <span class="keyword">not</span> 加上ture<span class="operator">/</span><span class="literal">false</span><span class="operator">/</span><span class="literal">unknown</span>，检验某个值的真假</span><br><span class="line">            <span class="operator">&lt;=&gt;</span>与<span class="operator">&lt;&gt;</span>功能相同，<span class="operator">&lt;=&gt;</span>可用于<span class="keyword">null</span>比较</span><br><span class="line">d. <span class="keyword">group</span> <span class="keyword">by</span> 子句, 分组子句</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 字段<span class="operator">/</span>别名 [排序方式]</span><br><span class="line">    分组后会进行排序。升序：<span class="keyword">asc</span>，降序：<span class="keyword">desc</span></span><br><span class="line">    以下[合计函数]需配合 <span class="keyword">group</span> <span class="keyword">by</span> 使用：</span><br><span class="line">    count 返回不同的非<span class="keyword">null</span>值数目  <span class="built_in">count</span>(<span class="operator">*</span>)、<span class="built_in">count</span>(字段)</span><br><span class="line">    sum 求和</span><br><span class="line">    max 求最大值</span><br><span class="line">    min 求最小值</span><br><span class="line">    avg 求平均值</span><br><span class="line">    group_concat 返回带有来自一个组的连接的非<span class="keyword">null</span>值的字符串结果。组内字符串连接。</span><br><span class="line">e. <span class="keyword">having</span> 子句，条件子句</span><br><span class="line">    与 <span class="keyword">where</span> 功能、用法相同，执行时机不同。</span><br><span class="line">    <span class="keyword">where</span> 在开始时执行检测数据，对原数据进行过滤。</span><br><span class="line">    <span class="keyword">having</span> 对筛选出的结果再次进行过滤。</span><br><span class="line">    <span class="keyword">having</span> 字段必须是查询出来的，<span class="keyword">where</span> 字段必须是数据表存在的。</span><br><span class="line">    <span class="keyword">where</span> 不可以使用字段的别名，<span class="keyword">having</span> 可以。因为执行<span class="keyword">where</span>代码时，可能尚未确定列值。</span><br><span class="line">    <span class="keyword">where</span> 不可以使用合计函数。一般需用合计函数才会用 <span class="keyword">having</span></span><br><span class="line">    <span class="keyword">sql</span>标准要求<span class="keyword">having</span>必须引用<span class="keyword">group</span> <span class="keyword">by</span>子句中的列或用于合计函数中的列。</span><br><span class="line">f. <span class="keyword">order</span> <span class="keyword">by</span> 子句，排序子句</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> 排序字段<span class="operator">/</span>别名 排序方式 [,排序字段<span class="operator">/</span>别名 排序方式]...</span><br><span class="line">    升序：<span class="keyword">asc</span>，降序：<span class="keyword">desc</span></span><br><span class="line">    支持多个字段的排序。</span><br><span class="line">g. limit 子句，限制结果数量子句</span><br><span class="line">    仅对处理好的结果进行数量限制。将处理好的结果的看作是一个集合，按照记录出现的顺序，索引从<span class="number">0</span>开始。</span><br><span class="line">    limit 起始位置, 获取条数</span><br><span class="line">    省略第一个参数，表示从索引<span class="number">0</span>开始。limit 获取条数</span><br><span class="line">h. <span class="keyword">distinct</span>, <span class="keyword">all</span> 选项</span><br><span class="line">    <span class="keyword">distinct</span> 去除重复记录</span><br><span class="line">    默认为 <span class="keyword">all</span>, 全部记录</span><br></pre></td></tr></table></figure><h2 id="union"><a href="#union" class="headerlink" title="union"></a>union</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">将多个<span class="keyword">select</span>查询的结果组合成一个结果集合。</span><br><span class="line"><span class="keyword">select</span> ... <span class="keyword">union</span> [<span class="keyword">all</span><span class="operator">|</span><span class="keyword">distinct</span>] <span class="keyword">select</span> ...</span><br><span class="line">默认 <span class="keyword">distinct</span> 方式，即所有返回的行都是唯一的</span><br><span class="line">建议，对每个<span class="keyword">select</span>查询加上小括号包裹。</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序时，需加上 limit 进行结合。</span><br><span class="line">需要各<span class="keyword">select</span>查询的字段数量一样。</span><br><span class="line">每个<span class="keyword">select</span>查询的字段列表(数量、类型)应一致，因为结果中的字段名以第一条<span class="keyword">select</span>语句为准。</span><br></pre></td></tr></table></figure><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 子查询需用括号包裹。</span><br><span class="line">-- from型</span><br><span class="line">    from后要求是一个表，必须给子查询结果取个别名。</span><br><span class="line">    - 简化每个查询内的条件。</span><br><span class="line">    - from型需将结果生成一个临时表格，可用以原表的锁定的释放。</span><br><span class="line">    - 子查询返回一个表，表型子查询。</span><br><span class="line">    select * from (select * from tb where id&gt;0) as subfrom where id&gt;1;</span><br><span class="line">-- where型</span><br><span class="line">    - 子查询返回一个值，标量子查询。</span><br><span class="line">    - 不需要给子查询取别名。</span><br><span class="line">    - where子查询内的表，不能直接用以更新。</span><br><span class="line">    select * from tb where money = (select max(money) from tb);</span><br><span class="line">    -- 列子查询</span><br><span class="line">        如果子查询结果返回的是一列。</span><br><span class="line">        使用 in 或 not in 完成查询</span><br><span class="line">        exists 和 not exists 条件</span><br><span class="line">            如果子查询返回数据，则返回1或0。常用于判断条件。</span><br><span class="line">            select column1 from t1 where exists (select * from t2);</span><br><span class="line">    -- 行子查询</span><br><span class="line">        查询条件是一个行。</span><br><span class="line">        select * from t1 where (id, gender) in (select id, gender from t2);</span><br><span class="line">        行构造符：(col1, col2, ...) 或 row(col1, col2, ...)</span><br><span class="line">        行构造符通常用于与对能返回两个或两个以上列的子查询进行比较。</span><br><span class="line">    -- 特殊运算符</span><br><span class="line">    != all()    相当于 not in</span><br><span class="line">    = some()    相当于 in。any 是 some 的别名</span><br><span class="line">    != some()   不等同于 not in，不等于其中某一个。</span><br><span class="line">    all, some 可以配合其他运算符一起使用。</span><br></pre></td></tr></table></figure><h2 id="连接查询-join"><a href="#连接查询-join" class="headerlink" title="连接查询(join)"></a>连接查询(join)</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">    将多个表的字段进行连接，可以指定连接条件。</span><br><span class="line"><span class="comment">-- 内连接(inner join)</span></span><br><span class="line">    <span class="operator">-</span> 默认就是内连接，可省略<span class="keyword">inner</span>。</span><br><span class="line">    <span class="operator">-</span> 只有数据存在时才能发送连接。即连接结果不能出现空行。</span><br><span class="line">    <span class="keyword">on</span> 表示连接条件。其条件表达式与<span class="keyword">where</span>类似。也可以省略条件（表示条件永远为真）</span><br><span class="line">    也可用<span class="keyword">where</span>表示连接条件。</span><br><span class="line">    还有 <span class="keyword">using</span>, 但需字段名相同。 <span class="keyword">using</span>(字段名)</span><br><span class="line">    <span class="comment">-- 交叉连接 cross join</span></span><br><span class="line">        即，没有条件的内连接。</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb1 <span class="keyword">cross</span> <span class="keyword">join</span> tb2;</span><br><span class="line"><span class="comment">-- 外连接(outer join)</span></span><br><span class="line">    <span class="operator">-</span> 如果数据不存在，也会出现在连接结果中。</span><br><span class="line">    <span class="comment">-- 左外连接 left join</span></span><br><span class="line">        如果数据不存在，左表记录会出现，而右表为<span class="keyword">null</span>填充</span><br><span class="line">    <span class="comment">-- 右外连接 right join</span></span><br><span class="line">        如果数据不存在，右表记录会出现，而左表为<span class="keyword">null</span>填充</span><br><span class="line"><span class="comment">-- 自然连接(natural join)</span></span><br><span class="line">    自动判断连接条件完成连接。</span><br><span class="line">    相当于省略了<span class="keyword">using</span>，会自动查找相同字段名。</span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">join</span></span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">right</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">select</span> info.id, info.name, info.stu_num, extra_info.hobby, extra_info.sex <span class="keyword">from</span> info, extra_info <span class="keyword">where</span> info.stu_num <span class="operator">=</span> extra_info.stu_id;</span><br><span class="line"><span class="comment">/* 导入导出 */</span> <span class="comment">------------------</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> outfile 文件地址 [控制格式] <span class="keyword">from</span> 表名;   <span class="comment">-- 导出表数据</span></span><br><span class="line">load data [<span class="keyword">local</span>] infile 文件地址 [replace<span class="operator">|</span>ignore] <span class="keyword">into</span> <span class="keyword">table</span> 表名 [控制格式]; <span class="comment">-- 导入数据</span></span><br><span class="line">    生成的数据默认的分隔符是制表符</span><br><span class="line">    <span class="keyword">local</span>未指定，则数据文件必须在服务器上</span><br><span class="line">    replace 和 ignore 关键词控制对现有的唯一键记录的重复的处理</span><br><span class="line"><span class="comment">-- 控制格式</span></span><br><span class="line">fields  控制字段格式</span><br><span class="line">默认：fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span> enclosed <span class="keyword">by</span> <span class="string">&#x27;&#x27;</span> escaped <span class="keyword">by</span> <span class="string">&#x27;\\&#x27;</span></span><br><span class="line">    terminated <span class="keyword">by</span> <span class="string">&#x27;string&#x27;</span>  <span class="comment">-- 终止</span></span><br><span class="line">    enclosed <span class="keyword">by</span> <span class="string">&#x27;char&#x27;</span>      <span class="comment">-- 包裹</span></span><br><span class="line">    escaped <span class="keyword">by</span> <span class="string">&#x27;char&#x27;</span>       <span class="comment">-- 转义</span></span><br><span class="line">    <span class="comment">-- 示例：</span></span><br><span class="line">        <span class="keyword">select</span> a,b,a<span class="operator">+</span>b <span class="keyword">into</span> outfile <span class="string">&#x27;/tmp/result.text&#x27;</span></span><br><span class="line">        fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span> optionally enclosed <span class="keyword">by</span> <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">        lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="keyword">from</span> test_table;</span><br><span class="line">lines   控制行格式</span><br><span class="line">默认：lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    terminated <span class="keyword">by</span> <span class="string">&#x27;string&#x27;</span>  <span class="comment">-- 终止</span></span><br></pre></td></tr></table></figure><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>语句获得的数据可以用<span class="keyword">insert</span>插入。</span><br><span class="line">可以省略对列的指定，要求 <span class="keyword">values</span> () 括号内，提供给了按照列顺序出现的所有字段的值。</span><br><span class="line">    或者使用<span class="keyword">set</span>语法。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">set</span> field<span class="operator">=</span><span class="keyword">value</span>,...；</span><br><span class="line">可以一次性使用多个值，采用(), (), ();的形式。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">values</span> (), (), ();</span><br><span class="line">可以在列值指定时，使用表达式。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">values</span> (field_value, <span class="number">10</span><span class="operator">+</span><span class="number">10</span>, now());</span><br><span class="line">可以使用一个特殊值 <span class="keyword">default</span>，表示该列使用默认值。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">values</span> (field_value, <span class="keyword">default</span>);</span><br><span class="line">可以通过一个查询的结果，作为需要插入的值。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">select</span> ...;</span><br><span class="line">可以指定在插入的值出现主键（或唯一索引）冲突时，更新其他非主键列的信息。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tbl_name <span class="keyword">values</span><span class="operator">/</span><span class="keyword">set</span><span class="operator">/</span><span class="keyword">select</span> <span class="keyword">on</span> duplicate key <span class="keyword">update</span> 字段<span class="operator">=</span>值, …;</span><br></pre></td></tr></table></figure><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tbl_name [<span class="keyword">where</span> where_definition] [<span class="keyword">order</span> <span class="keyword">by</span> ...] [limit row_count]</span><br><span class="line">按照条件删除。<span class="keyword">where</span></span><br><span class="line">指定删除的最多记录数。limit</span><br><span class="line">可以通过排序条件删除。<span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">+</span> limit</span><br><span class="line">支持多表删除，使用类似连接语法。</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 需要删除数据多表<span class="number">1</span>，表<span class="number">2</span> <span class="keyword">using</span> 表连接操作 条件。</span><br><span class="line"><span class="comment">/* truncate */</span> <span class="comment">------------------</span></span><br><span class="line"><span class="keyword">truncate</span> [<span class="keyword">table</span>] tbl_name</span><br><span class="line">清空数据</span><br><span class="line">删除重建表</span><br><span class="line">区别：</span><br><span class="line"><span class="number">1</span>，<span class="keyword">truncate</span> 是删除表再创建，<span class="keyword">delete</span> 是逐条删除</span><br><span class="line"><span class="number">2</span>，<span class="keyword">truncate</span> 重置auto_increment的值。而<span class="keyword">delete</span>不会</span><br><span class="line"><span class="number">3</span>，<span class="keyword">truncate</span> 不知道删除了几条，而<span class="keyword">delete</span>知道。</span><br><span class="line"><span class="number">4</span>，当被用于带分区的表时，<span class="keyword">truncate</span> 会保留分区</span><br></pre></td></tr></table></figure><h1 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">备份，将数据的结构与表内数据保存起来。</span><br><span class="line">利用 mysqldump 指令完成。</span><br><span class="line"><span class="comment">-- 导出</span></span><br><span class="line">mysqldump [options] db_name [tables]</span><br><span class="line">mysqldump [options] <span class="comment">---database db1 [db2 db3...]</span></span><br><span class="line">mysqldump [options] <span class="comment">--all--database</span></span><br><span class="line"><span class="number">1.</span> 导出一张表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 表名 <span class="operator">&gt;</span> 文件名(d:<span class="operator">/</span>a.sql)</span><br><span class="line"><span class="number">2.</span> 导出多张表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 表<span class="number">1</span> 表<span class="number">2</span> 表<span class="number">3</span> <span class="operator">&gt;</span> 文件名(d:<span class="operator">/</span>a.sql)</span><br><span class="line"><span class="number">3.</span> 导出所有表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 <span class="operator">&gt;</span> 文件名(d:<span class="operator">/</span>a.sql)</span><br><span class="line"><span class="number">4.</span> 导出一个库</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 <span class="comment">--lock-all-tables --database 库名 &gt; 文件名(d:/a.sql)</span></span><br><span class="line">可以<span class="operator">-</span>w携带<span class="keyword">where</span>条件</span><br><span class="line"><span class="comment">-- 导入</span></span><br><span class="line"><span class="number">1.</span> 在登录mysql的情况下：</span><br><span class="line">　　source  备份文件</span><br><span class="line"><span class="number">2.</span> 在不登录的情况下</span><br><span class="line">　　mysql <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 <span class="operator">&lt;</span> 备份文件</span><br></pre></td></tr></table></figure><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">什么是视图：</span><br><span class="line">    视图是一个虚拟表，其内容由查询定义。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并不在数据库中以存储的数据值集形式存在。行和列数据来自由定义视图的查询所引用的表，并且在引用视图时动态生成。</span><br><span class="line">    视图具有表结构文件，但不存在数据文件。</span><br><span class="line">    对其中所引用的基础表来说，视图的作用类似于筛选。定义视图的筛选可以来自当前或其它数据库的一个或多个表，或者其它视图。通过视图进行查询没有任何限制，通过它们进行数据修改时的限制也很少。</span><br><span class="line">    视图是存储在数据库中的查询的<span class="keyword">sql</span>语句，它主要出于两种原因：安全原因，视图可以隐藏一些数据，如：社会保险基金表，可以用视图只显示姓名，地址，而不显示社会保险号和工资数等，另一原因是可使复杂的查询易于理解和使用。</span><br><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> replace] [algorithm <span class="operator">=</span> &#123;undefined <span class="operator">|</span> <span class="keyword">merge</span> <span class="operator">|</span> temptable&#125;] <span class="keyword">view</span> view_name [(column_list)] <span class="keyword">as</span> select_statement</span><br><span class="line">    <span class="operator">-</span> 视图名必须唯一，同时不能与表重名。</span><br><span class="line">    <span class="operator">-</span> 视图可以使用<span class="keyword">select</span>语句查询到的列名，也可以自己指定相应的列名。</span><br><span class="line">    <span class="operator">-</span> 可以指定视图执行的算法，通过algorithm指定。</span><br><span class="line">    <span class="operator">-</span> column_list如果存在，则数目必须等于<span class="keyword">select</span>语句检索的列数</span><br><span class="line"><span class="comment">-- 查看结构</span></span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> view_name</span><br><span class="line"><span class="comment">-- 删除视图</span></span><br><span class="line">    <span class="operator">-</span> 删除视图后，数据依然存在。</span><br><span class="line">    <span class="operator">-</span> 可同时删除多个视图。</span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">view</span> [if <span class="keyword">exists</span>] view_name ...</span><br><span class="line"><span class="comment">-- 修改视图结构</span></span><br><span class="line">    <span class="operator">-</span> 一般不修改视图，因为不是所有的更新视图都会映射到表上。</span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">view</span> view_name [(column_list)] <span class="keyword">as</span> select_statement</span><br><span class="line"><span class="comment">-- 视图作用</span></span><br><span class="line">    <span class="number">1.</span> 简化业务逻辑</span><br><span class="line">    <span class="number">2.</span> 对客户端隐藏真实的表结构</span><br><span class="line"><span class="comment">-- 视图算法(algorithm)</span></span><br><span class="line">    <span class="keyword">merge</span>       合并</span><br><span class="line">        将视图的查询语句，与外部查询需要先合并再执行！</span><br><span class="line">    temptable   临时表</span><br><span class="line">        将视图执行完毕后，形成临时表，再做外层查询！</span><br><span class="line">    undefined   未定义(默认)，指的是mysql自主去选择相应的算法。</span><br></pre></td></tr></table></figure><h1 id="事务-transaction"><a href="#事务-transaction" class="headerlink" title="事务(transaction)"></a>事务(transaction)</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">事务是指逻辑上的一组操作，组成这组操作的各个单元，要不全成功要不全失败。</span><br><span class="line">    <span class="operator">-</span> 支持连续<span class="keyword">sql</span>的集体成功或集体撤销。</span><br><span class="line">    <span class="operator">-</span> 事务是数据库在数据晚自习方面的一个功能。</span><br><span class="line">    <span class="operator">-</span> 需要利用 innodb 或 bdb 存储引擎，对自动提交的特性支持完成。</span><br><span class="line">    <span class="operator">-</span> innodb被称为事务安全型引擎。</span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line">    <span class="keyword">start</span> transaction; 或者 <span class="keyword">begin</span>;</span><br><span class="line">    开启事务后，所有被执行的<span class="keyword">sql</span>语句均被认作当前事务内的<span class="keyword">sql</span>语句。</span><br><span class="line"><span class="comment">-- 事务提交</span></span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">-- 事务回滚</span></span><br><span class="line">    <span class="keyword">rollback</span>;</span><br><span class="line">    如果部分操作发生问题，映射到事务开启前。</span><br><span class="line"><span class="comment">-- 事务的特性</span></span><br><span class="line">    <span class="number">1.</span> 原子性（atomicity）</span><br><span class="line">        事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</span><br><span class="line">    <span class="number">2.</span> 一致性（consistency）</span><br><span class="line">        事务前后数据的完整性必须保持一致。</span><br><span class="line">        <span class="operator">-</span> 事务开始和结束时，外部数据一致</span><br><span class="line">        <span class="operator">-</span> 在整个事务过程中，操作是连续的</span><br><span class="line">    <span class="number">3.</span> 隔离性（isolation）</span><br><span class="line">        多个用户并发访问数据库时，一个用户的事务不能被其它用户的事物所干扰，多个并发事务之间的数据要相互隔离。</span><br><span class="line">    <span class="number">4.</span> 持久性（durability）</span><br><span class="line">        一个事务一旦被提交，它对数据库中的数据改变就是永久性的。</span><br><span class="line"><span class="comment">-- 事务的实现</span></span><br><span class="line">    <span class="number">1.</span> 要求是事务支持的表类型</span><br><span class="line">    <span class="number">2.</span> 执行一组相关的操作前开启事务</span><br><span class="line">    <span class="number">3.</span> 整组操作完成后，都成功，则提交；如果存在失败，选择回滚，则会回到事务开始的备份点。</span><br><span class="line"><span class="comment">-- 事务的原理</span></span><br><span class="line">    利用innodb的自动提交(autocommit)特性完成。</span><br><span class="line">    普通的mysql执行语句后，当前的数据提交操作均可被其他客户端可见。</span><br><span class="line">    而事务是暂时关闭“自动提交”机制，需要<span class="keyword">commit</span>提交持久化数据操作。</span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">    <span class="number">1.</span> 数据定义语言（ddl）语句不能被回滚，比如创建或取消数据库的语句，和创建、取消或更改表或存储的子程序的语句。</span><br><span class="line">    <span class="number">2.</span> 事务不能被嵌套</span><br><span class="line"><span class="comment">-- 保存点</span></span><br><span class="line">    <span class="keyword">savepoint</span> 保存点名称 <span class="comment">-- 设置一个事务保存点</span></span><br><span class="line">    <span class="keyword">rollback</span> <span class="keyword">to</span> <span class="keyword">savepoint</span> 保存点名称 <span class="comment">-- 回滚到保存点</span></span><br><span class="line">    <span class="keyword">release</span> <span class="keyword">savepoint</span> 保存点名称 <span class="comment">-- 删除保存点</span></span><br><span class="line"><span class="comment">-- innodb自动提交特性设置</span></span><br><span class="line">    <span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span><span class="operator">|</span><span class="number">1</span>;   <span class="number">0</span>表示关闭自动提交，<span class="number">1</span>表示开启自动提交。</span><br><span class="line">    <span class="operator">-</span> 如果关闭了，那普通操作的结果对其他客户端也不可见，需要<span class="keyword">commit</span>提交后才能持久化数据操作。</span><br><span class="line">    <span class="operator">-</span> 也可以关闭自动提交来开启事务。但与<span class="keyword">start</span> transaction不同的是，</span><br><span class="line">        <span class="keyword">set</span> autocommit是永久改变服务器的设置，直到下次再次修改该设置。(针对当前连接)</span><br><span class="line">        而<span class="keyword">start</span> transaction记录开启前的状态，而一旦事务提交或回滚后就需要再次开启事务。(针对当前事务)</span><br></pre></td></tr></table></figure><h1 id="锁表"><a href="#锁表" class="headerlink" title="锁表"></a>锁表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">表锁定只用于防止其它客户端进行不正当地读取和写入</span><br><span class="line">myisam 支持表锁，innodb 支持行锁</span><br><span class="line"><span class="comment">-- 锁定</span></span><br><span class="line">    lock tables tbl_name [<span class="keyword">as</span> alias] lock_type [, tbl_name [[<span class="keyword">AS</span>] alias] lock_type] ...</span><br><span class="line">    <span class="comment">-- lock_type: READ[LOCAL]| [LOW_PRIORITY] WRITE</span></span><br><span class="line"><span class="comment">-- 解锁</span></span><br><span class="line">    unlock tables</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">    触发程序是与表有关的命名数据库对象，当该表出现特定事件时，将激活该对象</span><br><span class="line">    监听：记录的增加、修改、删除。</span><br><span class="line"><span class="comment">-- 创建触发器</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> trigger_name trigger_time trigger_event <span class="keyword">on</span> tbl_name <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span> trigger_stmt</span><br><span class="line">    参数：</span><br><span class="line">    trigger_time是触发程序的动作时间。它可以是 before 或 after，以指明触发程序是在激活它的语句之前或之后触发。</span><br><span class="line">    trigger_event指明了激活触发程序的语句的类型</span><br><span class="line">        <span class="keyword">insert</span>：将新行插入表时激活触发程序</span><br><span class="line">        <span class="keyword">update</span>：更改某一行时激活触发程序</span><br><span class="line">        <span class="keyword">delete</span>：从表中删除某一行时激活触发程序</span><br><span class="line">    tbl_name：监听的表，必须是永久性的表，不能将触发程序与temporary表或视图关联起来。</span><br><span class="line">    trigger_stmt：当触发程序激活时执行的语句。执行多个语句，可使用begin...end复合语句结构</span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> [schema_name.]trigger_name</span><br><span class="line">可以使用<span class="keyword">old</span>和<span class="keyword">new</span>代替旧的和新的数据</span><br><span class="line">    更新操作，更新前是<span class="keyword">old</span>，更新后是new.</span><br><span class="line">    删除操作，只有old.</span><br><span class="line">    增加操作，只有new.</span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">    <span class="number">1.</span> 对于具有相同触发程序动作时间和事件的给定表，不能有两个触发程序。</span><br><span class="line"><span class="comment">-- 字符连接函数</span></span><br><span class="line">concat(str1,str2,...])</span><br><span class="line">concat_ws(separator,str1,str2,...)</span><br><span class="line"><span class="comment">-- 分支语句</span></span><br><span class="line">if 条件 <span class="keyword">then</span></span><br><span class="line">    执行语句</span><br><span class="line">elseif 条件 <span class="keyword">then</span></span><br><span class="line">    执行语句</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    执行语句</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"><span class="comment">-- 修改最外层语句结束符</span></span><br><span class="line">delimiter 自定义结束符号</span><br><span class="line">    <span class="keyword">sql</span>语句</span><br><span class="line">自定义结束符号</span><br><span class="line">delimiter ;     <span class="comment">-- 修改回原来的分号</span></span><br><span class="line"><span class="comment">-- 语句块包裹</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 特殊的执行</span></span><br><span class="line"><span class="number">1.</span> 只要添加记录，就会触发程序。</span><br><span class="line"><span class="number">2.</span> <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">on</span> duplicate key <span class="keyword">update</span> 语法会触发：</span><br><span class="line">    如果没有重复记录，会触发 before <span class="keyword">insert</span>, after <span class="keyword">insert</span>;</span><br><span class="line">    如果有重复记录并更新，会触发 before <span class="keyword">insert</span>, before <span class="keyword">update</span>, after <span class="keyword">update</span>;</span><br><span class="line">    如果有重复记录但是没有发生更新，则触发 before <span class="keyword">insert</span>, before <span class="keyword">update</span></span><br><span class="line"><span class="number">3.</span> replace 语法 如果有记录，则执行 before <span class="keyword">insert</span>, before <span class="keyword">delete</span>, after <span class="keyword">delete</span>, after <span class="keyword">insert</span></span><br></pre></td></tr></table></figure><h1 id="SQL编程"><a href="#SQL编程" class="headerlink" title="SQL编程"></a>SQL编程</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--// 局部变量 ----------</span></span><br><span class="line"><span class="comment">-- 变量声明</span></span><br><span class="line">    <span class="keyword">declare</span> var_name[,...] type [<span class="keyword">default</span> <span class="keyword">value</span>]</span><br><span class="line">    这个语句被用来声明局部变量。要给变量提供一个默认值，请包含一个<span class="keyword">default</span>子句。值可以被指定为一个表达式，不需要为一个常数。如果没有<span class="keyword">default</span>子句，初始值为<span class="keyword">null</span>。</span><br><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line">    使用 <span class="keyword">set</span> 和 <span class="keyword">select</span> <span class="keyword">into</span> 语句为变量赋值。</span><br><span class="line">    <span class="operator">-</span> 注意：在函数内是可以使用全局变量（用户自定义的变量）</span><br><span class="line"><span class="comment">--// 全局变量 ----------</span></span><br><span class="line"><span class="comment">-- 定义、赋值</span></span><br><span class="line"><span class="keyword">set</span> 语句可以定义并为变量赋值。</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@var</span> <span class="operator">=</span> <span class="keyword">value</span>;</span><br><span class="line">也可以使用<span class="keyword">select</span> <span class="keyword">into</span>语句为变量初始化并赋值。这样要求<span class="keyword">select</span>语句只能返回一行，但是可以是多个字段，就意味着同时为多个变量进行赋值，变量的数量需要与查询的列数一致。</span><br><span class="line">还可以把赋值语句看作一个表达式，通过<span class="keyword">select</span>执行完成。此时为了避免<span class="operator">=</span>被当作关系运算符看待，使用:<span class="operator">=</span>代替。（<span class="keyword">set</span>语句可以使用<span class="operator">=</span> 和 :<span class="operator">=</span>）。</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@var</span>:<span class="operator">=</span><span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@v1</span>:<span class="operator">=</span>id, <span class="variable">@v2</span><span class="operator">=</span>name <span class="keyword">from</span> t1 limit <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tbl_name <span class="keyword">where</span> <span class="variable">@var</span>:<span class="operator">=</span><span class="number">30</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">into</span> 可以将表中查询获得的数据赋给变量。</span><br><span class="line">    <span class="operator">-</span><span class="operator">|</span> <span class="keyword">select</span> <span class="built_in">max</span>(height) <span class="keyword">into</span> <span class="variable">@max_height</span> <span class="keyword">from</span> tb;</span><br><span class="line"><span class="comment">-- 自定义变量名</span></span><br><span class="line">为了避免<span class="keyword">select</span>语句中，用户自定义的变量与系统标识符（通常是字段名）冲突，用户自定义变量在变量名前使用@作为开始符号。</span><br><span class="line"><span class="variable">@var</span><span class="operator">=</span><span class="number">10</span>;</span><br><span class="line">    <span class="operator">-</span> 变量被定义后，在整个会话周期都有效（登录到退出）</span><br><span class="line"><span class="comment">--// 控制结构 ----------</span></span><br><span class="line"><span class="comment">-- if语句</span></span><br><span class="line">if search_condition <span class="keyword">then</span></span><br><span class="line">    statement_list   </span><br><span class="line">[elseif search_condition <span class="keyword">then</span></span><br><span class="line">    statement_list]</span><br><span class="line">...</span><br><span class="line">[<span class="keyword">else</span></span><br><span class="line">    statement_list]</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"><span class="comment">-- case语句</span></span><br><span class="line"><span class="keyword">case</span> <span class="keyword">value</span> <span class="keyword">when</span> [compare<span class="operator">-</span><span class="keyword">value</span>] <span class="keyword">then</span> <span class="keyword">result</span></span><br><span class="line">[<span class="keyword">when</span> [compare<span class="operator">-</span><span class="keyword">value</span>] <span class="keyword">then</span> <span class="keyword">result</span> ...]</span><br><span class="line">[<span class="keyword">else</span> <span class="keyword">result</span>]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- while循环</span></span><br><span class="line">[begin_label:] while search_condition do</span><br><span class="line">    statement_list</span><br><span class="line"><span class="keyword">end</span> while [end_label];</span><br><span class="line"><span class="operator">-</span> 如果需要在循环内提前终止 while循环，则需要使用标签；标签需要成对出现。</span><br><span class="line">    <span class="comment">-- 退出循环</span></span><br><span class="line">        退出整个循环 leave</span><br><span class="line">        退出当前循环 iterate</span><br><span class="line">        通过退出的标签决定退出哪个循环</span><br><span class="line"><span class="comment">--// 内置函数 ----------</span></span><br><span class="line"><span class="comment">-- 数值函数</span></span><br><span class="line"><span class="built_in">abs</span>(x)          <span class="comment">-- 绝对值 abs(-10.9) = 10</span></span><br><span class="line">format(x, d)    <span class="comment">-- 格式化千分位数值 format(1234567.456, 2) = 1,234,567.46</span></span><br><span class="line"><span class="built_in">ceil</span>(x)         <span class="comment">-- 向上取整 ceil(10.1) = 11</span></span><br><span class="line"><span class="built_in">floor</span>(x)        <span class="comment">-- 向下取整 floor (10.1) = 10</span></span><br><span class="line">round(x)        <span class="comment">-- 四舍五入去整</span></span><br><span class="line"><span class="built_in">mod</span>(m, n)       <span class="comment">-- m%n m mod n 求余 10%3=1</span></span><br><span class="line">pi()            <span class="comment">-- 获得圆周率</span></span><br><span class="line">pow(m, n)       <span class="comment">-- m^n</span></span><br><span class="line"><span class="built_in">sqrt</span>(x)         <span class="comment">-- 算术平方根</span></span><br><span class="line">rand()          <span class="comment">-- 随机数</span></span><br><span class="line"><span class="keyword">truncate</span>(x, d)  <span class="comment">-- 截取d位小数</span></span><br><span class="line"><span class="comment">-- 时间日期函数</span></span><br><span class="line">now(), <span class="built_in">current_timestamp</span>();     <span class="comment">-- 当前日期时间</span></span><br><span class="line"><span class="built_in">current_date</span>();                 <span class="comment">-- 当前日期</span></span><br><span class="line"><span class="built_in">current_time</span>();                 <span class="comment">-- 当前时间</span></span><br><span class="line"><span class="type">date</span>(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>);    <span class="comment">-- 获取日期部分</span></span><br><span class="line"><span class="type">time</span>(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>);    <span class="comment">-- 获取时间部分</span></span><br><span class="line">date_format(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>, <span class="string">&#x27;%d %y %a %d %m %b %j&#x27;</span>); <span class="comment">-- 格式化时间</span></span><br><span class="line">unix_timestamp();               <span class="comment">-- 获得unix时间戳</span></span><br><span class="line">from_unixtime();                <span class="comment">-- 从时间戳获得时间</span></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line">length(string)          <span class="comment">-- string长度，字节</span></span><br><span class="line"><span class="keyword">char_length</span>(string)     <span class="comment">-- string的字符个数</span></span><br><span class="line"><span class="built_in">substring</span>(str, position [,length])      <span class="comment">-- 从str的position开始,取length个字符</span></span><br><span class="line">replace(str ,search_str ,replace_str)   <span class="comment">-- 在str中用replace_str替换search_str</span></span><br><span class="line">instr(string ,substring)    <span class="comment">-- 返回substring首次在string中出现的位置</span></span><br><span class="line">concat(string [,...])   <span class="comment">-- 连接字串</span></span><br><span class="line">charset(str)            <span class="comment">-- 返回字串字符集</span></span><br><span class="line">lcase(string)           <span class="comment">-- 转换成小写</span></span><br><span class="line"><span class="keyword">left</span>(string, length)    <span class="comment">-- 从string2中的左边起取length个字符</span></span><br><span class="line">load_file(file_name)    <span class="comment">-- 从文件读取内容</span></span><br><span class="line">locate(substring, string [,start_position]) <span class="comment">-- 同instr,但可指定开始位置</span></span><br><span class="line">lpad(string, length, pad)   <span class="comment">-- 重复用pad加在string开头,直到字串长度为length</span></span><br><span class="line">ltrim(string)           <span class="comment">-- 去除前端空格</span></span><br><span class="line">repeat(string, count)   <span class="comment">-- 重复count次</span></span><br><span class="line">rpad(string, length, pad)   <span class="comment">--在str后用pad补充,直到长度为length</span></span><br><span class="line">rtrim(string)           <span class="comment">-- 去除后端空格</span></span><br><span class="line">strcmp(string1 ,string2)    <span class="comment">-- 逐字符比较两字串大小</span></span><br><span class="line"><span class="comment">-- 流程函数</span></span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> [<span class="keyword">condition</span>] <span class="keyword">then</span> <span class="keyword">result</span> [<span class="keyword">when</span> [<span class="keyword">condition</span>] <span class="keyword">then</span> <span class="keyword">result</span> ...] [<span class="keyword">else</span> <span class="keyword">result</span>] <span class="keyword">end</span>   多分支</span><br><span class="line">if(expr1,expr2,expr3)  双分支。</span><br><span class="line"><span class="comment">-- 聚合函数</span></span><br><span class="line"><span class="built_in">count</span>()</span><br><span class="line"><span class="built_in">sum</span>();</span><br><span class="line"><span class="built_in">max</span>();</span><br><span class="line"><span class="built_in">min</span>();</span><br><span class="line"><span class="built_in">avg</span>();</span><br><span class="line">group_concat()</span><br><span class="line"><span class="comment">-- 其他常用函数</span></span><br><span class="line">md5();</span><br><span class="line"><span class="keyword">default</span>();</span><br><span class="line"><span class="comment">--// 存储函数，自定义函数 ----------</span></span><br><span class="line"><span class="comment">-- 新建</span></span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">function</span> function_name (参数列表) <span class="keyword">returns</span> 返回值类型</span><br><span class="line">        函数体</span><br><span class="line">    <span class="operator">-</span> 函数名，应该合法的标识符，并且不应该与已有的关键字冲突。</span><br><span class="line">    <span class="operator">-</span> 一个函数应该属于某个数据库，可以使用db_name.funciton_name的形式执行当前函数所属数据库，否则为当前数据库。</span><br><span class="line">    <span class="operator">-</span> 参数部分，由&quot;参数名&quot;和&quot;参数类型&quot;组成。多个参数用逗号隔开。</span><br><span class="line">    <span class="operator">-</span> 函数体由多条可用的mysql语句，流程控制，变量声明等语句构成。</span><br><span class="line">    <span class="operator">-</span> 多条语句应该使用 begin...end 语句块包含。</span><br><span class="line">    <span class="operator">-</span> 一定要有 <span class="keyword">return</span> 返回值语句。</span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">function</span> [if <span class="keyword">exists</span>] function_name;</span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">function</span> status <span class="keyword">like</span> <span class="string">&#x27;partten&#x27;</span></span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">function</span> function_name;</span><br><span class="line"><span class="comment">-- 修改</span></span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">function</span> function_name 函数选项</span><br><span class="line"><span class="comment">--// 存储过程，自定义功能 ----------</span></span><br><span class="line"><span class="comment">-- 定义</span></span><br><span class="line">存储存储过程 是一段代码（过程），存储在数据库中的<span class="keyword">sql</span>组成。</span><br><span class="line">一个存储过程通常用于完成一段业务逻辑，例如报名，交班费，订单入库等。</span><br><span class="line">而一个函数通常专注与某个功能，视为其他程序服务的，需要在其他语句中调用函数才可以，而存储过程不能被其他调用，是自己执行 通过<span class="keyword">call</span>执行。</span><br><span class="line"><span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> sp_name (参数列表)</span><br><span class="line">    过程体</span><br><span class="line">参数列表：不同于函数的参数列表，需要指明参数类型</span><br><span class="line"><span class="keyword">in</span>，表示输入型</span><br><span class="line"><span class="keyword">out</span>，表示输出型</span><br><span class="line"><span class="keyword">inout</span>，表示混合型</span><br><span class="line">注意，没有返回值。</span><br></pre></td></tr></table></figure><h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">存储过程是一段可执行性代码的集合。相比函数，更偏向于业务逻辑。</span><br><span class="line">调用：<span class="keyword">call</span> 过程名</span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line"><span class="operator">-</span> 没有返回值。</span><br><span class="line"><span class="operator">-</span> 只能单独调用，不可夹杂在其他语句中</span><br><span class="line"><span class="comment">-- 参数</span></span><br><span class="line"><span class="keyword">in</span><span class="operator">|</span><span class="keyword">out</span><span class="operator">|</span><span class="keyword">inout</span> 参数名 数据类型</span><br><span class="line"><span class="keyword">in</span>      输入：在调用过程中，将数据输入到过程体内部的参数</span><br><span class="line"><span class="keyword">out</span>     输出：在调用过程中，将过程体处理完的结果返回到客户端</span><br><span class="line"><span class="keyword">inout</span>   输入输出：既可输入，也可输出</span><br><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> 过程名 (参数列表)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    过程体</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="用户和权限管理"><a href="#用户和权限管理" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- root密码重置</span></span><br><span class="line"><span class="number">1.</span> 停止mysql服务</span><br><span class="line"><span class="number">2.</span>  [linux] <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>mysql<span class="operator">/</span>bin<span class="operator">/</span>safe_mysqld <span class="comment">--skip-grant-tables &amp;</span></span><br><span class="line">    [windows] mysqld <span class="comment">--skip-grant-tables</span></span><br><span class="line"><span class="number">3.</span> use mysql;</span><br><span class="line"><span class="number">4.</span> <span class="keyword">update</span> `<span class="keyword">user</span>` <span class="keyword">set</span> password<span class="operator">=</span>password(&quot;密码&quot;) <span class="keyword">where</span> `<span class="keyword">user</span>` <span class="operator">=</span> &quot;root&quot;;</span><br><span class="line"><span class="number">5.</span> flush privileges;</span><br><span class="line">用户信息表：mysql.user</span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment">-- 增加用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> 用户名 identified <span class="keyword">by</span> [password] 密码(字符串)</span><br><span class="line">    <span class="operator">-</span> 必须拥有mysql数据库的全局<span class="keyword">create</span> <span class="keyword">user</span>权限，或拥有<span class="keyword">insert</span>权限。</span><br><span class="line">    <span class="operator">-</span> 只能创建用户，不能赋予权限。</span><br><span class="line">    <span class="operator">-</span> 用户名，注意引号：如 <span class="string">&#x27;user_name&#x27;</span>@<span class="string">&#x27;192.168.1.1&#x27;</span></span><br><span class="line">    <span class="operator">-</span> 密码也需引号，纯数字密码也要加引号</span><br><span class="line">    <span class="operator">-</span> 要在纯文本中指定密码，需忽略password关键词。要把密码指定为由password()函数返回的混编值，需包含关键字password</span><br><span class="line"><span class="comment">-- 重命名用户</span></span><br><span class="line">rename <span class="keyword">user</span> old_user <span class="keyword">to</span> new_user</span><br><span class="line"><span class="comment">-- 设置密码</span></span><br><span class="line"><span class="keyword">set</span> password <span class="operator">=</span> password(<span class="string">&#x27;密码&#x27;</span>)  <span class="comment">-- 为当前用户设置密码</span></span><br><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> 用户名 <span class="operator">=</span> password(<span class="string">&#x27;密码&#x27;</span>) <span class="comment">-- 为指定用户设置密码</span></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> 用户名</span><br><span class="line"><span class="comment">-- 分配权限/添加用户</span></span><br><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 表名 <span class="keyword">to</span> 用户名 [identified <span class="keyword">by</span> [password] <span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">    <span class="operator">-</span> <span class="keyword">all</span> privileges 表示所有权限</span><br><span class="line">    <span class="operator">-</span> <span class="operator">*</span>.<span class="operator">*</span> 表示所有库的所有表</span><br><span class="line">    <span class="operator">-</span> 库名.表名 表示某库下面的某表</span><br><span class="line">    <span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> `pms`.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;pms&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;pms0817&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> 用户名</span><br><span class="line">    <span class="comment">-- 查看当前用户权限</span></span><br><span class="line">    <span class="keyword">show</span> grants; 或 <span class="keyword">show</span> grants <span class="keyword">for</span> <span class="built_in">current_user</span>; 或 <span class="keyword">show</span> grants <span class="keyword">for</span> <span class="built_in">current_user</span>();</span><br><span class="line"><span class="comment">-- 撤消权限</span></span><br><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 表名 <span class="keyword">from</span> 用户名</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> privileges, <span class="keyword">grant</span> option <span class="keyword">from</span> 用户名   <span class="comment">-- 撤销所有权限</span></span><br><span class="line"><span class="comment">-- 权限层级</span></span><br><span class="line"><span class="comment">-- 要使用grant或revoke，您必须拥有grant option权限，并且您必须用于您正在授予或撤销的权限。</span></span><br><span class="line">全局层级：全局权限适用于一个给定服务器中的所有数据库，mysql.user</span><br><span class="line">    <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span>和 <span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span>只授予和撤销全局权限。</span><br><span class="line">数据库层级：数据库权限适用于一个给定数据库中的所有目标，mysql.db, mysql.host</span><br><span class="line">    <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> db_name.<span class="operator">*</span>和<span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> db_name.<span class="operator">*</span>只授予和撤销数据库权限。</span><br><span class="line">表层级：表权限适用于一个给定表中的所有列，mysql.talbes_priv</span><br><span class="line">    <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> db_name.tbl_name和<span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> db_name.tbl_name只授予和撤销表权限。</span><br><span class="line">列层级：列权限适用于一个给定表中的单一列，mysql.columns_priv</span><br><span class="line">    当使用<span class="keyword">revoke</span>时，您必须指定与被授权列相同的列。</span><br><span class="line"><span class="comment">-- 权限列表</span></span><br><span class="line"><span class="keyword">all</span> [privileges]    <span class="comment">-- 设置除grant option之外的所有简单权限</span></span><br><span class="line"><span class="keyword">alter</span>   <span class="comment">-- 允许使用alter table</span></span><br><span class="line"><span class="keyword">alter</span> routine   <span class="comment">-- 更改或取消已存储的子程序</span></span><br><span class="line"><span class="keyword">create</span>  <span class="comment">-- 允许使用create table</span></span><br><span class="line"><span class="keyword">create</span> routine  <span class="comment">-- 创建已存储的子程序</span></span><br><span class="line"><span class="keyword">create</span> temporary tables     <span class="comment">-- 允许使用create temporary table</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span>     <span class="comment">-- 允许使用create user, drop user, rename user和revoke all privileges。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span>     <span class="comment">-- 允许使用create view</span></span><br><span class="line"><span class="keyword">delete</span>  <span class="comment">-- 允许使用delete</span></span><br><span class="line"><span class="keyword">drop</span>    <span class="comment">-- 允许使用drop table</span></span><br><span class="line"><span class="keyword">execute</span>     <span class="comment">-- 允许用户运行已存储的子程序</span></span><br><span class="line">file    <span class="comment">-- 允许使用select...into outfile和load data infile</span></span><br><span class="line">index   <span class="comment">-- 允许使用create index和drop index</span></span><br><span class="line"><span class="keyword">insert</span>  <span class="comment">-- 允许使用insert</span></span><br><span class="line">lock tables     <span class="comment">-- 允许对您拥有select权限的表使用lock tables</span></span><br><span class="line">process     <span class="comment">-- 允许使用show full processlist</span></span><br><span class="line"><span class="keyword">references</span>  <span class="comment">-- 未被实施</span></span><br><span class="line">reload  <span class="comment">-- 允许使用flush</span></span><br><span class="line">replication client  <span class="comment">-- 允许用户询问从属服务器或主服务器的地址</span></span><br><span class="line">replication slave   <span class="comment">-- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</span></span><br><span class="line"><span class="keyword">select</span>  <span class="comment">-- 允许使用select</span></span><br><span class="line"><span class="keyword">show</span> databases  <span class="comment">-- 显示所有数据库</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">view</span>   <span class="comment">-- 允许使用show create view</span></span><br><span class="line">shutdown    <span class="comment">-- 允许使用mysqladmin shutdown</span></span><br><span class="line">super   <span class="comment">-- 允许使用change master, kill, purge master logs和set global语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</span></span><br><span class="line"><span class="keyword">update</span>  <span class="comment">-- 允许使用update</span></span><br><span class="line">usage   <span class="comment">-- “无权限”的同义词</span></span><br><span class="line"><span class="keyword">grant</span> option    <span class="comment">-- 允许授予权限</span></span><br></pre></td></tr></table></figure><h1 id="表维护"><a href="#表维护" class="headerlink" title="表维护"></a>表维护</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 分析和存储表的关键字分布</span></span><br><span class="line">analyze [<span class="keyword">local</span> <span class="operator">|</span> no_write_to_binlog] <span class="keyword">table</span> 表名 ...</span><br><span class="line"><span class="comment">-- 检查一个或多个表是否有错误</span></span><br><span class="line"><span class="keyword">check</span> <span class="keyword">table</span> tbl_name [, tbl_name] ... [option] ...</span><br><span class="line">option <span class="operator">=</span> &#123;quick <span class="operator">|</span> fast <span class="operator">|</span> medium <span class="operator">|</span> extended <span class="operator">|</span> changed&#125;</span><br><span class="line"><span class="comment">-- 整理数据文件的碎片</span></span><br><span class="line">optimize [<span class="keyword">local</span> <span class="operator">|</span> no_write_to_binlog] <span class="keyword">table</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure><h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 可用反引号（`）为标识符（库名、表名、字段名、索引、别名）包裹，以避免与关键字重名！中文也可以作为标识符！</span><br><span class="line"><span class="number">2.</span> 每个库目录存在一个保存当前数据库的选项文件db.opt。</span><br><span class="line"><span class="number">3.</span> 注释：</span><br><span class="line">    单行注释 # 注释内容</span><br><span class="line">    多行注释 <span class="comment">/* 注释内容 */</span></span><br><span class="line">    单行注释 <span class="comment">-- 注释内容     (标准sql注释风格，要求双破折号后加一空格符（空格、tab、换行等）)</span></span><br><span class="line"><span class="number">4.</span> 模式通配符：</span><br><span class="line">    _   任意单个字符</span><br><span class="line">    <span class="operator">%</span>   任意多个字符，甚至包括零字符</span><br><span class="line">    单引号需要进行转义 \<span class="string">&#x27;</span></span><br><span class="line"><span class="string">5. cmd命令行内的语句结束符可以为 &quot;;&quot;, &quot;\g&quot;, &quot;\g&quot;，仅影响显示结果。其他地方还是用分号结束。delimiter 可修改当前对话的语句结束符。</span></span><br><span class="line"><span class="string">6. sql对大小写不敏感</span></span><br><span class="line"><span class="string">7. 清除已有语句：\c</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm install hexo-renderer-sass时报错</title>
      <link href="/2019/05/20/npm-install-hexo-renderer-sass%E6%97%B6%E6%8A%A5%E9%94%99/"/>
      <url>/2019/05/20/npm-install-hexo-renderer-sass%E6%97%B6%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用<code>hexo</code>搭建博客时，需安装<code>hexo-renderer-sass</code>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-sass</span></span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>改用淘宝镜像：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>再次安装：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cnpm install hexo-renderer-sass --save</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新搭建博客</title>
      <link href="/2019/05/20/%E9%87%8D%E6%96%B0%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/05/20/%E9%87%8D%E6%96%B0%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>3月份初，许久没写博客（主要就是懒）的博主在莫一天心血来潮写好一篇文章后，使用<code>hexo d</code>部署博客文章时，发现<code>hexo</code>抛出各种错误。但由于当时准备面试的面试题（主要就是懒），然后就放着没管它。紧接着面试实习岗位，工作后也一直没有闲下来。<br>最近终于抽出时间来重构博客，写下这篇文章，记录一下重构博客的过程~</p><h2 id="博客目录介绍"><a href="#博客目录介绍" class="headerlink" title="博客目录介绍"></a>博客目录介绍</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── scripts</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><ul><li>.deploy：执行hexo deploy命令部署到GitHub上的内容目录</li><li>public：执行hexo generate命令，输出的静态网页内容目录</li><li>scaffolds：layout模板文件目录，其中的md文件可以添加编辑</li><li>scripts：扩展脚本目录，这里可以自定义一些javascript脚本</li><li>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</li><li>_drafts：草稿文章</li><li>_posts：发布文章</li><li>themes：主题文件目录</li><li>_config.yml：全局配置文件，大多数的设置都在这里</li><li>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的 关于 按钮</li></ul><p>接下来是重头戏 _config.yml ，做个简单说明：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/configure.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/tommy351/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site #整站的基本信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">不如</span> <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">码农，程序猿，未来的昏析师</span> <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">bruce</span> <span class="string">sha&#x27;s</span> <span class="string">blog</span> <span class="string">|</span> <span class="string">java</span> <span class="string">|</span> <span class="string">scala</span> <span class="string">|</span> <span class="string">bi</span> <span class="comment">#网站描述，给搜索引擎用的，在生成html中的head-&gt;meta中可看到</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">bruce</span> <span class="comment">#网站作者，在下方显示</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">bu.ru@qq.com</span> <span class="comment">#联系邮箱</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">#语言</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL #域名和文件结构</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://ibruce.info</span> <span class="comment">#你的域名</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing #写文章选项</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span> <span class="comment">#默认layout方式</span></span><br><span class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span> <span class="comment"># Add spaces between asian characters and western characters</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">max_open_file:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">multi_thread:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">highlight:</span> <span class="comment">#代码高亮</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否启用</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span> <span class="comment">#是否显示行号</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag #分类与标签</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span> <span class="comment"># default</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突</span></span><br><span class="line"><span class="comment">## 2: Enable pagination</span></span><br><span class="line"><span class="comment">## 1: Disable pagination</span></span><br><span class="line"><span class="comment">## 0: Fully Disable</span></span><br><span class="line"><span class="attr">archive:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">category:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">tag:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Server #本地服务参数</span></span><br><span class="line"><span class="comment">## Hexo uses Connect as a server</span></span><br><span class="line"><span class="comment">## You can customize the logger format as defined in</span></span><br><span class="line"><span class="comment">## http://www.senchalabs.org/connect/logger.html</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">4000</span></span><br><span class="line"><span class="attr">logger:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">logger_format:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format #日期显示格式</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">MMM</span> <span class="string">D</span> <span class="string">YYYY</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">H:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination #分页设置</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#每页10篇文章</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus #社会化评论disqus，我使用多说，在主题中配置</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions #插件，暂时未安装插件</span></span><br><span class="line"><span class="comment">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span></span><br><span class="line"><span class="comment">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span></span><br><span class="line"><span class="comment">## 主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">modernist</span> <span class="comment"># raytaylorism # pacman # modernist # light</span></span><br><span class="line"><span class="attr">exclude_generator:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment #部署</span></span><br><span class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/deploy.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:bruce-sha/bruce-sha.github.com.git</span> <span class="comment">#你的GitHub Pages仓库</span></span><br></pre></td></tr></table></figure><h2 id="主题目录介绍"><a href="#主题目录介绍" class="headerlink" title="主题目录介绍"></a>主题目录介绍</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages          #多语言</span><br><span class="line">|   ├── default.yml    #默认语言</span><br><span class="line">|   └── zh-CN.yml      #中文语言</span><br><span class="line">├── layout             #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><br><span class="line">|   ├── _partial       #局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><br><span class="line">|   └── _widget        #小挂件的布局，页面下方小挂件的控制</span><br><span class="line">├── source             #源码</span><br><span class="line">|   ├── css            #css源码 </span><br><span class="line">|   |   ├── _base      #*.styl基础css</span><br><span class="line">|   |   ├── _partial   #*.styl局部css</span><br><span class="line">|   |   ├── fonts      #字体</span><br><span class="line">|   |   ├── images     #图片</span><br><span class="line">|   |   └── style.styl #*.styl引入需要的css源码</span><br><span class="line">|   ├── fancybox       #fancybox效果源码</span><br><span class="line">|   └── js             #javascript源代码</span><br><span class="line">├── _config.yml        #主题配置文件</span><br><span class="line">└── README.md          #用GitHub的都知道</span><br></pre></td></tr></table></figure><p>如果你需要修改头部，直接修改 <code>hexo\themes\modernist\layout\_partial\header.ejs</code> ，比如头上加个搜索框：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;form class=&quot;search&quot; action=&quot;//google.com/search&quot; method=&quot;get&quot; accept-charset=&quot;utf-8&quot;&gt;</span><br><span class="line"> &lt;input type=&quot;search&quot; name=&quot;q&quot; id=&quot;search&quot; autocomplete=&quot;off&quot; autocorrect=&quot;off&quot; autocapitalize=&quot;off&quot; maxlength=&quot;20&quot; placeholder=&quot;Search&quot; /&gt;</span><br><span class="line"> &lt;input type=&quot;hidden&quot; name=&quot;q&quot; value=&quot;site:&lt;%- config.url.replace(/^https?:\/\//, &#x27;&#x27;) %&gt;&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>将如上代码加入即可，您需要修改css以便这个搜索框比较美观。<br>再如，你要修改页脚版权信息，直接编辑 <code>hexo\themes\modernist\layout\_partial\footer.ejs </code>。同理，你需要修改css，直接去修改对应位置的styl文件。</p><h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><blockquote><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html">https://www.haomwei.com/technology/maupassant-hexo.html</a></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-pug --save</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-sass --save</span></span><br></pre></td></tr></table></figure><blockquote><p><code>npm install hexo-renderer-pug --save</code>安装时可能会报错，以下是解决方案：<br>改用cnpm来安装软件</p><blockquote><p>$ npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>目的是直接改npm为淘宝的npm，也为防止某些依赖直接用npm来安装，导致无法顺利安装完成<br>$ npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></blockquote></blockquote><p>编辑Hexo目录下的 <code>_config.yml</code>，将<code>theme</code>的值改为<code>maupassant</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">matery</span></span><br></pre></td></tr></table></figure><h1 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 是否启用Fancybox图片灯箱效果</span></span><br><span class="line"><span class="comment"># Disqus评论 shortnam</span></span><br><span class="line"><span class="attr">disqus:</span> </span><br><span class="line"><span class="comment"># 友言评论 id</span></span><br><span class="line"><span class="attr">uyan:</span> </span><br><span class="line"><span class="comment"># 来必力评论 data-uid</span></span><br><span class="line"><span class="attr">livere:</span> </span><br><span class="line"><span class="comment"># 畅言评论 appid</span></span><br><span class="line"><span class="attr">changyan:</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="comment">## Your changyan conf, e.g. prod_d8a508c2825ab57eeb43e7c69bba0e8b</span></span><br><span class="line"><span class="comment"># Gitment评论相关参数</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">owner:</span> </span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">  <span class="attr">client_id:</span> </span><br><span class="line">  <span class="attr">client_secret:</span> </span><br><span class="line"><span class="comment"># Gitalk评论相关参数</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">owner:</span>  </span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">  <span class="attr">client_id:</span>  </span><br><span class="line">  <span class="attr">client_secret:</span>  </span><br><span class="line">  <span class="attr">admin:</span>  </span><br><span class="line"><span class="comment"># Valine评论相关参数</span></span><br><span class="line"><span class="attr">valine:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">appid:</span> </span><br><span class="line">  <span class="attr">appkey:</span> </span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># 评论系统中的邮件提醒设置</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment">## Validation code.</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">so</span> <span class="string">so</span> </span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">&#x27;mm&#x27;</span> </span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span></span><br><span class="line"><span class="comment"># 默认使用Google搜索引擎</span></span><br><span class="line"><span class="attr">google_search:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 若想使用百度搜索，将其设定为 true</span></span><br><span class="line"><span class="attr">baidu_search:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># Swiftype 站内搜索key</span></span><br><span class="line"><span class="attr">swiftype:</span> </span><br><span class="line"><span class="comment"># 微搜索 key</span></span><br><span class="line"><span class="attr">tinysou:</span> </span><br><span class="line"><span class="comment"># 基于jQuery的本地搜索引擎，需要安装hexo-generator-search插件使用</span></span><br><span class="line"><span class="attr">self_search:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># Google Analytics 跟踪ID</span></span><br><span class="line"><span class="attr">google_analytics:</span> </span><br><span class="line"><span class="comment"># 百度统计 跟踪ID</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span> <span class="comment">## If you want to use fancybox please set the value to true.</span></span><br><span class="line"><span class="comment"># 是否显示侧边栏分类数目</span></span><br><span class="line"><span class="attr">show_category_count:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 是否显示文章中目录列表自动编号</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#  是否使用分享按鈕，需要安装hexo-helper-qrcode插件使用</span></span><br><span class="line"><span class="attr">shareto:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#  是否使用不蒜子页面访问计数</span></span><br><span class="line"><span class="attr">busuanzi:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attr">wordcount:</span> <span class="literal">false</span> <span class="comment">## If you want to display the word counter and the reading time expected to spend of each post please set the value to true, and you must have hexo-wordcount installed.</span></span><br><span class="line"><span class="comment"># 是否在移动设备屏幕底部显示侧边栏</span></span><br><span class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">false</span> <span class="comment">## Set to true to enable widgets on small screens.</span></span><br><span class="line"><span class="comment"># 是否使用canvas动态背景</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">color:</span> <span class="comment">## RGB value of the color, e.g. &quot;100,99,98&quot;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="comment">## Transparency of lines, e.g. &quot;0.7&quot;</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="comment">## The z-index property of the background, e.g. &quot;-1&quot;</span></span><br><span class="line">  <span class="attr">count:</span> <span class="comment">## Quantity of lines, e.g. &quot;150&quot;</span></span><br><span class="line"><span class="comment"># 是否启用捐赠按钮</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github:</span> <span class="comment">## GitHub URL, e.g. https://github.com/Kaiyuan/donate-page</span></span><br><span class="line">  <span class="attr">alipay_qr:</span> <span class="comment">## Path of Alipay QRcode image, e.g. /img/AliPayQR.png</span></span><br><span class="line">  <span class="attr">wechat_qr:</span> <span class="comment">## Path of Wechat QRcode image, e.g. /img/WeChatQR.png</span></span><br><span class="line">  <span class="attr">btc_qr:</span> <span class="comment">## Path of Bitcoin QRcode image, e.g. /img/BTCQR.png</span></span><br><span class="line">  <span class="attr">btc_key:</span> <span class="comment">## Bitcoin key, e.g. 1KuK5eK2BLsqpsFVXXSBG5wbSAwZVadt6L</span></span><br><span class="line">  <span class="attr">paypal_url:</span> <span class="comment">## Paypal URL, e.g. https://www.paypal.me/tufu9441</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to display the copyright info after each post, please set the value to true and fill the following items on your need.</span></span><br><span class="line">  <span class="attr">author:</span> <span class="comment">## Your author name, e.g. tufu9441</span></span><br><span class="line">  <span class="attr">copyright_text:</span> <span class="comment">## Your copyright text, e.g. The author owns the copyright, please indicate the source reproduced.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义页面及菜单，依照已有格式填写。</span></span><br><span class="line"><span class="comment"># 填写后请在source目录下建立相应名称的文件夹，并包含index.md文件，以正确显示页面。</span></span><br><span class="line"><span class="comment"># 导航菜单中集成了FontAwesome图标字体，可以在这里选择新的图标，并按照相关说明使用。</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">home</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">archives/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">about</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">about/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">rss</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择和排列希望使用的侧边栏小工具</span></span><br><span class="line"><span class="attr">widgets:</span> <span class="comment">## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">search</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">category</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tag</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">recent_posts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">recent_comments</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">links</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 友情链接，请依照格式填写</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name1</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example1.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name2</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example2.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name3</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example3.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站历史时间线，在页面front-matter中设置layout: timeline可显示</span></span><br><span class="line"><span class="attr">timeline:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2014</span><span class="string">/06/12-Start</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2014</span><span class="string">/11/29-XXX</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">word:</span> <span class="number">2015</span><span class="string">/02/18-DDD</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">num:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">word:</span> <span class="string">More</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files</span></span><br><span class="line"><span class="comment"># 静态文件存储路径，方便设置CDN缓存</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme version</span></span><br><span class="line"><span class="comment"># 主题版本，便于静态文件更新后刷新CDN缓存</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">0.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><h3 id="Disqus配置使用"><a href="#Disqus配置使用" class="headerlink" title="Disqus配置使用"></a>Disqus配置使用</h3><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><blockquote><p><a href="https://link.jianshu.com/?t=https://disqus.com/">https://disqus.com/</a></p></blockquote><h1 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h1><h2 id="主题目录结构"><a href="#主题目录结构" class="headerlink" title="主题目录结构"></a>主题目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-maupassant</span><br><span class="line">|-languages</span><br></pre></td></tr></table></figure><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><p>网站Favicon：<code>/blog/source/favicon.ico</code>，建议的大小：<code>32px*32px</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo d命令报错：ERROR Deployer not found: git</title>
      <link href="/2019/05/15/hexo-d%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99%EF%BC%9AERROR-Deployer-not-found-git/"/>
      <url>/2019/05/15/hexo-d%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99%EF%BC%9AERROR-Deployer-not-found-git/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>使用<code>hexo d</code>或<code>hexo deploy</code>命令时报错：</p><blockquote><p>ERROR Deployer not found: git</p></blockquote><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>安装<code>hexo-deployer-git</code>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>在<code>_config.yml</code>配置中将<code>deploy</code>的<code>type</code>由<code>github</code>改为<code>git</code>：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">deploy</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:YOUR_ID/YOUR_ID.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><blockquote><p>将其中的<code>YOUR_ID</code>改成你自己的GitHub账号</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彻底禁用Chrome的“请停用以开发者模式运行的扩展程序”提示</title>
      <link href="/2019/05/09/%E5%BD%BB%E5%BA%95%E7%A6%81%E7%94%A8Chrome%E7%9A%84%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E6%8F%90%E7%A4%BA/"/>
      <url>/2019/05/09/%E5%BD%BB%E5%BA%95%E7%A6%81%E7%94%A8Chrome%E7%9A%84%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E6%8F%90%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Chrome勾选<code>开发者模式</code>安装插件后，每次启动都会弹出<code>请停用以开发者模式运行的扩展程序</code>的提示，最为一枚具有强迫症的程序员，这个绝对不能忍~~</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509200546595.png" alt="20190509200546595.png"></p><blockquote><p>Chrome版本：74.0.3729.131</p></blockquote><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="方案一：反编译修改chrome-dll文件"><a href="#方案一：反编译修改chrome-dll文件" class="headerlink" title="方案一：反编译修改chrome.dll文件"></a>方案一：反编译修改chrome.dll文件</h2><h3 id="1-1-下载x64dbg"><a href="#1-1-下载x64dbg" class="headerlink" title="1.1 下载x64dbg"></a>1.1 下载x64dbg</h3><p>下载地址：<a href="https://github.com/x64dbg/x64dbg/releases">https://github.com/x64dbg/x64dbg/releases</a><br>选择最新版本进行下载：<img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509200649190.png" alt="20190509200649190.png"><br>下载好之后，解压打开<code>release</code>，可以点击<code>x96dbg</code>选择<code>x64dbg</code>，也可以直接选择<code>x64</code>文件夹中的<code>x64dbg</code>，如果你是<code>32位</code>的系统还可以选择<code>x32dbg</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509200733234.png" alt="在这里插入图片描述"></p><h3 id="1-2-反编译chrome-dll"><a href="#1-2-反编译chrome-dll" class="headerlink" title="1.2 反编译chrome.dll"></a>1.2 反编译chrome.dll</h3><p>通过 <code>右键chrome图标</code> –&gt; <code>属性</code> –&gt; <code>打开文件的所在位置</code> 找到<code>chrome.dll</code>文件<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/2019050920091629.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509200924590.png" alt="在这里插入图片描述"><br>将<code>chrome.dll</code>文件拖入<code>x64.dbg</code>，会出现两个弹窗，其中黑色命令行弹窗不要关掉。如图：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201022963.png" alt="在这里插入图片描述">然后连续多次点击<code>运行到用户代码</code>按钮（我这里是连续点击6下），直至窗口标题处的模块变成<code>chrome.dll </code>：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201142813.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201224765.png" alt="在这里插入图片描述"><br>然后在主面板右键依次选择 <code>搜索</code>  –&gt; <code>当前模块</code> –&gt; <code>字符串</code>：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201307958.png" alt="在这里插入图片描述"><br>然后会打开一个搜索界面，等待模块搜索进度条<code>100%</code>也就是加载完毕：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201331276.png" alt="在这里插入图片描述"><br>在<code>搜索</code>框输入<code>ExtensionDeveloperModeWarning</code>进行搜索，会搜到2条结果，双击第1个，跳转到反汇编界面，往上翻一点，找到<code>cmp eax,2</code>（也有可能是 cmp eax,3 ）：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/201905092013524.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201416572.png" alt="在这里插入图片描述"><br>双击打开编辑页面，修改成<code>cmp eax,9</code>，然后点击<code>确定</code>，注意只需要<code>点击一次确定</code>即可，点击确定后它还是会继续弹出其它行的编辑界面，此时直接关闭对话框即可：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201440897.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201502878.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/20190509201514611.png" alt="在这里插入图片描述"><br>修改完之后<code>Ctrl+P</code>导出修改过的dll文件（点击修补文件按钮就是导出dll文件）：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190509/2019050920153199.png" alt="在这里插入图片描述"><br>然后把dll文件导出到任意其他位置，然后把原始<code>chrome.dll</code>文件&#x3D;&#x3D;<strong>备份</strong>&#x3D;&#x3D;（以免操作失误，否则只能重装Chrome），先关掉<code>x64dbg</code>，将刚刚导出的修补文件以<code>chrome.dll</code>命名然后覆盖原来的<code>chrome.dll</code>文件，重启Chrome，发现整个世界都清净了~~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马乐优商城</title>
      <link href="/2019/05/07/%E9%BB%91%E9%A9%AC%E4%B9%90%E4%BC%98%E5%95%86%E5%9F%8E/"/>
      <url>/2019/05/07/%E9%BB%91%E9%A9%AC%E4%B9%90%E4%BC%98%E5%95%86%E5%9F%8E/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">链接</th><th align="center">提取码</th></tr></thead><tbody><tr><td align="center"><a href="https://pan.baidu.com/s/167rIvhV1U8Sm89oMLNA2mw?pwd=java" target="_blank">视频</a></td><td align="center"><code>java</code></td></tr><tr><td align="center"><a href="https://pan.baidu.com/s/1sB3vPk1Q0GkkgnF8-xc8yw?pwd=java" target="_blank">笔记</a></td><td align="center"><code>java</code></td></tr><tr><td align="center"><a href="https://pan.baidu.com/s/1Vz76JO4HKP5HU9_ovyx4GA?pwd=java" target="_blank">资料</a></td><td align="center"><code>java</code></td></tr></tbody></table><blockquote><p>本资源是博主在网上寻找乐优商城资料时，一位好人所赠<br><font color="hotpink">注意：找乐优商城资料的同学应该知道，乐优商城的视频有win和mac版本之分，此资源中的视频是mac版本。资料中的课件是完整的，但是与视频会有所出入</font></p></blockquote><blockquote><ul><li>如果链接失效，可通过<a href="mailto:support@xiongtianci.com">邮件</a>联系获取</li><li><a href="https://github.com/tiancixiong/leyou">项目源码</a>是博主通过学习<a href="https://github.com/tiancixiong/leyou/tree/notes">笔记</a>所编写，没有看视频</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑马 </tag>
            
            <tag> 乐优商城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>navicat操作mysql的时候，如何输入null值？</title>
      <link href="/2019/05/05/navicat%E6%93%8D%E4%BD%9Cmysql%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%A6%82%E4%BD%95%E8%BE%93%E5%85%A5null%E5%80%BC%EF%BC%9F/"/>
      <url>/2019/05/05/navicat%E6%93%8D%E4%BD%9Cmysql%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%A6%82%E4%BD%95%E8%BE%93%E5%85%A5null%E5%80%BC%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190505/2019050511402255.png" alt="在这里插入图片描述"><br>使用<code>右键</code>或菜单栏中的<code>编辑</code>可以设置<code>NULL值</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190505/20190505114522257.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190505/20190505114636410.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> Navicat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POI导入Excel异常Cannot get a text value from a numeric cell</title>
      <link href="/2019/04/23/POI%E5%AF%BC%E5%85%A5Excel%E5%BC%82%E5%B8%B8Cannot-get-a-text-value-from-a-numeric-cell/"/>
      <url>/2019/04/23/POI%E5%AF%BC%E5%85%A5Excel%E5%BC%82%E5%B8%B8Cannot-get-a-text-value-from-a-numeric-cell/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p><code>POI</code>操作<code>Excel</code>时偶尔会出现<code>Cannot get a text value from a numeric cell</code>的异常错误</p><blockquote><p>java.lang.IllegalStateException: Cannot get a text value from a numeric cell</p></blockquote><p>异常原因：Excel数据cell有不同的类型，当我们试图从一个数字类型的Cell读取出一个字符串并写入数据库时，就会出现Cannot get a text value from a numeric cell的异常错误。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>通过<code>setCellType()</code>设置<code>cell</code>类型，统一设置成String类型，然后再获取</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> sheet.getRow(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; row.getPhysicalNumberOfCells(); j++) &#123;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">row.getCell(j).setCellType(Cell.CELL_TYPE_STRING);</span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="type">String</span> <span class="variable">cellValue</span> <span class="operator">=</span> row.getCell(j).getStringCellValue();</span><br><span class="line">System.out.println(cellValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POI </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑开机后弹窗提示下载名称是cc.png，来源是s3.amazonaws.com的文件</title>
      <link href="/2019/04/19/%E7%94%B5%E8%84%91%E5%BC%80%E6%9C%BA%E5%90%8E%E5%BC%B9%E7%AA%97%E6%8F%90%E7%A4%BA%E4%B8%8B%E8%BD%BD%E5%90%8D%E7%A7%B0%E6%98%AFcc-png%EF%BC%8C%E6%9D%A5%E6%BA%90%E6%98%AFs3-amazonaws-com%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>/2019/04/19/%E7%94%B5%E8%84%91%E5%BC%80%E6%9C%BA%E5%90%8E%E5%BC%B9%E7%AA%97%E6%8F%90%E7%A4%BA%E4%B8%8B%E8%BD%BD%E5%90%8D%E7%A7%B0%E6%98%AFcc-png%EF%BC%8C%E6%9D%A5%E6%BA%90%E6%98%AFs3-amazonaws-com%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>电脑开机之后会自动弹窗提示让下载一个名称是<code>cc.png</code>，来源是<code>s3.amazonaws.com</code>的文件<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190419/20190419091835627.png" alt="在这里插入图片描述"></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>网上查询后，了解到是因为我最近下载了<code>Adobe Premiere</code>，而破解工具有瑕疵的原因。网上的解决方案是将<code>Adobe Creative Cloud</code>的默认开机启动改成<code>禁用</code>即可，下面是解决步骤：</p><blockquote><p>1、使用快捷键<code>Ctrl + Shift + Esc</code>打开<code>任务管理器</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190419/20190419092336589.png" alt="在这里插入图片描述"><br>2、在<code>启动</code>中找到<code>Adobe Creative Cloud</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190419/20190419092453410.png" alt="在这里插入图片描述"><br>3、右键，将其改为<code>禁用</code>即可<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190419/20190419092604757.png" alt="在这里插入图片描述"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> cc.png </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA运行SpringBoot项目控制台输出颜色高亮的日志</title>
      <link href="/2019/04/16/IDEA%E8%BF%90%E8%A1%8CSpringBoot%E9%A1%B9%E7%9B%AE%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E9%A2%9C%E8%89%B2%E9%AB%98%E4%BA%AE%E7%9A%84%E6%97%A5%E5%BF%97/"/>
      <url>/2019/04/16/IDEA%E8%BF%90%E8%A1%8CSpringBoot%E9%A1%B9%E7%9B%AE%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E9%A2%9C%E8%89%B2%E9%AB%98%E4%BA%AE%E7%9A%84%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>有时IDEA运行SpringBoot项目，控制台<code>Console</code>输出的日志颜色为白色的</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>配置启动类<code>application</code>的相关参数，添加：<code>-Dspring.output.ansi.enabled=ALWAYS</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190416/20190416160105555.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10日语输入法切换平片假名</title>
      <link href="/2019/04/16/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E5%88%87%E6%8D%A2%E5%B9%B3%E7%89%87%E5%81%87%E5%90%8D/"/>
      <url>/2019/04/16/win10%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E5%88%87%E6%8D%A2%E5%B9%B3%E7%89%87%E5%81%87%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="1-切换平假名"><a href="#1-切换平假名" class="headerlink" title="1.切换平假名"></a>1.切换平假名</h3><p>使用<code>Ctrl + CapsLock</code>切换至<code>平假名输入</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190416/20190416154213323.png" alt="在这里插入图片描述"></p><h3 id="2-切换片假名"><a href="#2-切换片假名" class="headerlink" title="2.切换片假名"></a>2.切换片假名</h3><p>使用<code>Alt + CapsLock</code>切换至<code>片假名输入</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190416/20190416154232520.png" alt="在这里插入图片描述"></p><h3 id="3-在键入时切换假名"><a href="#3-在键入时切换假名" class="headerlink" title="3.在键入时切换假名"></a>3.在键入时切换假名</h3><p>在键入时可通过<code>F6</code>切换成<strong>平假名</strong>、<code>F7</code>切换成<strong>片假名</strong></p><h3 id="4-切换英文输入"><a href="#4-切换英文输入" class="headerlink" title="4.切换英文输入"></a>4.切换英文输入</h3><p>使用<code>Shift + CapsLock</code>或<code>Alt + ~</code>切换至<code>英文输入</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190416/20190416154245677.png" alt="在这里插入图片描述"></p><h3 id="5-语言切换"><a href="#5-语言切换" class="headerlink" title="5.语言切换"></a>5.语言切换</h3><p>使用<code>win徽标键 + 空格</code>在输入语言之间切换</p>]]></content>
      
      
      <categories>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome历史版本下载</title>
      <link href="/2019/04/01/Chrome%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD/"/>
      <url>/2019/04/01/Chrome%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.chromedownloads.net/chrome64linux/">Chrome历史版本</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Twitter的Snowflake设置分布式自增长ID</title>
      <link href="/2019/03/29/%E4%BD%BF%E7%94%A8Twitter%E7%9A%84Snowflake%E8%AE%BE%E7%BD%AE%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9E%E9%95%BFID/"/>
      <url>/2019/03/29/%E4%BD%BF%E7%94%A8Twitter%E7%9A%84Snowflake%E8%AE%BE%E7%BD%AE%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9E%E9%95%BFID/</url>
      
        <content type="html"><![CDATA[<blockquote><p>十次方项目工具类<code>IdWorker.java</code><br>描述：使用<code>Twitter</code>的<code>Snowflake</code>雪花算法设置分布式自增长ID</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.management.ManagementFactory;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.NetworkInterface;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;名称：IdWorker.java&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;描述：分布式自增长ID&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     Twitter的 Snowflake　JAVA实现方案</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> * 核心代码为其IdWorker这个类实现，其原理结构如下，我分别用一个0表示一位，用—分割开部分的作用：</span></span><br><span class="line"><span class="comment"> * 1||0---0000000000 0000000000 0000000000 0000000000 0 --- 00000 ---00000 ---000000000000</span></span><br><span class="line"><span class="comment"> * 在上面的字符串中，第一位为未使用（实际上也可作为long的符号位），接下来的41位为毫秒级时间，</span></span><br><span class="line"><span class="comment"> * 然后5位datacenter标识位，5位机器ID（并不算标识符，实际是为线程标识），</span></span><br><span class="line"><span class="comment"> * 然后12位该毫秒内的当前毫秒内的计数，加起来刚好64位，为一个Long型。</span></span><br><span class="line"><span class="comment"> * 这样的好处是，整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞（由datacenter和机器ID作区分），</span></span><br><span class="line"><span class="comment"> * 并且效率较高，经测试，snowflake每秒能够产生26万ID左右，完全满足需要。</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 64位ID (42(毫秒)+5(机器ID)+5(业务编码)+12(重复累加))</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Polim</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IdWorker</span> &#123;</span><br><span class="line">    <span class="comment">// 时间起始标记点，作为基准，一般取系统的最近时间（一旦确定不能变动）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">twepoch</span> <span class="operator">=</span> <span class="number">1288834974657L</span>;</span><br><span class="line">    <span class="comment">// 机器标识位数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">workerIdBits</span> <span class="operator">=</span> <span class="number">5L</span>;</span><br><span class="line">    <span class="comment">// 数据中心标识位数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">datacenterIdBits</span> <span class="operator">=</span> <span class="number">5L</span>;</span><br><span class="line">    <span class="comment">// 机器ID最大值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">maxWorkerId</span> <span class="operator">=</span> -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; workerIdBits);</span><br><span class="line">    <span class="comment">// 数据中心ID最大值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">maxDatacenterId</span> <span class="operator">=</span> -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; datacenterIdBits);</span><br><span class="line">    <span class="comment">// 毫秒内自增位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">sequenceBits</span> <span class="operator">=</span> <span class="number">12L</span>;</span><br><span class="line">    <span class="comment">// 机器ID偏左移12位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">workerIdShift</span> <span class="operator">=</span> sequenceBits;</span><br><span class="line">    <span class="comment">// 数据中心ID左移17位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">datacenterIdShift</span> <span class="operator">=</span> sequenceBits + workerIdBits;</span><br><span class="line">    <span class="comment">// 时间毫秒左移22位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">timestampLeftShift</span> <span class="operator">=</span> sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">sequenceMask</span> <span class="operator">=</span> -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; sequenceBits);</span><br><span class="line">    <span class="comment">/* 上次生产id时间戳 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">long</span> <span class="variable">lastTimestamp</span> <span class="operator">=</span> -<span class="number">1L</span>;</span><br><span class="line">    <span class="comment">// 0，并发控制</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">sequence</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">long</span> workerId;</span><br><span class="line">    <span class="comment">// 数据标识id部分</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">long</span> datacenterId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IdWorker</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.datacenterId = getDatacenterId(maxDatacenterId);</span><br><span class="line">        <span class="built_in">this</span>.workerId = getMaxWorkerId(datacenterId, maxWorkerId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workerId     工作机器ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datacenterId 序列号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IdWorker</span><span class="params">(<span class="type">long</span> workerId, <span class="type">long</span> datacenterId)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(String.format(<span class="string">&quot;worker Id can&#x27;t be greater than %d or less than 0&quot;</span>, maxWorkerId));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(String.format(<span class="string">&quot;datacenter Id can&#x27;t be greater than %d or less than 0&quot;</span>, maxDatacenterId));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.workerId = workerId;</span><br><span class="line">        <span class="built_in">this</span>.datacenterId = datacenterId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取下一个ID</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">long</span> <span class="title function_">nextId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> timeGen();</span><br><span class="line">        <span class="keyword">if</span> (timestamp &lt; lastTimestamp) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(String.format(<span class="string">&quot;Clock moved backwards.  Refusing to generate id for %d milliseconds&quot;</span>, lastTimestamp - timestamp));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lastTimestamp == timestamp) &#123;</span><br><span class="line">            <span class="comment">// 当前毫秒内，则+1</span></span><br><span class="line">            sequence = (sequence + <span class="number">1</span>) &amp; sequenceMask;</span><br><span class="line">            <span class="keyword">if</span> (sequence == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 当前毫秒内计数满了，则等待下一秒</span></span><br><span class="line">                timestamp = tilNextMillis(lastTimestamp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sequence = <span class="number">0L</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lastTimestamp = timestamp;</span><br><span class="line">        <span class="comment">// ID偏移组合生成最终的ID，并返回ID</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">nextId</span> <span class="operator">=</span> ((timestamp - twepoch) &lt;&lt; timestampLeftShift)</span><br><span class="line">                | (datacenterId &lt;&lt; datacenterIdShift)</span><br><span class="line">                | (workerId &lt;&lt; workerIdShift) | sequence;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nextId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="title function_">tilNextMillis</span><span class="params">(<span class="keyword">final</span> <span class="type">long</span> lastTimestamp)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="built_in">this</span>.timeGen();</span><br><span class="line">        <span class="keyword">while</span> (timestamp &lt;= lastTimestamp) &#123;</span><br><span class="line">            timestamp = <span class="built_in">this</span>.timeGen();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="title function_">timeGen</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 获取 maxWorkerId</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getMaxWorkerId</span><span class="params">(<span class="type">long</span> datacenterId, <span class="type">long</span> maxWorkerId)</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">mpid</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        mpid.append(datacenterId);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> ManagementFactory.getRuntimeMXBean().getName();</span><br><span class="line">        <span class="keyword">if</span> (!name.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * GET jvmPid</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            mpid.append(name.split(<span class="string">&quot;@&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * MAC + PID 的 hashcode 获取16个低位</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> (mpid.toString().hashCode() &amp; <span class="number">0xffff</span>) % (maxWorkerId + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 数据标识id部分</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getDatacenterId</span><span class="params">(<span class="type">long</span> maxDatacenterId)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">ip</span> <span class="operator">=</span> InetAddress.getLocalHost();</span><br><span class="line">            <span class="type">NetworkInterface</span> <span class="variable">network</span> <span class="operator">=</span> NetworkInterface.getByInetAddress(ip);</span><br><span class="line">            <span class="keyword">if</span> (network == <span class="literal">null</span>) &#123;</span><br><span class="line">                id = <span class="number">1L</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">byte</span>[] mac = network.getHardwareAddress();</span><br><span class="line">                id = ((<span class="number">0x000000FF</span> &amp; (<span class="type">long</span>) mac[mac.length - <span class="number">1</span>])</span><br><span class="line">                        | (<span class="number">0x0000FF00</span> &amp; (((<span class="type">long</span>) mac[mac.length - <span class="number">2</span>]) &lt;&lt; <span class="number">8</span>))) &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                id = id % (maxDatacenterId + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot; getDatacenterId: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snowflake </tag>
            
            <tag> 自增ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本中以管理员权限执行命令</title>
      <link href="/2019/03/29/bat%E8%84%9A%E6%9C%AC%E4%B8%AD%E4%BB%A5%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/03/29/bat%E8%84%9A%E6%9C%AC%E4%B8%AD%E4%BB%A5%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>在bat脚本文件<code>第一行</code>加上下面命令：</p><blockquote><p>%1 mshta vbscript:CreateObject(“Shell.Application”).ShellExecute(“cmd.exe”,”&#x2F;c %~s0 ::”,””,”runas”,1)(window.close)&amp;&amp;exit</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10开机运行脚本文件</title>
      <link href="/2019/03/29/win10%E5%BC%80%E6%9C%BA%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/"/>
      <url>/2019/03/29/win10%E5%BC%80%E6%9C%BA%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h6 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h6><blockquote><p>有个bat脚本，希望电脑开机时自动执行此脚本</p></blockquote><h6 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h6><p>1、打开电脑目录：<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190329/20190329142339956.png" alt="在这里插入图片描述"><br>2、将需要开机启动就执行的脚本放入此目录下<br>3、重启电脑</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC注解@CrossOrigin解决跨域问题</title>
      <link href="/2019/03/27/SpringMVC%E6%B3%A8%E8%A7%A3@CrossOrigin%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2019/03/27/SpringMVC%E6%B3%A8%E8%A7%A3@CrossOrigin%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一般的，只要网站的【协议名protocol】、【主机host】、【端口号port】这三个中的任意一个不同，网站间的数据请求与传输便构成了跨域调用<br>跨域：浏览同源策略的造成，是浏览器对JavaScript施加的安全限制<br>CORS是一种可以解决跨域问题的技术</p></blockquote><h3 id="SprinMVC通过-CrossOrigin注解解决跨域"><a href="#SprinMVC通过-CrossOrigin注解解决跨域" class="headerlink" title="SprinMVC通过@CrossOrigin注解解决跨域"></a>SprinMVC通过@CrossOrigin注解解决跨域</h3><blockquote><p>在Spring MVC<code>4.2</code>之后推出了<code>@CrossOrigin</code>注解来解决跨域问题，而在4.2之前我们都是通过定义注册<code>过滤器</code>的方式来解决跨域问题的</p></blockquote><p><strong>@CrossOrigin的参数：</strong><br>1、origins：允许可访问的域列表；*表示可以是任何来源<br>2、maxAge：准备响应前的缓存持续的最大时间（单位：秒）</p><p><strong>@CrossOrigin使用在Controller层：</strong><br>1、类上，此类中所有方法启用跨域支持</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启跨域支持</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、方法上，仅此方法启用跨域支持</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启跨域支持</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/findAll&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> userService.findAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>1、注解失效问题：此时Controlle的方法上<code>@RequestMapping</code>注解中需要声明<code>请求方式</code>即增加<code>method=RequestMethod.XXX</code></p><p>2、添加注解后session失效问题：此时对的ajax请求中需要添加<code>xhrFields:&#123;withCredentials:true&#125;</code>（每个ajax中都需要加此属性，以保证session一致）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line"><span class="attr">type</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/user/login&#x27;</span>,</span><br><span class="line"><span class="attr">xhrFields</span>: &#123;<span class="attr">withCredentials</span>: <span class="literal">true</span>&#125;,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">username</span>: username,</span><br><span class="line"><span class="attr">password</span>: password</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">msg</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;登录成功&#x27;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">msg</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求报错！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
            <tag> 跨域 </tag>
            
            <tag> CrossOrigin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win系统查看连接过的WIFI密码</title>
      <link href="/2019/03/26/win%E7%B3%BB%E7%BB%9F%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%9A%84WIFI%E5%AF%86%E7%A0%81/"/>
      <url>/2019/03/26/win%E7%B3%BB%E7%BB%9F%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%9A%84WIFI%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h6 id="1-win-R，输入cmd回车打开cmd窗口"><a href="#1-win-R，输入cmd回车打开cmd窗口" class="headerlink" title="1. win+R，输入cmd回车打开cmd窗口"></a>1. <code>win+R</code>，输入<code>cmd</code>回车打开cmd窗口</h6><h6 id="2-输入下面命令显示电脑连接过的所有WIFI名："><a href="#2-输入下面命令显示电脑连接过的所有WIFI名：" class="headerlink" title="2. 输入下面命令显示电脑连接过的所有WIFI名："></a>2. 输入下面命令显示电脑连接过的所有WIFI名：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netsh wlan show profiles</span><br></pre></td></tr></table></figure><blockquote><p>在cmd中鼠标右键是粘贴</p></blockquote><h6 id="3-输入下面命令查看WIFI密码："><a href="#3-输入下面命令查看WIFI密码：" class="headerlink" title="3. 输入下面命令查看WIFI密码："></a>3. 输入下面命令查看WIFI密码：</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netsh wlan show profile name=&quot;WIFI名&quot; key=clear</span><br></pre></td></tr></table></figure><blockquote><p>“WIFI名称”：使用英文状态下的双引号</p></blockquote><p>在显示的内容中找到<code>安全设置</code>下的<code>关键内容</code>，即为WIFI密码<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190326/20190326180330559.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> WIFI密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger异常：java.lang.NumberFormatException: For input string: </title>
      <link href="/2019/03/25/Swagger%E5%BC%82%E5%B8%B8%EF%BC%9Ajava-lang-NumberFormatException-For-input-string/"/>
      <url>/2019/03/25/Swagger%E5%BC%82%E5%B8%B8%EF%BC%9Ajava-lang-NumberFormatException-For-input-string/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>项目整合<code>Swagger</code>，访问<code>Swagger</code>首页时后台抛出下面异常：</p><blockquote><p>i.s.m.p.AbstractSerializableParameter    : Illegal DefaultValue null for parameter type integer<br>java.lang.NumberFormatException: For input string: “”</p></blockquote><p>原因好像是说<code>swagger2</code>本身引用的<code>swagger-models-1.5.20.jar</code>有<code>bug</code><br><br/></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>导入下面的<code>maven</code>坐标：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-models<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-models<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传图片415异常：&quot;Content type &#39;multipart/form-data;&#39; .... not supported&quot;</title>
      <link href="/2019/03/25/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87415%E5%BC%82%E5%B8%B8%EF%BC%9AContent%20type%20&#39;multipartform-data;&#39;%20~not%20supported/"/>
      <url>/2019/03/25/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87415%E5%BC%82%E5%B8%B8%EF%BC%9AContent%20type%20&#39;multipartform-data;&#39;%20~not%20supported/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><blockquote><p>上传图片时报错：<br>Content type ‘multipart&#x2F;form-data;boundary&#x3D;—-WebKitFormBoundarypOpfYxCGU6Q4sciA;charset&#x3D;UTF-8’ not supported</p></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190325/20190325101824685.png" alt="在这里插入图片描述"><br>Controller层：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(path = &quot;/uploadRotationImg&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title function_">uploadRotationImg</span><span class="params">(<span class="meta">@RequestParam(&quot;photos&quot;)</span> MultipartFile file, <span class="meta">@RequestBody</span> ImgRotation imgRotation)</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 进行上传操作</span></span><br><span class="line"><span class="keyword">return</span> imgRotationService.uploadRotationImg(file, imgRotation);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// 上传失败</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>去掉<code>@RequestBody</code>注解就行了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(path = &quot;/uploadRotationImg&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title function_">uploadRotationImg</span><span class="params">(<span class="meta">@RequestParam(&quot;photos&quot;)</span> MultipartFile file, ImgRotation imgRotation)</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 进行上传操作</span></span><br><span class="line"><span class="keyword">return</span> imgRotationService.uploadRotationImg(file, imgRotation);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// 上传失败</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 415 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>@RequestParam和@RequestBody</title>
      <link href="/2019/03/22/@RequestParam%E5%92%8C@RequestBody/"/>
      <url>/2019/03/22/@RequestParam%E5%92%8C@RequestBody/</url>
      
        <content type="html"><![CDATA[<h3 id="一、-RequestParam"><a href="#一、-RequestParam" class="headerlink" title="一、@RequestParam"></a>一、@RequestParam</h3><blockquote><p>GET和POST请求传的参数会自动转换赋值到<code>@RequestParam</code>所注解的变量上</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/requestParamDemo&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    用户昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usernick&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/requestParamDemo&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestParamDemo</span><span class="params">(<span class="meta">@RequestParam(value = &quot;username&quot;)</span> String userName, <span class="meta">@RequestParam(value = &quot;usernick&quot;)</span> String userNick)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;username: &quot;</span> + userName);</span><br><span class="line">System.out.println(<span class="string">&quot;usernick: &quot;</span> + userNick);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、-RequestBody"><a href="#二、-RequestBody" class="headerlink" title="二、@RequestBody"></a>二、@RequestBody</h3><blockquote><p><code>@RequestBody</code>注解可以接收<code>json</code>格式的数据，并将其转换成对应的数据类型</p></blockquote><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过ajax发送json数据</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;jack&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;1234&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/requestBodyDemo&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestBodyDemo</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;id: &quot;</span> + user.getId());</span><br><span class="line">System.out.println(<span class="string">&quot;name: &quot;</span> + user.getName());</span><br><span class="line">System.out.println(<span class="string">&quot;password: &quot;</span> + user.getPassword());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RequestParam </tag>
            
            <tag> RequestBody </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中datetime类型的字段与JavaBean对应的类型</title>
      <link href="/2019/03/22/MySQL%E4%B8%ADdatetime%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AD%97%E6%AE%B5%E4%B8%8EJavaBean%E5%AF%B9%E5%BA%94%E7%9A%84%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/03/22/MySQL%E4%B8%ADdatetime%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AD%97%E6%AE%B5%E4%B8%8EJavaBean%E5%AF%B9%E5%BA%94%E7%9A%84%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h6 id="MySQL数据库中时间格式为datetime类型的字段："><a href="#MySQL数据库中时间格式为datetime类型的字段：" class="headerlink" title="MySQL数据库中时间格式为datetime类型的字段："></a>MySQL数据库中时间格式为<code>datetime</code>类型的字段：</h6><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190322/20190322113812741.png" alt="在这里插入图片描述"></p><h6 id="JavaBean中对应字段的类型："><a href="#JavaBean中对应字段的类型：" class="headerlink" title="JavaBean中对应字段的类型："></a>JavaBean中对应字段的类型：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.annotation.DateTimeFormat;</span><br><span class="line"><span class="comment">// 如果到的是sql下的包(java.sql.Date)，get操作时封装的结果为null、put/post操作时会抛415异常</span></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,timezone=&quot;GMT+8&quot;)</span></span><br><span class="line"><span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="meta">@ApiModelProperty(&quot;创建时间，格式：yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Date ctime;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.annotation.DateTimeFormat;</span><br><span class="line"></span><br><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,timezone=&quot;GMT+8&quot;)</span></span><br><span class="line"><span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="meta">@ApiModelProperty(&quot;创建时间，格式：yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String ctime;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> datetime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot中MyBatis属性映射之开启驼峰命名</title>
      <link href="/2019/03/20/SpringBoot%E4%B8%ADMyBatis%E5%B1%9E%E6%80%A7%E6%98%A0%E5%B0%84%E4%B9%8B%E5%BC%80%E5%90%AF%E9%A9%BC%E5%B3%B0%E5%91%BD%E5%90%8D/"/>
      <url>/2019/03/20/SpringBoot%E4%B8%ADMyBatis%E5%B1%9E%E6%80%A7%E6%98%A0%E5%B0%84%E4%B9%8B%E5%BC%80%E5%90%AF%E9%A9%BC%E5%B3%B0%E5%91%BD%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天使用<code>SpringBoot</code>整合<code>MyBatis</code>开发时，发现从数据库中查询到的结果封装到<code>javabean</code>中，只要表中有<strong>下划线的字段</strong>，就会出现<code>null</code>值</p></blockquote><p>MyBatis默认是属性名和数据库字段名一一对应的，即<br>数据库表列：user_name<br>实体类属性：user_name</p><p>但是java中一般使用驼峰命名<br>数据库表列：user_name<br>实体类属性：userName</p><p>在<code>SpringBoot</code>中，可以通过设置<code>map-underscore-to-camel-case</code>属性为<code>true</code>来开启驼峰功能：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span>  <span class="comment"># 开启驼峰命名</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> 驼峰命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生js修改textarea的值</title>
      <link href="/2019/03/19/%E5%8E%9F%E7%94%9Fjs%E4%BF%AE%E6%94%B9textarea%E7%9A%84%E5%80%BC/"/>
      <url>/2019/03/19/%E5%8E%9F%E7%94%9Fjs%E4%BF%AE%E6%94%B9textarea%E7%9A%84%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置textarea的值</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;goodstext_id&quot;</span>).<span class="property">value</span> = <span class="string">&quot;值&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> textarea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js获取ModelAndView中的数据</title>
      <link href="/2019/03/19/js%E8%8E%B7%E5%8F%96ModelAndView%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/03/19/js%E8%8E%B7%E5%8F%96ModelAndView%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>后台封装：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/findById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line"><span class="comment">// 通过id查询商品</span></span><br><span class="line"><span class="type">Goods</span> <span class="variable">dbgoods</span> <span class="operator">=</span> goodsService.findById(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建ModelAndView对象</span></span><br><span class="line"><span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line"><span class="comment">// 跳转到goods_editor.html页面</span></span><br><span class="line">mv.setViewName(<span class="string">&quot;/goods/goods_editor&quot;</span>);</span><br><span class="line"><span class="comment">// 封装查询结果</span></span><br><span class="line">mv.addObject(<span class="string">&quot;dbgoods&quot;</span>,dbgoods);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><p><strong>前端获取：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"> <span class="comment">// 需要添加 th:inline 才能访问 model 中的属性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;页面加载完成&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取ModelAndView中的dbgoods对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> dbgoods = [[$&#123;dbgoods&#125;]];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 打印</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(dbgoods);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> ModelAndView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot使用 thymeleaf+@RestController 跳转页面</title>
      <link href="/2019/03/19/SpringBoot%E4%BD%BF%E7%94%A8-thymeleaf-RestController-%E8%B7%B3%E8%BD%AC%E9%A1%B5%E9%9D%A2/"/>
      <url>/2019/03/19/SpringBoot%E4%BD%BF%E7%94%A8-thymeleaf-RestController-%E8%B7%B3%E8%BD%AC%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p><code>thymeleaf</code>推荐使用<code>@Controller</code>进行页面跳转<br>如果用<code>@RestController</code>，则可以通过<code>ModelAndView</code>进行页面跳转<br>eg</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跳转到goods_editor.html页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/goodsEditor&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">goodsEditor</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">mv.setViewName(<span class="string">&quot;/goods/goods_editor&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> thymeleaf </tag>
            
            <tag> RestController </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>org.xml.sax.SAXParseException: 元素类型 &quot;link&quot; 必须由匹配的结束标记 &quot;&lt;/link&gt;&quot; 终止</title>
      <link href="/2019/03/19/org-xml-sax-SAXParseException-%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8Blink%E5%BF%85%E9%A1%BB%E7%94%B1%E5%8C%B9%E9%85%8D%E7%9A%84%E7%BB%93%E6%9D%9F%E6%A0%87%E8%AE%B0link%E7%BB%88%E6%AD%A2/"/>
      <url>/2019/03/19/org-xml-sax-SAXParseException-%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8Blink%E5%BF%85%E9%A1%BB%E7%94%B1%E5%8C%B9%E9%85%8D%E7%9A%84%E7%BB%93%E6%9D%9F%E6%A0%87%E8%AE%B0link%E7%BB%88%E6%AD%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p><code>SpringBoot</code>使用<code>thymeleaf</code>模板引擎时报错：</p><blockquote><p>org.xml.sax.SAXParseException: 元素类型 “link” 必须由匹配的结束标记 “&lt;&amp;#47;link&gt;” 终止</p></blockquote><p>or</p><blockquote><p>org.xml.sax.SAXParseException: 元素类型 “meta” 必须由匹配的结束标记 “&lt;&amp;#47;meta&gt;” 终止</p></blockquote><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>解决方法是在<code>pom.xml</code>文件中指定具体的<code>thymeleaf</code>版本具体如下</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--添加下面两项指定thymeleaf的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thymeleaf.version</span>&gt;</span>3.0.2.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过MyBatis向MySQL中插入数据时中文乱码</title>
      <link href="/2019/03/18/%E9%80%9A%E8%BF%87MyBatis%E5%90%91MySQL%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
      <url>/2019/03/18/%E9%80%9A%E8%BF%87MyBatis%E5%90%91MySQL%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p><strong>问题：</strong><br>通过MyBatis向MySQL中插入或更新操作时，中文会显示成<code>???</code></p><p><strong>解决：</strong><br>在配置文件<code>application.yml</code>中连接数据库的地址<code>url</code>后面加上<code>characterEncoding=utf8</code>即可</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">server</span> <span class="comment"># 服务名称</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db?characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment"># 数据库账号</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span> <span class="comment"># 数据库密码</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> MyBatis </tag>
            
            <tag> MySQL </tag>
            
            <tag> 乱码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A component required a bean of type &#39;com.renqijie.dao.SellerMapper&#39; that could not be found.</title>
      <link href="/2019/03/14/A-component-required-a-bean-of-type-com-renqijie-dao-SellerMapper-that-could-not-be-found/"/>
      <url>/2019/03/14/A-component-required-a-bean-of-type-com-renqijie-dao-SellerMapper-that-could-not-be-found/</url>
      
        <content type="html"><![CDATA[<blockquote><p>异常：<br>Description:<br>A component required a bean of type ‘com.renqijie.dao.SellerMapper’ that could not be found.</p></blockquote><p><strong>原因：</strong><br>dao层接口<code>SellerMapper</code>未加注解**&amp;#64;org.apache.ibatis.annotations.Mapper**</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON</title>
      <link href="/2019/03/14/org-springframework-http-converter-HttpMessageNotWritableException-Could-not-write-JSON/"/>
      <url>/2019/03/14/org-springframework-http-converter-HttpMessageNotWritableException-Could-not-write-JSON/</url>
      
        <content type="html"><![CDATA[<p>记一次踩坑经历：<br><code>Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: (was java.lang.NullPointerException); nested exception is com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.renqijie.pojo.vo.IndexBean[&quot;images&quot;]-&gt;java.util.ArrayList[0]-&gt;com.renqijie.pojo.Image[&quot;id&quot;])]</code></p><blockquote><p>原因：<br>JavaBean类<code>Image</code>中有一个属性类型刚开始设置成<code>int</code>类型，生成<code>getter/setter</code>方法后，又将其改成了<code>Integer</code>类型，结果就出现了上述情况</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序用户表wx_user设计</title>
      <link href="/2019/03/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%A8%E6%88%B7%E8%A1%A8wx-user%E8%AE%BE%E8%AE%A1/"/>
      <url>/2019/03/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%A8%E6%88%B7%E8%A1%A8wx-user%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `wx_user` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `openid` <span class="type">varchar</span>(<span class="number">28</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;小程序用户的openid&#x27;</span>,</span><br><span class="line">  `nickname` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">  `avatarurl` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">  `gender` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别  0-男、1-女&#x27;</span>,</span><br><span class="line">  `country` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;所在国家&#x27;</span>,</span><br><span class="line">  `province` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;省份&#x27;</span>,</span><br><span class="line">  `city` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;城市&#x27;</span>,</span><br><span class="line">  `<span class="keyword">language</span>` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;语种&#x27;</span>,</span><br><span class="line">  `ctime` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建/注册时间&#x27;</span>,</span><br><span class="line">  `mobile` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机号码&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;小程序用户表&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看CentOS版本信息</title>
      <link href="/2019/03/12/%E6%9F%A5%E7%9C%8BCentOS%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/"/>
      <url>/2019/03/12/%E6%9F%A5%E7%9C%8BCentOS%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>指令：<code>cat /etc/redhat-release</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CentOS Linux release 7.5.1804 (Core) </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java操作MongoDB之mongodb-driver</title>
      <link href="/2019/02/27/Java%E6%93%8D%E4%BD%9CMongoDB%E4%B9%8Bmongodb-driver/"/>
      <url>/2019/02/27/Java%E6%93%8D%E4%BD%9CMongoDB%E4%B9%8Bmongodb-driver/</url>
      
        <content type="html"><![CDATA[<p><code>mongodb-driver</code>是mongo官方推出的java连接mongoDB的驱动包，相当于JDBC驱动。<br>通过一个入门的案例来了解<code>mongodb-driver</code>的基本使用：</p><h3 id="1、查询全部记录"><a href="#1、查询全部记录" class="headerlink" title="1、查询全部记录"></a>1、查询全部记录</h3><h4 id="1-1、创建工程mongoDemo，引入依赖"><a href="#1-1、创建工程mongoDemo，引入依赖" class="headerlink" title="1.1、创建工程mongoDemo，引入依赖"></a>1.1、创建工程mongoDemo，引入依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongodb-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2、创建测试类"><a href="#1-2、创建测试类" class="headerlink" title="1.2、创建测试类"></a>1.2、创建测试类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MongoDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MongoClient</span>(<span class="string">&quot;192.168.206.128&quot;</span>);</span><br><span class="line">        <span class="comment">// 打开数据库spitdb</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">spitdb</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;spitdb&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取集合</span></span><br><span class="line">        MongoCollection&lt;Document&gt; spit = spitdb.getCollection(<span class="string">&quot;spit&quot;</span>);</span><br><span class="line">        <span class="comment">// 查询记录，获取文档集</span></span><br><span class="line">        FindIterable&lt;Document&gt; documents = spit.find();</span><br><span class="line">        <span class="comment">// 循环遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Document document : documents) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内容：&quot;</span> + document.getString(<span class="string">&quot;content&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;用户ID：&quot;</span> + document.getString(<span class="string">&quot;userid&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;浏览量：&quot;</span> + document.getInteger(<span class="string">&quot;visits&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、条件查询"><a href="#2、条件查询" class="headerlink" title="2、条件查询"></a>2、条件查询</h3><p><code>BasicDBObject</code>对象：表示一个具体的记录，BasicDBObject实现了DBObject，是<code>key/value</code>的数据结构，用起来和HashMap是基本一致的。</p><h4 id="2-1、查询userid为1013的记录"><a href="#2-1、查询userid为1013的记录" class="headerlink" title="2.1、查询userid为1013的记录"></a>2.1、查询userid为1013的记录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MongoDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MongoClient</span>(<span class="string">&quot;192.168.206.128&quot;</span>);</span><br><span class="line">        <span class="comment">// 打开数据库spitdb</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">spitdb</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;spitdb&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取集合</span></span><br><span class="line">        MongoCollection&lt;Document&gt; spit = spitdb.getCollection(<span class="string">&quot;spit&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建查询条件，通过userid进行查询</span></span><br><span class="line">        <span class="type">BasicDBObject</span> <span class="variable">bson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicDBObject</span>(<span class="string">&quot;userid&quot;</span>, <span class="string">&quot;1013&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过userid查询记录获取文档集</span></span><br><span class="line">        FindIterable&lt;Document&gt; documents = spit.find(bson);</span><br><span class="line">        <span class="comment">// 循环遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Document document : documents) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内容：&quot;</span> + document.getString(<span class="string">&quot;content&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;用户ID：&quot;</span> + document.getString(<span class="string">&quot;userid&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;浏览量：&quot;</span> + document.getInteger(<span class="string">&quot;visits&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2、查询浏览量大于1000的记录"><a href="#2-2、查询浏览量大于1000的记录" class="headerlink" title="2.2、查询浏览量大于1000的记录"></a>2.2、查询浏览量大于1000的记录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MongoDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MongoClient</span>(<span class="string">&quot;192.168.206.128&quot;</span>);</span><br><span class="line">        <span class="comment">// 打开数据库spitdb</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">spitdb</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;spitdb&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取集合</span></span><br><span class="line">        MongoCollection&lt;Document&gt; spit = spitdb.getCollection(<span class="string">&quot;spit&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建查询条件，查询visits大于1000的结果</span></span><br><span class="line">        <span class="type">BasicDBObject</span> <span class="variable">bson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicDBObject</span>(<span class="string">&quot;visits&quot;</span>, <span class="keyword">new</span> <span class="title class_">BasicDBObject</span>(<span class="string">&quot;$gt&quot;</span>, <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过userid查询记录获取文档集</span></span><br><span class="line">        FindIterable&lt;Document&gt; documents = spit.find(bson);</span><br><span class="line">        <span class="comment">// 循环遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Document document : documents) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内容：&quot;</span> + document.getString(<span class="string">&quot;content&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;用户ID：&quot;</span> + document.getString(<span class="string">&quot;userid&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;浏览量：&quot;</span> + document.getInteger(<span class="string">&quot;visits&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、插入数据"><a href="#3、插入数据" class="headerlink" title="3、插入数据"></a>3、插入数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MongoDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建连接</span></span><br><span class="line">        <span class="type">MongoClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MongoClient</span>(<span class="string">&quot;192.168.206.128&quot;</span>);</span><br><span class="line">        <span class="comment">// 打开数据库spitdb</span></span><br><span class="line">        <span class="type">MongoDatabase</span> <span class="variable">spitdb</span> <span class="operator">=</span> client.getDatabase(<span class="string">&quot;spitdb&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取集合</span></span><br><span class="line">        MongoCollection&lt;Document&gt; spit = spitdb.getCollection(<span class="string">&quot;spit&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 准备数据</span></span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;content&quot;</span>, <span class="string">&quot;我要吐槽&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;userid&quot;</span>, <span class="string">&quot;9999&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;visits&quot;</span>, <span class="number">123</span>);</span><br><span class="line">        map.put(<span class="string">&quot;publishtime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>(map);</span><br><span class="line">        <span class="comment">// 插入一条数据</span></span><br><span class="line">        spit.insertOne(document);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SpringCache进行缓存数据库查询</title>
      <link href="/2019/02/26/%E4%BD%BF%E7%94%A8SpringCache%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/02/26/%E4%BD%BF%E7%94%A8SpringCache%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p>1、在SpringBoot的启动类上添加注解<code>@EnableCaching</code>，开启SpringCache缓存支持</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 开启SpringCache缓存支持</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GatheringApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(GatheringApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、在service的方法上添加对应的注解</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 使用SpringCache进行缓存数据库查询</span></span><br><span class="line"><span class="meta">@Cacheable(value = &quot;gathering&quot;, key = &quot;#id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Gathering <span class="title function_">findById</span><span class="params">(String id)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> gatheringDao.findById(id).get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> gathering</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 修改数据库数据后需要删除redis中的缓存</span></span><br><span class="line"><span class="meta">@CacheEvict(value = &quot;gathering&quot;, key = &quot;#gathering.id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Gathering gathering)</span> &#123;</span><br><span class="line">gatheringDao.save(gathering);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 删除数据库数据后需要删除redis中的缓存</span></span><br><span class="line"><span class="meta">@CacheEvict(value = &quot;gathering&quot;, key = &quot;#id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">gatheringDao.deleteById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
            <tag> SpringCache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL:WARN: Establishing SSL connection without server&#39;s identity verification is not recommended.</title>
      <link href="/2019/02/26/MYSQL-WARN-Establishing-SSL-connection-without-server-s-identity-verification-is-not-recommended/"/>
      <url>/2019/02/26/MYSQL-WARN-Establishing-SSL-connection-without-server-s-identity-verification-is-not-recommended/</url>
      
        <content type="html"><![CDATA[<p>连接MySQL数据库时抛出警告：<br><code>Tue Feb 26 17:38:27 CST 2019 WARN: Establishing SSL connection without server&#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&#39;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &#39;false&#39;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</code><br>这是Mysql数据库的SSL连接问题，提示警告不建议使用没有带服务器身份验证的SSL连接，是在MYSQL5.5.45+, 5.6.26+ and 5.7.6+版本中才有的这个问题</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>在配置文件application.yml中连接数据库的<code>url</code>后添加<code>useSSL=false</code>即可</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">spring</span></span><br><span class="line">  <span class="attr">datasource:</span>  </span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.206.128:3306/tensquare_article?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">....</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringDataRedis常用方法</title>
      <link href="/2019/02/26/SpringDataRedis%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2019/02/26/SpringDataRedis%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 向redis里存入数据和设置缓存时间</span></span><br><span class="line">stringRedisTemplate.opsForValue().set(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="number">60</span> * <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key获取缓存中的val</span></span><br><span class="line">stringRedisTemplate.opsForValue().get(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// val做-1操作</span></span><br><span class="line">stringRedisTemplate.boundValueOps(<span class="string">&quot;test&quot;</span>).increment(-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// val +1</span></span><br><span class="line">stringRedisTemplate.boundValueOps(<span class="string">&quot;test&quot;</span>).increment(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key获取过期时间</span></span><br><span class="line">stringRedisTemplate.getExpire(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key获取过期时间并换算成指定单位</span></span><br><span class="line">stringRedisTemplate.getExpire(<span class="string">&quot;test&quot;</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key删除缓存</span></span><br><span class="line">stringRedisTemplate.delete(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查key是否存在，返回boolean值</span></span><br><span class="line">stringRedisTemplate.hasKey(<span class="string">&quot;546545&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置过期时间</span></span><br><span class="line">stringRedisTemplate.expire(<span class="string">&quot;red_123&quot;</span>, <span class="number">1000</span>, TimeUnit.MILLISECONDS);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向指定key中存放set集合</span></span><br><span class="line">stringRedisTemplate.opsForSet().add(<span class="string">&quot;red_123&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key查看集合中是否存在指定数据</span></span><br><span class="line">stringRedisTemplate.opsForSet().isMember(<span class="string">&quot;red_123&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据key获取set集合</span></span><br><span class="line">stringRedisTemplate.opsForSet().members(<span class="string">&quot;red_123&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringDataRedis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合Redis进行缓存数据库查询</title>
      <link href="/2019/02/26/SpringBoot%E6%95%B4%E5%90%88Redis%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/02/26/SpringBoot%E6%95%B4%E5%90%88Redis%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p>1、导入redis的启动器</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--redis启动器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、在yml配置文件中配置redis连接信息</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.206</span><span class="number">.128</span></span><br></pre></td></tr></table></figure><p>3、在service中通过RedisTemplate操作redis，使用redis进行缓存数据库查询</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Article <span class="title function_">findById</span><span class="params">(String id)</span> &#123;</span><br><span class="line"><span class="comment">// 从redis缓存中提取数据</span></span><br><span class="line"><span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> (Article) redisTemplate.opsForValue().get(<span class="string">&quot;article_&quot;</span> + id);</span><br><span class="line"><span class="comment">// 如果缓存中没有，则从数据库中查询并放入缓存中</span></span><br><span class="line"><span class="keyword">if</span>(article == <span class="literal">null</span>)&#123;</span><br><span class="line">article = articleDao.findById(id).get();</span><br><span class="line">redisTemplate.opsForValue().set(<span class="string">&quot;article_&quot;</span> + id, article);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回从redis缓存中获得的数据</span></span><br><span class="line"><span class="keyword">return</span> article;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、对数据库进行删除或修改后删除redis中的缓存</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> article</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Article article)</span> &#123;</span><br><span class="line"><span class="comment">// 删除redis中的缓存</span></span><br><span class="line">redisTemplate.delete(<span class="string">&quot;article_&quot;</span> + article.getId());</span><br><span class="line"><span class="comment">// 修改操作</span></span><br><span class="line">articleDao.save(article);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">(String id)</span> &#123;</span><br><span class="line"><span class="comment">// 删除redis缓存数据</span></span><br><span class="line">redisTemplate.delete(<span class="string">&quot;article_&quot;</span> + id);</span><br><span class="line"><span class="comment">// 删除操作</span></span><br><span class="line">articleDao.deleteById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、缓存过期处理</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置缓存过期时间为1天</span></span><br><span class="line">redisTemplate.opsForValue().set(<span class="string">&quot;article_&quot;</span> + id, article, <span class="number">1</span>, TimeUnit.DAYS);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Redis </tag>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Spring Data JPA报错：javax.persistence.TransactionRequiredException: Executing an update/delete query</title>
      <link href="/2019/02/26/%E4%BD%BF%E7%94%A8Spring-Data-JPA%E6%8A%A5%E9%94%99%EF%BC%9Ajavax-persistence-TransactionRequiredException-Executing-an-update-delete-query/"/>
      <url>/2019/02/26/%E4%BD%BF%E7%94%A8Spring-Data-JPA%E6%8A%A5%E9%94%99%EF%BC%9Ajavax-persistence-TransactionRequiredException-Executing-an-update-delete-query/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Caused by: javax.persistence.TransactionRequiredException: Executing an update/delete query</span><br><span class="line">at org.hibernate.query.internal.AbstractProducedQuery.executeUpdate(AbstractProducedQuery.java:1496)</span><br></pre></td></tr></table></figure><p>1、 报错原因：SpringData JPA事务导致的异常<br>2、解决：在Service层添加注解<code>@Transactional</code>进行事务管理<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190226/20190226115939325.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> JPA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器重启后，Docker安装的mysql怎么重启？</title>
      <link href="/2019/02/26/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E5%90%AF%E5%90%8E%EF%BC%8CDocker%E5%AE%89%E8%A3%85%E7%9A%84mysql%E6%80%8E%E4%B9%88%E9%87%8D%E5%90%AF%EF%BC%9F/"/>
      <url>/2019/02/26/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E5%90%AF%E5%90%8E%EF%BC%8CDocker%E5%AE%89%E8%A3%85%E7%9A%84mysql%E6%80%8E%E4%B9%88%E9%87%8D%E5%90%AF%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>1、重启Docker</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@pinyoyougou-docker ~]# sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>2、列出Docker中创建的容器</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@pinyoyougou-docker ~]# docker ps -a</span><br></pre></td></tr></table></figure><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190226/2019022608493286.png" alt="在这里插入图片描述"></p><p>3、启动mysql</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@pinyoyougou-docker ~]# docker restart 3815a718c8b5</span><br></pre></td></tr></table></figure><p>4、查看是否启动成功</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@pinyoyougou-docker ~]# docker ps</span><br></pre></td></tr></table></figure><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190226/20190226085103514.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA开启Run Dashboard的配置</title>
      <link href="/2019/02/25/IDEA%E5%BC%80%E5%90%AFRun%20Dashboard%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/02/25/IDEA%E5%BC%80%E5%90%AFRun%20Dashboard%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>Run Dashboard面板：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190225/20190225094527956.png" alt="在这里插入图片描述"><br>IDEA升级到 2017.3.1 版本后，发现找不到Run Dashboard面板了。通过下面步骤教你找回Run Dashboard：</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ul><li><ol><li>找到<code>.idea</code>文件下的<code>workspace.xml</code>，通过<code>Ctrl+F</code>搜索<code>RunDashboard</code></li></ol></li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190225/20190225094806232.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190225/20190225094912778.png" alt="在这里插入图片描述"></p><ul><li><ol start="2"><li>加入如下配置，重启服务，Run Dashboard就自动就弹出来了</li></ol></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;configurationTypes&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;SpringBootApplicationConfigurationType&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>最终配置如下：最终配置如下：</li></ol></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">&quot;RunDashboard&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;configurationTypes&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;SpringBootApplicationConfigurationType&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ruleStates&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RuleState</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ConfigurationTypeDashboardGroupingRule&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RuleState</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RuleState</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;StatusDashboardGroupingRule&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RuleState</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;contentProportion&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.20013662&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> IDEA </tag>
            
            <tag> RunDashboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中List集合去重的几种方式</title>
      <link href="/2019/02/19/Java%E4%B8%ADList%E9%9B%86%E5%90%88%E5%8E%BB%E9%87%8D%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/02/19/Java%E4%B8%ADList%E9%9B%86%E5%90%88%E5%8E%BB%E9%87%8D%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>准备数据：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 准备数据</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">list.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;a&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="1-利用HashSet去重"><a href="#1-利用HashSet去重" class="headerlink" title="1. 利用HashSet去重"></a>1. 利用HashSet去重</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 利用list中的元素创建HashSet集合，此时set中进行了去重操作</span></span><br><span class="line"><span class="type">HashSet</span> <span class="variable">set</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>(list);</span><br><span class="line"><span class="comment">// 清空list集合</span></span><br><span class="line">list.clear();</span><br><span class="line"><span class="comment">// 将去重后的元素重新添加到list中</span></span><br><span class="line">list.addAll(set);</span><br></pre></td></tr></table></figure><h3 id="2-通过List的contains-方法去重"><a href="#2-通过List的contains-方法去重" class="headerlink" title="2. 通过List的contains()方法去重"></a>2. 通过List的contains()方法去重</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个新的list集合，用于存储去重后的元素</span></span><br><span class="line"><span class="type">List</span> <span class="variable">listTemp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"><span class="comment">// 遍历list集合</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line"><span class="comment">// 判断listTemp集合中是否包含list中的元素</span></span><br><span class="line"><span class="keyword">if</span> (!listTemp.contains(list.get(i))) &#123;</span><br><span class="line"><span class="comment">// 将未包含的元素添加进listTemp集合中</span></span><br><span class="line">listTemp.add(list.get(i));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-循环List进行去重"><a href="#3-循环List进行去重" class="headerlink" title="3. 循环List进行去重"></a>3. 循环List进行去重</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从list中索引为0开始往后遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size() - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 从list中索引为 list.size()-1 开始往前遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> list.size() - <span class="number">1</span>; j &gt; i; j--) &#123;</span><br><span class="line"><span class="comment">// 进行比较</span></span><br><span class="line"><span class="keyword">if</span> (list.get(j).equals(list.get(i))) &#123;</span><br><span class="line"><span class="comment">// 去重</span></span><br><span class="line">list.remove(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭迅雷更新到新版本的提示</title>
      <link href="/2019/01/17/%E5%85%B3%E9%97%AD%E8%BF%85%E9%9B%B7%E6%9B%B4%E6%96%B0%E5%88%B0%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84%E6%8F%90%E7%A4%BA/"/>
      <url>/2019/01/17/%E5%85%B3%E9%97%AD%E8%BF%85%E9%9B%B7%E6%9B%B4%E6%96%B0%E5%88%B0%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84%E6%8F%90%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>每次打开迅雷都会自动检查是否是最新版本，如果不是最新版本，迅雷会一直重复弹窗弹出<strong>更新到新版本</strong>的提示：<img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190117/20190117081555322.png" alt="在这里插入图片描述"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>简介：迅雷提示升级是因为每次迅雷主程序启动时都会同时启动一个叫<code>XLLiveUD.exe</code>的程序，这个程序会检查更新，所以如果不想让他检查更新，就只需要把他替换掉就可以了（因为如果删除它，每次迅雷启动时都会弹出一个错误对话框，提示找不到文件<code>XLLiveUD.exe</code>）</p><hr><ol><li><p>进入迅雷安装目录，找到<code>XLLiveUD.exe</code>( 可直接在迅雷安装目录中搜索这个文件 )，将其删除。这个就是自动升级的程序，但是删除之后下次开启迅雷会提示该文件丢失。<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190117/20190117082613245.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190117/20190117082638473.png" alt="在这里插入图片描述"></p></li><li><p>在同一个目录找到迅雷执行程序文件<code>Thunder.exe</code>，这个是就是迅雷桌面快捷方式指到的程序也就是迅雷开启程序。然后复制拷贝<code>Thunder.exe</code>副本，然后将副本文件名更改为迅雷更新执行程序名：<strong>XLLiveUD.exe</strong><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190117/20190117082959128.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190117/20190117083307505.gif" alt="在这里插入图片描述"></p></li><li><p>当迅雷程序调用检查更新的执行文件时，实际上相当于重复点击打开迅雷，而迅雷本身不允许重复打开。这样既不会报错也不会造成重复弹屏的问题。从而算是比较完美的解决了<strong>关闭迅雷更新到新版本提示</strong>的问题(❁´◡&#96;❁)<em>✲ﾟ</em></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 迅雷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMind8 破解激活教程（win系统）</title>
      <link href="/2019/01/12/XMind8-%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B%EF%BC%88win%E7%B3%BB%E7%BB%9F%EF%BC%89/"/>
      <url>/2019/01/12/XMind8-%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B%EF%BC%88win%E7%B3%BB%E7%BB%9F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="下载资源"><a href="#下载资源" class="headerlink" title="下载资源"></a>下载资源</h3><table><thead><tr><th>链接</th><th>解压密码</th></tr></thead><tbody><tr><td><a href="http://pan-yz.chaoxing.com/share/info/faf464c5b3683fba">XMind8+破解补丁</a></td><td>xiongtianci.com</td></tr></tbody></table><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><p>安装好XMind8后，接下来进行破解</p><ol><li><p>将<strong>破解补丁</strong>中的<code>XMindCrack.jar</code>拷贝到一个目录下( 注意：这个位置要是一个不会移动的位置，我就复制在XMind的安装目录下 )，如图 ：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112113708377.png" alt="在这里插入图片描述"></p></li><li><p>修改XMind的配置文件<br>打开XMind的配置文件<code>XMind.ini</code>，增加内容：<code>-javaagent:刚刚XMindCrack.jar放置的位置</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112113935256.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112114234667.png" alt="在这里插入图片描述"></p></li><li><p>修改电脑的<code>hosts</code>文件，切断Xmind访问网络<br><code>hosts</code>文件目录：<code>C:\Windows\System32\drivers\etc</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112114632247.png" alt="在这里插入图片描述"><br>添加内容：<code>0.0.0.0 www.xmind.net </code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112114747686.png" alt="在这里插入图片描述"></p></li><li><p>添加序列号<br>启动XMind，在<strong>帮助</strong>里面找到<strong>序列号</strong>，填写序列号<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112115023565.png" alt="在这里插入图片描述"><br>邮箱任意，将<strong>破解补丁</strong>内<strong>序列号.txt</strong>文件中的内容复制到<strong>序列号</strong>中，点击验证<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/20190112115122390.png" alt="在这里插入图片描述"><br>出现下面内容证明激活成功了<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190112/2019011211523843.png" alt="在这里插入图片描述"><br>ヾ(๑╹◡╹)ﾉ”ヾ(●´∀｀●)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> XMind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接Oracle报错 ORA-12638: 身份证明检索失败</title>
      <link href="/2019/01/08/%E8%BF%9E%E6%8E%A5Oracle%E6%8A%A5%E9%94%99-ORA-12638-%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%98%8E%E6%A3%80%E7%B4%A2%E5%A4%B1%E8%B4%A5/"/>
      <url>/2019/01/08/%E8%BF%9E%E6%8E%A5Oracle%E6%8A%A5%E9%94%99-ORA-12638-%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%98%8E%E6%A3%80%E7%B4%A2%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>连接Oracle数据库时报错：<code>ORA-12638: 身份证明检索失败</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190108/20190108091444890.png" alt="在这里插入图片描述"></p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\***&gt;<span class="title">sqlplus</span> <span class="title">scott</span>/<span class="title">tiger</span>@192.168.56.103:1521/<span class="title">orcl</span></span></span><br><span class="line"><span class="function"><span class="title">SQL</span>*<span class="title">Plus</span>: <span class="title">Release</span> 10.2.0.1.0 - <span class="title">Production</span> <span class="title">on</span> 星期二 1月 8 09:13:18 2019</span></span><br><span class="line"><span class="function"><span class="title">Copyright</span> (<span class="title">c</span>) 1982, 2005, <span class="title">Oracle</span>.  <span class="title">All</span> <span class="title">rights</span> <span class="title">reserved</span>.</span></span><br><span class="line"><span class="function"><span class="title">ERROR</span>:</span></span><br><span class="line"><span class="function"><span class="title">ORA</span>-12638: 身份证明检索失败</span></span><br></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>将oracle安装路径<code>oracle\product\10.2.0\db_1\NETWORK\ADMIN\sqlnet.ora</code> 文件修改一下<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20190108/20190108091632740.png" alt="在这里插入图片描述"><br>把文件中的：<br><code>SQLNET.AUTHENTICATION_SERVICES= (NTS)</code><br>修改为：<br><code>SQLNET.AUTHENTICATION_SERVICES= (BEQ,NONE)</code></p><p><strong>修改前：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sqlnet.ora Network Configuration File: C:\oracle\product\10.2.0\db_1\network\admin\sqlnet.ora</span><br><span class="line"># Generated by Oracle configuration tools.</span><br><span class="line"></span><br><span class="line"># This file is actually generated by netca. But if customers choose to </span><br><span class="line"># install &quot;Software Only&quot;, this file wont exist and without the native </span><br><span class="line"># authentication, they will not be able to connect to the database on NT.</span><br><span class="line"></span><br><span class="line">SQLNET.AUTHENTICATION_SERVICES= (NTS)</span><br><span class="line"></span><br><span class="line">NAMES.DIRECTORY_PATH= (TNSNAMES, EZCONNECT)</span><br></pre></td></tr></table></figure><p><strong>修改后：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sqlnet.ora Network Configuration File: C:\oracle\product\10.2.0\db_1\network\admin\sqlnet.ora</span><br><span class="line"># Generated by Oracle configuration tools.</span><br><span class="line"></span><br><span class="line"># This file is actually generated by netca. But if customers choose to </span><br><span class="line"># install &quot;Software Only&quot;, this file wont exist and without the native </span><br><span class="line"># authentication, they will not be able to connect to the database on NT.</span><br><span class="line"></span><br><span class="line">SQLNET.AUTHENTICATION_SERVICES= (BEQ,NONE)</span><br><span class="line"></span><br><span class="line">NAMES.DIRECTORY_PATH= (TNSNAMES, EZCONNECT)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>try和finally中都有return语句，执行哪一个return？</title>
      <link href="/2019/01/07/try%E5%92%8Cfinally%E4%B8%AD%E9%83%BD%E6%9C%89return%E8%AF%AD%E5%8F%A5%EF%BC%8C%E6%89%A7%E8%A1%8C%E5%93%AA%E4%B8%80%E4%B8%AAreturn%EF%BC%9F/"/>
      <url>/2019/01/07/try%E5%92%8Cfinally%E4%B8%AD%E9%83%BD%E6%9C%89return%E8%AF%AD%E5%8F%A5%EF%BC%8C%E6%89%A7%E8%A1%8C%E5%93%AA%E4%B8%80%E4%B8%AAreturn%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>try 中的 return 语句调用的函数先于 finally 中调用的函数执行，也就是说 try 中的 return 语句先执行，finally 语句后执行，但try中的 return 并不是让函数马上返回结果，而是 return 语句执行后，将把返回结果放置进函数栈中，此时函数并不是马上返回，它要执行 finally 语句后才真正开始返回。但此时会出现两种情况：<br>① 如果finally中也有return，则会直接返回finally中的return结果，并终止程序，函数栈中的return不会被完成<br>② 如果finally中没有return，则在执行完finally中的代码之后，会将函数栈中保存的try return的内容返回并终止程序</p><p>注意：</p><blockquote><p>1、不管有没有出现异常，finally块中代码都会执行<br>2、当try和catch中有return时，finally仍然会执行<br>3、finally是在try中return后面的表达式运算后执行的（此时并没有返回运算后的值，而是先把要返回的值保存起来，管finally中的代码怎么样，返回的值都不会改变，仍然是之前保存的值），所以函数返回值是在finally执行前确定的<br>4、finally中最好不要包含return，否则程序会提前退出，返回值不是try或catch中保存的返回值</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>try{ return }finally{}中的return</title>
      <link href="/2019/01/07/try%7Breturn%7Dfinally%7B%7D%E4%B8%AD%E7%9A%84return/"/>
      <url>/2019/01/07/try%7Breturn%7Dfinally%7B%7D%E4%B8%AD%E7%9A%84return/</url>
      
        <content type="html"><![CDATA[<blockquote><p>try 中的 return 语句调用的函数先于 finally 中调用的函数执行，也就是说 return 语句先执行，finally 语句后执行，但 return 并不是让函数马上返回结果，而是 return 语句执行后，将把返回结果放置进函数栈中，此时函数并不是马上返回结果，它要执行 finally 语句后才真正开始返回，，但此时finally块中的代码已经影响不了return返回的值了</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(num());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">num</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            i = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打印结果：1</span><br></pre></td></tr></table></figure><p>返回的是基本数据类型，直接返回值<br><br/></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(num().getI());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Test <span class="title function_">num</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t.setI(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            t.setI(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> i ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getI</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setI</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.i = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打印结果：2</span><br></pre></td></tr></table></figure><p>返回的是对象的引用</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是Java虚拟机？为什么Java“被称作是平台无关的编程语言”？</title>
      <link href="/2019/01/07/%E4%BB%80%E4%B9%88%E6%98%AFJava%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88Java%E2%80%9C%E8%A2%AB%E7%A7%B0%E4%BD%9C%E6%98%AF%E5%B9%B3%E5%8F%B0%E6%97%A0%E5%85%B3%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E2%80%9D%EF%BC%9F/"/>
      <url>/2019/01/07/%E4%BB%80%E4%B9%88%E6%98%AFJava%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88Java%E2%80%9C%E8%A2%AB%E7%A7%B0%E4%BD%9C%E6%98%AF%E5%B9%B3%E5%8F%B0%E6%97%A0%E5%85%B3%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E2%80%9D%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h4 id="一、什么是java虚拟机？"><a href="#一、什么是java虚拟机？" class="headerlink" title="一、什么是java虚拟机？"></a>一、什么是java虚拟机？</h4><p>java虚拟机(Java Virtual Machine 即 JVM)是执行字节码文件(.class)的虚拟机进程。<br>java源程序(.java)被编译器编译成字节码文件(.class)。然后字节码文件，将由java虚拟机，解释成机器码(不同平台的机器码不同)。利用机器码操作硬件和操作系统</p><h4 id="二、为什么java被称为平台无关的编程语言？"><a href="#二、为什么java被称为平台无关的编程语言？" class="headerlink" title="二、为什么java被称为平台无关的编程语言？"></a>二、为什么java被称为平台无关的编程语言？</h4><p>因为不同的平台装有不同的JVM，它们能够将相同的.class文件，解释成不同平台所需要的机器码。正是因为有JVM的存在，java被称为平台无关的编程语言</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL存储引擎</title>
      <link href="/2019/01/07/MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
      <url>/2019/01/07/MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="存储引擎概述"><a href="#存储引擎概述" class="headerlink" title="存储引擎概述"></a>存储引擎概述</h1><p>MySQL中的数据用各种不同的技术存储在文件(或者内存)中。这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。例如，如果你在研究大量的临时数据，你也许需要使用内存MySQL存储引擎。内存存储引擎能够在内存中存储所有的表格数据。又或者，你也许需要一个支持事务处理的数据库(以确保事务处理不成功时数据的回退能力)。这些不同的技术以及配套的相关功能在 MySQL中被称作<strong>存储引擎</strong>(也称作表类型)。<br>MySQL默认配置了许多不同的存储引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的存储引擎，以便在选择如何存储你的信息、如何检索这些信息以及你需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。</p><h1 id="MySQL存储引擎种类"><a href="#MySQL存储引擎种类" class="headerlink" title="MySQL存储引擎种类"></a>MySQL存储引擎种类</h1><table border="1" style="text-align: center;">    <thead>        <tr>            <th>存储引擎</th>            <th>特点</th>        </tr>    </thead>    <tbody>        <tr>            <td><font color="hotpink">InnoDB</td>            <td>5.5版本后MySQL的默认数据库，支持事务和行级锁定，比MyISAM处理速度稍慢</td>        </tr>        <tr>            <td><font color="hotpink">MyISAM</td>            <td>高速引擎，拥有较高的插入，查询速度，但不支持事务</td>        </tr>        <tr>            <td>Memory</td>            <td>内存存储引擎，拥有极高的插入，更新和查询效率。但是会占用和数据量成正比的内存空间。只在内存上保存数据，意味着数据可能会丢失</td>        </tr>        <tr>            <td>Falcon</td>            <td>一种新的存储引擎，支持事物处理，传言可能是InnoDB的替代者</td>        </tr>        <tr>            <td>Archive</td>            <td>将数据压缩后进行存储，非常适合存储大量的独立的，作为历史记录的数据，但是只能进行插入和查询操作</td>        </tr>        <tr>            <td>CSV</td>            <td>CSV 存储引擎是基于 CSV 格式文件存储数据(应用于跨平台的数据交换)</td>        </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何控制多线程执行顺序</title>
      <link href="/2019/01/05/%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/"/>
      <url>/2019/01/05/%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test02</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;thread1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;thread2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Thread</span> <span class="variable">thread3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;thread3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        thread1.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">        thread3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码执行结果：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 线程执行顺序是随机的</span></span><br><span class="line">thread1</span><br><span class="line">thread3</span><br><span class="line">thread2</span><br></pre></td></tr></table></figure><blockquote><p>原因：start()方法只是让子线程处于就绪状态，最终执行状态是不可控的</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案一：使用join控制多线程执行顺序"><a href="#方案一：使用join控制多线程执行顺序" class="headerlink" title="方案一：使用join控制多线程执行顺序"></a>方案一：使用join控制多线程执行顺序</h3><blockquote><p>join()：让主线程等待子线程结束以后才能继续运行</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">thread1.start();</span><br><span class="line">thread1.join();  <span class="comment">// 让主线程放弃cpu执行权，让给子线程执行</span></span><br><span class="line">thread2.start();</span><br><span class="line">thread2.join();</span><br><span class="line">thread3.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thread1</span><br><span class="line">thread2</span><br><span class="line">thread3</span><br></pre></td></tr></table></figure><p>join方法的原理就是调用相应线程的<code>wait</code>方法进行等待操作的，例如A线程中调用了B线程的join方法，则相当于在A线程中调用了B线程的wait方法，当B线程执行完（或者到达等待时间），B线程会自动调用自身的notifyAll( 调用了JVM底层lock.notify_all(thread)方法来唤醒 )方法唤醒A线程，从而达到同步的目的</p><p>jion()源码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">join</span><span class="params">(<span class="type">long</span> millis)</span></span><br><span class="line"><span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line"><span class="type">long</span> <span class="variable">base</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"><span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (millis &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;timeout value is negative&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (millis == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">while</span> (isAlive()) &#123;</span><br><span class="line">wait(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (isAlive()) &#123;</span><br><span class="line"><span class="type">long</span> <span class="variable">delay</span> <span class="operator">=</span> millis - now;</span><br><span class="line"><span class="keyword">if</span> (delay &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">wait(delay);</span><br><span class="line">now = System.currentTimeMillis() - base;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终是调用object的wait方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">wait</span><span class="params">(<span class="type">long</span> timeout)</span> <span class="keyword">throws</span> InterruptedException;</span><br></pre></td></tr></table></figure><p>join()的调用位于main Thread的main()中，所以这里当然就是阻塞main Thread了。所以thread1.join()调用后，main Thread会阻塞起来。</p><h3 id="方案二：利用单线程化线程池-newSingleThreadExecutor-串行执行所有任务"><a href="#方案二：利用单线程化线程池-newSingleThreadExecutor-串行执行所有任务" class="headerlink" title="方案二：利用单线程化线程池(newSingleThreadExecutor)串行执行所有任务"></a>方案二：利用单线程化线程池(newSingleThreadExecutor)串行执行所有任务</h3><p>利用并发包里的<code>Executors</code>的<code>newSingleThreadExecutor()</code>产生一个单线程的线程池，而这个线程池的底层原理就是一个先进先出（FIFO）的队列。代码中<code>executor.submit</code>依次添加了123线程，按照FIFO的特性，执行顺序也就是123的执行结果，从而保证了执行顺序</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newSingleThreadExecutor();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">executorService.submit(thread1);</span><br><span class="line">executorService.submit(thread2);</span><br><span class="line">executorService.submit(thread3);</span><br><span class="line">executorService.shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么 1000==1000 返回为false，而 100==100 会返回为true</title>
      <link href="/2019/01/05/%E4%B8%BA%E4%BB%80%E4%B9%881000==1000%E8%BF%94%E5%9B%9E%E4%B8%BAfalse%EF%BC%8C%E8%80%8C100==100%E4%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%BAtrue/"/>
      <url>/2019/01/05/%E4%B8%BA%E4%BB%80%E4%B9%881000==1000%E8%BF%94%E5%9B%9E%E4%B8%BAfalse%EF%BC%8C%E8%80%8C100==100%E4%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%BAtrue/</url>
      
        <content type="html"><![CDATA[<h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1000</span>, b = <span class="number">1000</span>;</span><br><span class="line">System.out.println(a == b);<span class="comment">//false</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">100</span>, d = <span class="number">100</span>;</span><br><span class="line">System.out.println(c == d);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><blockquote><p>&#x3D;** 运算比较的不是值而是<strong>引用</strong></p></blockquote><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>其实正常情况Integer类型与int是不可能相等的，一个是对象类型（Integer ），一个是基础数据类型（int）。只是Java搞了自动装箱和拆箱机制，会将int转换成Integer，反之亦然。但是转换时正常情况下，装箱与拆箱的对象的内存地址应该是不同的，应该仍然不等才对，但是JVM让对应的<code>-128~127</code>的装箱对象都缓存起来了，这意味着每次装箱在这个范围的，直接从缓存取，不会new，通过这个trick让其相等 但是超出这个范围的默认还是一般原理就不相等了</p></blockquote><p>当我们给一个Integer 对象赋一个int值的时候，会调用Integer类的静态方法valueOf，如果看看valueOf 的源代码就知道发生了什么：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">valueOf</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i</span><br><span class="line">  <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IntegerCache 是Integer 的内部类，其代码如下所示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Cache to support the object identity semantics of autoboxing for values between</span></span><br><span class="line"><span class="comment">     * -128 and 127 (inclusive) as required by JLS.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The cache is initialized on first usage.  The size of the cache</span></span><br><span class="line"><span class="comment">     * may be controlled by the &#123;<span class="doctag">@code</span> -XX:AutoBoxCacheMax=&lt;size&gt;&#125; option.</span></span><br><span class="line"><span class="comment">     * During VM initialization, java.lang.Integer.IntegerCache.high property</span></span><br><span class="line"><span class="comment">     * may be set and saved in the private system properties in the</span></span><br><span class="line"><span class="comment">     * sun.misc.VM class.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">IntegerCache</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> -<span class="number">128</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">127</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">integerCacheHighPropValue</span> <span class="operator">=</span></span><br><span class="line">                sun.misc.VM.getSavedProperty(<span class="string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> parseInt(integerCacheHighPropValue);</span><br><span class="line">                    i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                    <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                    h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line">                    <span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            cache = <span class="keyword">new</span> <span class="title class_">Integer</span>[(high - low) + <span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> low;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> <span class="title class_">Integer</span>(j++);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line">            <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="title function_">IntegerCache</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>简单的说，如果整型字面量的值在<code>-128 ~ 127</code>之间，那么不会new新的Integer对象，而是直接引用常量池中的Integer对象，所以才会出现上面的现象</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMap和HashTable的区别</title>
      <link href="/2019/01/05/HashMap%E5%92%8CHashTable%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/01/05/HashMap%E5%92%8CHashTable%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h4 id="HashMap和HashTable的区别"><a href="#HashMap和HashTable的区别" class="headerlink" title="HashMap和HashTable的区别"></a>HashMap和HashTable的区别</h4><p>HashMap和Hashtable都实现了Map接口，但决定用哪一个之前先要弄清楚它们之间的分别。主要的区别有：线程安全性，同步(synchronization)，以及速度。</p><blockquote><p>HashMap是非线程安全的，HashTable是线程安全的<br>HashMap的键和值都允许有null值存在，而HashTable则不行<br>因为线程安全的问题，HashMap效率比HashTable的要高</p></blockquote><p>1、HashMap几乎可以等价于HashTable，除了HashMap是非synchronized的，并可以接受null(HashMap可以接受为null的键值(key)和值(value)，而HashTable则不行)。<br>2、HashMap是非synchronized，而HashTable是synchronized，这意味着HashTable是线程安全的，多个线程可以共享一个Hashtable；而如果没有正确的同步的话，多个线程是不能共享HashMap的。Java 5提供了ConcurrentHashMap，它是HashTable的替代，比HashTable的扩展性更好。<br>3、另一个区别是HashMap的迭代器(Iterator)是fail-fast迭代器，而HashTable的enumerator迭代器不是fail-fast的。所以当有其它线程改变了HashMap的结构（增加或者移除元素），将会抛出ConcurrentModificationException，但迭代器本身的remove()方法移除元素则不会抛出ConcurrentModificationException异常。但这并不是一个一定发生的行为，要看JVM。这条同样也是Enumeration和Iterator的区别。<br>4、由于Hashtable是线程安全的也是synchronized，所以在单线程环境下它比HashMap要慢。如果你不需要同步，只需要单一线程，那么使用HashMap性能要好过Hashtable。<br>5、HashMap不能保证随着时间的推移Map中的元素次序是不变的。</p><blockquote><p><strong>注意：</strong><br>1、 sychronized意味着在一次仅有一个线程能够更改HashTable。就是说任何线程要更新HashTable时要首先获得同步锁，其它线程要等到同步锁被释放之后才能再次获得同步锁更新HashTable。<br>2、Fail-safe和iterator迭代器相关。如果某个集合对象创建了Iterator或者ListIterator，然后其它的线程试图“结构上”更改集合对象，将会抛出ConcurrentModificationException异常。但其它线程可以通过set()方法更改集合对象是允许的，因为这并没有从“结构上”更改集合。但是假如已经从结构上进行了更改，再调用set()方法，将会抛出IllegalArgumentException异常。<br>3、结构上的更改指的是删除或者插入一个元素，这样会影响到map的结构。</p></blockquote><h4 id="我们能否让HashMap同步？"><a href="#我们能否让HashMap同步？" class="headerlink" title="我们能否让HashMap同步？"></a>我们能否让HashMap同步？</h4><p>HashMap可以通过下面的语句进行同步：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> Collections.synchronizeMap(hashMap);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打印昨天的当前时刻</title>
      <link href="/2019/01/04/%E6%89%93%E5%8D%B0%E6%98%A8%E5%A4%A9%E7%9A%84%E5%BD%93%E5%89%8D%E6%97%B6%E5%88%BB/"/>
      <url>/2019/01/04/%E6%89%93%E5%8D%B0%E6%98%A8%E5%A4%A9%E7%9A%84%E5%BD%93%E5%89%8D%E6%97%B6%E5%88%BB/</url>
      
        <content type="html"><![CDATA[<h4 id="方式一：通过Calendar实现"><a href="#方式一：通过Calendar实现" class="headerlink" title="方式一：通过Calendar实现"></a>方式一：通过Calendar实现</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">cal.add(Calendar.DATE,-<span class="number">1</span>);</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(cal.getTime()));</span><br></pre></td></tr></table></figure><h4 id="方式二：通过Date实现"><a href="#方式二：通过Date实现" class="headerlink" title="方式二：通过Date实现"></a>方式二：通过Date实现</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1天的时间 = 24小时 x 60分钟 x 60秒 x 1000毫秒 单位是L</span></span><br><span class="line"><span class="type">Date</span> <span class="variable">yesterday</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime() - <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(yesterday));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样将GB2312编码的字符串转换为ISO-8859-1编码的字符串？</title>
      <link href="/2019/01/04/%E6%80%8E%E6%A0%B7%E5%B0%86GB2312%E7%BC%96%E7%A0%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BAISO-8859-1%E7%BC%96%E7%A0%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%9F/"/>
      <url>/2019/01/04/%E6%80%8E%E6%A0%B7%E5%B0%86GB2312%E7%BC%96%E7%A0%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BAISO-8859-1%E7%BC%96%E7%A0%81%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>使用的函数：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">String</span><span class="params">(<span class="type">byte</span> bytes[], String charsetName)</span></span><br><span class="line">            <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line"><span class="built_in">this</span>(bytes, <span class="number">0</span>, bytes.length, charsetName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;你好&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(s1.getBytes(<span class="string">&quot;GB2312&quot;</span>), <span class="string">&quot;ISO-8859-1&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis中 # 和 $ 的区别？</title>
      <link href="/2019/01/03/MyBatis%E4%B8%AD#%E5%92%8C$%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2019/01/03/MyBatis%E4%B8%AD#%E5%92%8C$%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>#相当于对数据加上双引号，$相当于直接显示数据</p></blockquote><ol><li>&amp;#35;将传入的数据都当成一个<strong>字符串</strong>，会对自动传入的数据<strong>加一个双引号</strong>。如：order by &amp;#35;user_id&amp;#35;，如果传入的值是111，那么解析成sq 时的值为：order by “111”；如果传入的值是id，则解析成的sql为：order by “id”</li><li>&amp;#36;将传入的数据直接显示生成在sql中。如：order by $user_id$，如果传入的值是111，那么解析成sql 时的值为：order by user_id,；如果传入的值是id，则解析成的sql为：order by id</li><li>&amp;#35;方式能够很大程度防止sql 注入</li><li>&amp;#36;方式无法防止sql注入</li><li>&amp;#36;方式一般用于传入数据库对象，例如传入表名</li><li>一般能用&amp;#35;的就别用&amp;#36;</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL中limit的用法</title>
      <link href="/2019/01/03/SQL%E4%B8%ADlimit%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/01/03/SQL%E4%B8%ADlimit%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>limit子句用于限制查询结果返回的数量，常用于分页查询</p></blockquote><p><strong>格式：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tableName limit i,n</span><br><span class="line"># tableName：表名</span><br><span class="line"># i：为查询结果的索引值(默认从<span class="number">0</span>开始)，当i<span class="operator">=</span><span class="number">0</span>时可省略i</span><br><span class="line"># n：为查询结果返回的数量</span><br><span class="line"># i与n之间使用英文逗号&quot;,&quot;隔开</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line">limit n 等同于 limit <span class="number">0</span>,n</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 查询<span class="number">10</span>条数据，索引从<span class="number">0</span>到<span class="number">9</span>，第<span class="number">1</span>条记录到第<span class="number">10</span>条记录</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user limit <span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user limit <span class="number">0</span>,<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"># 查询<span class="number">8</span>条数据，索引从<span class="number">5</span>到<span class="number">12</span>，第<span class="number">6</span>条记录到第<span class="number">13</span>条记录</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user limit <span class="number">5</span>,<span class="number">8</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事务的基本要素（ACID）</title>
      <link href="/2019/01/03/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A6%81%E7%B4%A0%EF%BC%88ACID%EF%BC%89/"/>
      <url>/2019/01/03/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A6%81%E7%B4%A0%EF%BC%88ACID%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>数据库事务(Transanction)正确执行的四个基本要素：<br>1、<strong>原子性（Atomicity）</strong>：事务开始后所有操作，要么全部完成，要么全部不完成，不可能停滞在中间环节。事务执行过程中出错，会回滚（Rollback）到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位<br>2、<strong>一致性（Consistency）</strong>：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到<br>3、<strong>隔离性（Isolation）</strong>：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账<br>4、<strong>持久性（Durability）</strong>：事务完成后，该事务所对数据库所作的更改将被保存到数据库之中，不能回滚</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> MySQL </tag>
            
            <tag> 事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的四种隔离级别</title>
      <link href="/2019/01/03/Mysql%E7%9A%84%E5%9B%9B%E7%A7%8D%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/"/>
      <url>/2019/01/03/Mysql%E7%9A%84%E5%9B%9B%E7%A7%8D%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="一、MySQL事务隔离级别"><a href="#一、MySQL事务隔离级别" class="headerlink" title="一、MySQL事务隔离级别"></a>一、MySQL事务隔离级别</h3><table border="1" style="text-align: center;">    <thead>        <tr>            <th>隔离级别</th>            <th>脏读</th>            <th>不可重复读</th>            <th>幻读</th>        </tr>    </thead>    <tbody>        <tr>            <td>读未提交</td>            <td>是</td>            <td>是</td>            <td>是</td>        </tr>        <tr>            <td>读已提交</td>            <td>否</td>            <td>是</td>            <td>是</td>        </tr>        <tr>            <td>可重复读</td>            <td>否</td>            <td>否</td>            <td>是</td>        </tr>        <tr>            <td>串行化</td>            <td>否</td>            <td>否</td>            <td>否</td>        </tr>    </tbody></table><p>在SQL标准中定义了四种隔离级别，每一种级别都规定了一个事务中所做的修改，哪些是在事务内和事务间可见的，哪些是不可见的。较低级别的隔离通常可以执行更高的并发，系统的开销也更低。</p><p><strong>未提交读（Read uncommitted）</strong>：在未提交读级别，事务中的修改，即使没有提交，对其他事务也都是可见的。事务可以读取未提交的数据，这也被称为脏读（Dirty Read）。这个级别会导致很多问题，从性能上来说，未提交读不会比其他的级别好太多，但是缺乏其他级别的很多好处，在实际应用中一般很少使用。<br><strong>读已提交（Read committed）</strong>：大多数数据库系统的默认隔离级别都是读已提交（但Mysql不是）。读已提交满足隔离性的简单定义：一个事务开始时，只能“看见”已经提交的事务所做的修改。换句话说，一个事务从开始直到提交之前，所做的任何修改对其他事务都是不可见的。这个级别有时候也叫做不可重复读（nonrepeatable read），因为两次执行同样的查询，可能会得到不一样的结果。<br><strong>可重复读（Repeatable read）</strong>：可重复读解决了脏读的问题。该级别保证了在同一个事务中多次读取同样记录的结果是一致的。但是理论上，可重复读隔离级别还是无法解决另外一个幻读（Phantom read）问题。所谓幻读，指的是当某个事务在读取某个范围内的记录时，另外一个事务中又在该范围插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行（Phantom row）。可重复读是MySQL的默认事务隔离级别。<br><strong>可串行化（Serializable）</strong>：可串行化是最高的隔离级别。它通过强制事务串行执行，避免了前面所说的幻读问题。简单来说，可串行化会在读取的每一行数据上都加上锁，所以可能导致大量的超时和锁争用问题。实际应用中也很少用到这个隔离级别，只有在非常需要确保数据的一致性而且可以接受没有并发的情况下，才考虑用该级别。</p><h3 id="二、事务的并发问题"><a href="#二、事务的并发问题" class="headerlink" title="二、事务的并发问题"></a>二、事务的并发问题</h3><p>1、<strong>脏读</strong>：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据</p><p>2、<strong>不可重复读</strong>：事务A多次读取同一数据，事务B在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果不一致。</p><p>3、<strong>幻读</strong>：系统管理员1将数据库中所有学生的成绩从具体分数改为ABCDE等级，但是系统管理员2就在这个时候插入了一条具体分数的记录，当系统管理员1操作结束后发现还有一条记录(2插入的那条)没有改过来，就好像发生了幻觉一样，这就叫幻读。</p><p>小结：不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL面试题</title>
      <link href="/2019/01/02/MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2019/01/02/MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1-主键-超键-候选键-外键"><a href="#1-主键-超键-候选键-外键" class="headerlink" title="1. 主键 超键 候选键 外键"></a>1. 主键 超键 候选键 外键</h1><p><strong>主 键：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。</span><br><span class="line">一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）</span><br></pre></td></tr></table></figure><p><strong>超 键：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在关系中能唯一标识元组的属性集称为关系模式的超键</span><br><span class="line">一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键</span><br><span class="line">超键包含候选键和主键。</span><br></pre></td></tr></table></figure><p><strong>候选键：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">是最小超键，即没有冗余元素的超键。</span><br></pre></td></tr></table></figure><p><strong>外 键：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在一个表中存在的另一个表的主键称此表的外键</span><br></pre></td></tr></table></figure><h1 id="2-数据库事务的四个特性及含义"><a href="#2-数据库事务的四个特性及含义" class="headerlink" title="2.数据库事务的四个特性及含义"></a>2.数据库事务的四个特性及含义</h1><blockquote><p>数据库事务( transanction )正确执行的四个基本要素( ACID )：原子性(Atomicity)、一致性(Correspondence)、隔离性(Isolation)、持久性(Durability)。</p></blockquote><p><strong>原子性</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。</span><br></pre></td></tr></table></figure><p><strong>一致性</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。</span><br></pre></td></tr></table></figure><p><strong>隔离性</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">隔离状态执行事务，使它们好像是系统在给定时间内执行的唯一操作。如果有两个事务，运行在相同的时间内，执行 相同的功能，事务的隔离性将确保每一事务在系统中认为只有该事务在使用系统。这种属性有时称为串行化，为了防止事务操作间的混淆，必须串行化或序列化请求，使得在同一时间仅有一个请求用于同一数据。</span><br></pre></td></tr></table></figure><p><strong>持久性</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。</span><br></pre></td></tr></table></figure><h1 id="3-drop-delete与truncate的区别"><a href="#3-drop-delete与truncate的区别" class="headerlink" title="3.drop,delete与truncate的区别"></a>3.drop,delete与truncate的区别</h1><blockquote><p>drop直接删掉表<br>delete删除表中数据，可以加where字句<br>truncate删除表中数据，再插入时自增长id又从1开始</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、DELETE语句执行删除的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存以便进行回滚操作。TRUNCATE TABLE 则一次性地从表中删除所有的数据并不把单独的删除操作记录记入日志保存，删除的数据是不能恢复的。并且在删除的过程中不会激活与表有关的删除触发器。执行速度快。</span><br><span class="line"></span><br><span class="line">2、表和索引所占空间。当表被TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，而DELETE操作不会减少表或索引所占用的空间。drop语句将表所占用的空间全释放掉。</span><br><span class="line"></span><br><span class="line">3、一般而言，drop &gt; truncate &gt; delete</span><br><span class="line"></span><br><span class="line">4、应用范围。truncate 只能对 table；delete 可以是table和view</span><br><span class="line"></span><br><span class="line">5、truncate 和 DELETE 只删除数据，而DROP则删除整个表（结构和数据）。</span><br><span class="line"></span><br><span class="line">6、truncate与不带where的delete ：只删除数据，而不删除表的结构（定义）drop语句将删除表的结构被依赖的约束（constrain),触发器（trigger)索引（index);依赖于该表的存储过程/函数将被保留，但其状态会变为：invalid。</span><br><span class="line"></span><br><span class="line">7、delete语句为DML（data maintain Language),这个操作会被放到 rollback segment中,事务提交后才生效。如果有相应的 tigger,执行的时候将被触发。</span><br><span class="line"></span><br><span class="line">8、truncate、drop是DLL（data define language),操作立即生效，原数据不放到 rollback segment中，不能回滚</span><br><span class="line"></span><br><span class="line">9、在没有备份情况下，谨慎使用 drop 与 truncate。要删除部分数据行采用delete且注意结合where来约束影响范围。回滚段要足够大。要删除表用drop;若想保留表而将表中数据删除，如果于事务无关，用truncate即可实现。如果和事务有关，或老师想触发trigger,还是用delete。</span><br><span class="line"></span><br><span class="line">10、Truncate table 表名 速度快,而且效率高,因为:</span><br><span class="line">truncate table 在功能上与不带 WHERE 子句的 DELETE 语句相同：二者均删除表中的全部行。但 TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少。DELETE 语句每次删除一行，并在事务日志中为所删除的每行记录一项。TRUNCATE TABLE 通过释放存储表数据所用的数据页来删除数据，并且只在事务日志中记录页的释放。</span><br><span class="line"></span><br><span class="line">11、TRUNCATE TABLE 删除表中的所有行，但表结构及其列、约束、索引等保持不变。新行标识所用的计数值重置为该列的种子。如果想保留标识计数值，请改用 DELETE。如果要删除表定义及其数据，请使用 DROP TABLE 语句。</span><br><span class="line"></span><br><span class="line">12、对于由 FOREIGN KEY 约束引用的表，不能使用 TRUNCATE TABLE，而应使用不带 WHERE 子句的 DELETE 语句。由于 TRUNCATE TABLE 不记录在日志中，所以它不能激活触发器。</span><br></pre></td></tr></table></figure><h1 id="4-索引的工作原理及其种类"><a href="#4-索引的工作原理及其种类" class="headerlink" title="4.索引的工作原理及其种类"></a>4.索引的工作原理及其种类</h1><blockquote><p><strong>数据库索引</strong>：是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。<strong>索引的实现通常使用B树及其变种B+树</strong>。<br>在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是<strong>索引</strong>。</p></blockquote><p>为表设置索引要付出代价的：一是增加了数据库的存储空间，二是在插入和修改数据时要花费较多的时间(因为索引也要随之变动)。</p><p><img src="/img/1546432394934.png" alt="1546432394934"></p><p>图展示了一种可能的索引方式。左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。为了加快Col2的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找在O($log_2n$)的复杂度内获取到相应数据。</p><p>创建索引可以大大提高系统的性能。</p><p>第一，通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。</p><p>第二，可以大大加快数据的检索速度，这也是创建索引的最主要的原因。</p><p>第三，可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。</p><p>第四，在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。</p><p>第五，通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。</p><p>也许会有人要问：增加索引有如此多的优点，为什么不对表中的每一个列创建一个索引呢？因为，增加索引也有许多不利的方面。</p><p>第一，创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。</p><p>第二，索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。</p><p>第三，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。</p><p>索引是建立在数据库表中的某些列的上面。在创建索引的时候，应该考虑在哪些列上可以创建索引，在哪些列上不能创建索引。<strong>一般来说，应该在这些列上创建索引：</strong>在经常需要搜索的列上，可以加快搜索的速度；在作为主键的列上，强制该列的唯一性和组织表中数据的排列结构；在经常用在连接的列上，这些列主要是一些外键，可以加快连接的速度；在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，其指定的范围是连续的；在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间；在经常使用在WHERE子句中的列上面创建索引，加快条件的判断速度。</p><p>同样，对于有些列不应该创建索引。<strong>一般来说，不应该创建索引的的这些列具有下列特点：</strong></p><p>第一，对于那些在查询中很少使用或者参考的列不应该创建索引。这是因为，既然这些列很少使用到，因此有索引或者无索引，并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度和增大了空间需求。</p><p>第二，对于那些只有很少数据值的列也不应该增加索引。这是因为，由于这些列的取值很少，例如人事表的性别列，在查询的结果中，结果集的数据行占了表中数据行的很大比例，即需要在表中搜索的数据行的比例很大。增加索引，并不能明显加快检索速度。</p><p>第三，对于那些定义为text, image和bit数据类型的列不应该增加索引。这是因为，这些列的数据量要么相当大，要么取值很少。</p><p>第四，当修改性能远远大于检索性能时，不应该创建索引。这是因为，<strong>修改性能和检索性能是互相矛盾的</strong>。当增加索引时，会提高检索性能，但是会降低修改性能。当减少索引时，会提高修改性能，降低检索性能。因此，当修改性能远远大于检索性能时，不应该创建索引。</p><p>根据数据库的功能，可以在<a href="http://www.2cto.com/database/">数据库设计</a>器中创建三种索引：<strong>唯一索引、主键索引和聚集索引</strong>。</p><p><strong>唯一索引</strong></p><p>唯一索引是不允许其中任何两行具有相同索引值的索引。</p><p>当现有数据中存在重复的键值时，大多数数据库不允许将新创建的唯一索引与表一起保存。数据库还可能防止添加将在表中创建重复键值的新数据。例如，如果在employee表中职员的姓(lname)上创建了唯一索引，则任何两个员工都不能同姓。 <strong>主键索引</strong> 数据库表经常有一列或列组合，其值唯一标识表中的每一行。该列称为表的主键。 在数据库关系图中为表定义主键将自动创建主键索引，主键索引是唯一索引的特定类型。该索引要求主键中的每个值都唯一。当在查询中使用主键索引时，它还允许对数据的快速访问。 <strong>聚集索引</strong> 在聚集索引中，表中行的物理顺序与键值的逻辑（索引）顺序相同。<strong>一个表只能包含一个聚集索引。</strong></p><p>如果某索引不是聚集索引，则表中行的物理顺序与键值的逻辑顺序不匹配。<strong>与非聚集索引相比，聚集索引通常提供更快的数据访问速度。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Chrome快捷键</title>
      <link href="/2018/12/27/Google-Chrome%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2018/12/27/Google-Chrome%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="标签页和窗口"><a href="#标签页和窗口" class="headerlink" title="标签页和窗口"></a>标签页和窗口</h1><table>    <thead>    <tr>        <th>操作</th>        <th>快捷键</th>    </tr>    </thead>    <tbody>    <tr>        <td>打开新窗口</td>        <td><font color="hotpink">Ctrl + N</font></td>    </tr>    <tr>        <td>在无痕模式下打开新窗口</td>        <td><font color="hotpink">Ctrl + Shift + N</font></td>    </tr>    <tr>        <td>打开新的标签页，并跳转到该标签页</td>        <td><font color="hotpink">Ctrl + T</font></td>    </tr>    <tr>        <td>重新打开最后关闭的标签页，并跳转到该标签页</td>        <td><font color="hotpink">Ctrl + Shift + T</font></td>    </tr>    <tr>        <td>跳转到下一个打开的标签页</td>        <td>Ctrl + Tab 或 Ctrl + PgDn</td>    </tr>    <tr>        <td>跳转到上一个打开的标签页</td>        <td>Ctrl + Shift + Tab 或 Ctrl + PgUp</td>    </tr>    <tr>        <td>跳转到特定标签页</td>        <td>Ctrl + 1 到 Ctrl + 8</td>    </tr>    <tr>        <td>跳转到最后一个标签页</td>        <td>Ctrl + 9</td>    </tr>    <tr>        <td>在当前标签页中打开主页</td>        <td>Alt + Home</td>    </tr>    <tr>        <td>打开当前标签页浏览记录中记录的上一个页面</td>        <td>Alt + 向左箭头键</td>    </tr>    <tr>        <td>打开当前标签页浏览记录中记录的下一个页面</td>        <td>Alt + 向右箭头键</td>    </tr>    <tr>        <td>关闭当前标签页</td>        <td><font color="hotpink">Ctrl + W 或 Ctrl + F4</td>    </tr>    <tr>        <td>关闭所有打开的标签页和浏览器</td>        <td>Ctrl + Shift + W</td>    </tr>    <tr>        <td>最小化当前窗口</td>        <td>Alt + 空格键 + N</td>    </tr>    <tr>        <td>最大化当前窗口</td>        <td>Alt + 空格键 + X</td>    </tr>    <tr>        <td>关闭当前窗口</td>        <td><font color="hotpink">Alt + F4</td>    </tr>    <tr>        <td>退出 Google Chrome</td>        <td>Ctrl + Shift + q</td>    </tr>    </tbody></table><h1 id="Google-Chrome-功能快捷键"><a href="#Google-Chrome-功能快捷键" class="headerlink" title="Google Chrome 功能快捷键"></a>Google Chrome 功能快捷键</h1><table>    <thead>    <tr>        <th>操作</th>        <th>快捷键</th>    </tr>    </thead>    <tbody>    <tr>        <td>打开 Chrome 菜单</td>        <td>Alt + F、Alt + E 或 F10</td>    </tr>    <tr>        <td>显示或隐藏书签栏</td>        <td>Ctrl + Shift + B</td>    </tr>    <tr>        <td>打开书签管理器</td>        <td><font color="hotpink">Ctrl + Shift + O</td>    </tr>    <tr>        <td>在新标签页中打开“历史记录”页</td>        <td>Ctrl + H</td>    </tr>    <tr>        <td>在新标签页中打开“下载内容”页</td>        <td>Ctrl + J</td>    </tr>    <tr>        <td>打开 Chrome 任务管理器</td>        <td>Shift + Esc</td>    </tr>    <tr>        <td>将焦点放置在 Chrome 工具栏中的第一项上</td>        <td>Shift + Alt + T</td>    </tr>    <tr>        <td>在地址栏、书签栏（若显示）和页面内容之间向前切换焦点</td>        <td>F6</td>    </tr>    <tr>        <td>在地址栏、书签栏（若显示）和页面内容之间向后切换焦点</td>        <td>Shift + F6</td>    </tr>    <tr>        <td>打开查找栏搜索当前网页</td>        <td>Ctrl + F 或 F3</td>    </tr>    <tr>        <td>跳转到与查找栏中搜索字词相匹配的下一条内容</td>        <td>Ctrl + G</td>    </tr>    <tr>        <td>跳转到与查找栏中搜索字词相匹配的上一条内容</td>        <td>Ctrl + Shift + G</td>    </tr>    <tr>        <td>打开“开发者工具”</td>        <td>Ctrl + Shift + j 或 F12</td>    </tr>    <tr>        <td>打开“清除浏览数据”选项</td>        <td>Ctrl + Shift + Delete</td>    </tr>    <tr>        <td>在新标签页中打开 Chrome 帮助中心</td>        <td>F1</td>    </tr>    <tr>        <td>使用其他帐号登录或以访客身份浏览</td>        <td>Ctrl + Shift + m</td>    </tr>    <tr>        <td>打开反馈表单</td>        <td>Alt + Shift + i</td>    </tr>    </tbody></table><h1 id="地址栏快捷键"><a href="#地址栏快捷键" class="headerlink" title="地址栏快捷键"></a>地址栏快捷键</h1><table>    <thead>    <tr>        <th>操作</th>        <th>快捷键</th>    </tr>    </thead>    <tbody>    <tr>        <td>使用默认搜索引擎进行搜索</td>        <td>输入搜索字词并按 Enter 键</td>    </tr>    <tr>        <td>使用其他搜索引擎进行搜索</td>        <td>输入搜索引擎名称并按 Tab 键</td>    </tr>    <tr>        <td>为网站名称添加 www. 和 .com，并在当前标签页中打开该网站</td>        <td>输入网站名称并按 Ctrl+Enter</td>    </tr>    <tr>        <td>打开新的标签页并执行 Google 搜索</td>        <td>输入搜索字词并按 Alt+Enter 键</td>    </tr>    <tr>        <td>光标移至地址栏</td>        <td><font color="hotpink">Ctrl+L / Alt+D/F6</font></td>    </tr>    <tr>        <td>地址栏使用搜索</td>        <td>Ctrl+K / Ctrl+E</td>    </tr>    <tr>        <td>从地址栏中移除联想查询内容</td>        <td>按向下箭头键以突出显示相应内容，然后按 Shift+Delete</td>    </tr>    </tbody></table><h1 id="网页快捷键"><a href="#网页快捷键" class="headerlink" title="网页快捷键"></a>网页快捷键</h1><table>    <thead>    <tr>        <th>操作</th>        <th>快捷键</th>    </tr>    </thead>    <tbody>    <tr>        <td>打开选项以打印当前网页</td>        <td>Ctrl + p</td>    </tr>    <tr>        <td>打开选项以保存当前网页</td>        <td>Ctrl + s</td>    </tr>    <tr>        <td>重新加载当前网页</td>        <td>F5 或 Ctrl + r</td>    </tr>    <tr>        <td>重新加载当前网页（忽略缓存的内容）</td>        <td>Shift + F5 或 Ctrl + Shift + r</td>    </tr>    <tr>        <td>停止加载网页</td>        <td>Esc</td>    </tr>    <tr>        <td>浏览下一个可点击项</td>        <td>Tab</td>    </tr>    <tr>        <td>浏览上一个可点击项</td>        <td>Shift + Tab</td>    </tr>    <tr>        <td>使用 Chrome 打开计算机中的文件</td>        <td>按住 Ctrl + o 键并选择文件</td>    </tr>    <tr>        <td>显示当前网页的 HTML 源代码（不可修改）</td>        <td>Ctrl + u</td>    </tr>    <tr>        <td>将当前网页保存为书签</td>        <td>Ctrl + d</td>    </tr>    <tr>        <td>将所有打开的标签页以书签的形式保存在新文件夹中</td>        <td>Ctrl + Shift + d</td>    </tr>    <tr>        <td>开启或关闭全屏模式</td>        <td>F11</td>    </tr>    <tr>        <td>放大网页上的所有内容</td>        <td>Ctrl 和 +</td>    </tr>    <tr>        <td>缩小网页上的所有内容</td>        <td>Ctrl 和 -</td>    </tr>    <tr>        <td>将网页上的所有内容恢复到默认大小</td>        <td>Ctrl + 0</td>    </tr>    <tr>        <td>向下滚动网页，一次一个屏幕</td>        <td>空格键或 PgDn</td>    </tr>    <tr>        <td>向上滚动网页，一次一个屏幕</td>        <td>Shift + 空格键或 PgUp</td>    </tr>    <tr>        <td>转到网页顶部</td>        <td>首页</td>    </tr>    <tr>        <td>转到网页底部</td>        <td>末尾</td>    </tr>    <tr>        <td>在网页上水平滚动</td>        <td>按住 Shift 键并滚动鼠标滚轮</td>    </tr>    <tr>        <td>将光标移到文本字段中的上一个字词前面</td>        <td>Ctrl + 向左箭头键</td>    </tr>    <tr>        <td>将光标移到文本字段中的上一个字词后面</td>        <td>Ctrl + 向右箭头键</td>    </tr>    <tr>        <td>删除文本字段中的上一个字词</td>        <td>Ctrl + Backspace</td>    </tr>    <tr>        <td>将焦点移到通知上</td>        <td>Alt + n</td>    </tr>    <tr>        <td>在通知中允许</td>        <td>Alt + Shift + a</td>    </tr>    <tr>        <td>在通知中拒绝</td>        <td>Alt + Shift + d</td>    </tr>    <tr>        <td>在当前标签页中打开主页</td>        <td>Alt + Home</td>    </tr>    </tbody></table><h1 id="鼠标快捷键"><a href="#鼠标快捷键" class="headerlink" title="鼠标快捷键"></a>鼠标快捷键</h1><table>    <thead>    <tr>        <th>操作</th>        <th>快捷键</th>    </tr>    </thead>    <tbody>    <tr>        <td>在当前标签页中打开链接（仅限鼠标）</td>        <td>将链接拖到标签页中</td>    </tr>    <tr>        <td>在新的后台标签页中打开链接</td>        <td>按住 Ctrl 键的同时点击链接</td>    </tr>    <tr>        <td>打开链接，并跳转到该链接</td>        <td>按住 Ctrl + Shift 键的同时点击链接</td>    </tr>    <tr>        <td>打开链接，并跳转到该链接（仅使用鼠标）</td>        <td>将链接拖到标签栏的空白区域</td>    </tr>    <tr>        <td>在新窗口中打开链接</td>        <td>按住 Shift 键的同时点击链接</td>    </tr>    <tr>        <td>在新窗口中打开标签页（仅使用鼠标）</td>        <td>将标签页拖出标签栏</td>    </tr>    <tr>        <td>将标签页移至当前窗口（仅限鼠标）</td>        <td>将标签页拖到现有窗口中</td>    </tr>    <tr>        <td>将标签页移回其原始位置</td>        <td>拖动标签页的同时按 Esc</td>    </tr>    <tr>        <td>将当前网页保存为书签</td>        <td>将相应网址拖动到书签栏中</td>    </tr>    <tr>        <td>下载链接目标</td>        <td>按住 Alt 键的同时点击链接</td>    </tr>    <tr>        <td>显示浏览记录</td>        <td>右键点击“后退”箭头 返回 或“前进”箭头 下一个，或者左键点击（并按住鼠标左键</td>    </tr>    <tr>        <td>在最大化模式和窗口模式间切换</td>        <td>双击标签栏的空白区域</td>    </tr>    <tr>        <td>放大网页上的所有内容</td>        <td>按住 Ctrl 键的同时向上滚动鼠标滚轮</td>    </tr>    <tr>        <td>缩小网页上的所有内容</td>        <td>按住 Ctrl 键的同时向下滚动鼠标滚轮</td>    </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Chrome </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC 常用注解</title>
      <link href="/2018/12/26/SpringMVC-%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/"/>
      <url>/2018/12/26/SpringMVC-%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="1、-RequestMapping"><a href="#1、-RequestMapping" class="headerlink" title="1、@RequestMapping"></a>1、@RequestMapping</h4><blockquote><p>@RequestMapping：用于处理请求url映射，可以作用于类和方法上</p></blockquote><ul><li><strong>value</strong>：定义request请求的映射地址(默认)</li><li><strong>method</strong>：定义地request址请求的方式，包括【GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE.】默认接受get请求，如果请求方式和定义的方式不一样则请求无法成功</li><li><strong>params</strong>：定义request请求中必须包含的参数值。</li><li><strong>headers</strong>：定义request请求中必须包含某些指定的请求头，如：RequestMapping(value &#x3D; “&#x2F;something”, headers &#x3D; “content-type&#x3D;text&#x2F;*”)说明请求中必须要包含”text&#x2F;html”, “text&#x2F;plain”这中类型的Content-type头，才是一个匹配的请求。</li><li><strong>consumes</strong>：定义请求提交内容的类型。</li><li><strong>produces</strong>：指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回</li></ul><h4 id="2、-RequestParam"><a href="#2、-RequestParam" class="headerlink" title="2、@RequestParam"></a>2、@RequestParam</h4><blockquote><p>用于<code>Controller</code>层，获取请求的参数。类似于：request.getParameter(“name”)</p></blockquote><h4 id="3、-RequestBody"><a href="#3、-RequestBody" class="headerlink" title="3、@RequestBody"></a>3、@RequestBody</h4><blockquote><p>用于<code>Controller</code>层，将请求中的<code>json</code>格式的数据转换成<code>java对象</code></p></blockquote><h4 id="4、-ResponseBody"><a href="#4、-ResponseBody" class="headerlink" title="4、@ResponseBody"></a>4、@ResponseBody</h4><blockquote><p>用于<code>Controller</code>层，将返回的对象转换成<code>json</code>格式</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora侧边栏的大纲视图折叠( win系统 )</title>
      <link href="/2018/12/26/Typora%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%9A%84%E5%A4%A7%E7%BA%B2%E8%A7%86%E5%9B%BE%E6%8A%98%E5%8F%A0-win%E7%B3%BB%E7%BB%9F/"/>
      <url>/2018/12/26/Typora%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%9A%84%E5%A4%A7%E7%BA%B2%E8%A7%86%E5%9B%BE%E6%8A%98%E5%8F%A0-win%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181226/20181226094905721.gif" alt="在这里插入图片描述"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>文件 &amp;rArr; 偏好设置 &amp;rArr; 勾选”侧边栏”<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181226/20181226093929134.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181226/20181226093934973.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181226/20181226101055865.gif" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis中通用Mapper接口以及Example的方法解析</title>
      <link href="/2018/12/25/MyBatis%E4%B8%AD%E9%80%9A%E7%94%A8Mapper%E6%8E%A5%E5%8F%A3%E4%BB%A5%E5%8F%8AExample%E7%9A%84%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/"/>
      <url>/2018/12/25/MyBatis%E4%B8%AD%E9%80%9A%E7%94%A8Mapper%E6%8E%A5%E5%8F%A3%E4%BB%A5%E5%8F%8AExample%E7%9A%84%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="一、通用Mapper中的方法解析"><a href="#一、通用Mapper中的方法解析" class="headerlink" title="一、通用Mapper中的方法解析"></a>一、通用Mapper中的方法解析</h3><table>    <thead>    <tr>        <th>方法</th>        <th>功能说明</th>    </tr>    </thead>    <tbody>    <tr>        <td>int countByExample(UserExample example) thorws SQLException</td>        <td>按条件计数</td>    </tr>    <tr>        <td>int <font color="hotpink">deleteByPrimaryKey</font>(Integer id) thorws SQLException</td>        <td>按主键删除</td>    </tr>    <tr>        <td>int <font color="hotpink">deleteByExample</font>(UserExample example) thorws SQLException</td>        <td>按条件查询</td>    </tr>    <tr>        <td>String/Integer <font color="hotpink">insert</font>(User record) thorws SQLException</td>        <td>插入数据（返回值为ID）</td>    </tr>    <tr>        <td>User <font color="hotpink">selectByPrimaryKey</font>(Integer id) thorws SQLException</td>        <td>按主键查询</td>    </tr>    <tr>        <td>List <font color="hotpink">selectByExample</font>(UserExample example) thorws SQLException</td>        <td>按条件查询</td>    </tr>    <tr>        <td>List selectByExampleWithBLOGs(UserExample example) thorws SQLException</td>        <td>按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生。</td>    </tr>    <tr>        <td>int <font color="hotpink">updateByPrimaryKey</font>(User record) thorws SQLException</td>        <td>按主键更新</td>    </tr>    <tr>        <td>int updateByPrimaryKeySelective(User record) thorws SQLException</td>        <td>按主键更新值不为null的字段</td>    </tr>    <tr>        <td>int <font color="hotpink">updateByExample</font>(User record, UserExample example) thorws SQLException</td>        <td>按条件更新</td>    </tr>    <tr>        <td>int updateByExampleSelective(User record, UserExample example) thorws SQLException</td>        <td>按条件更新值不为null的字段</td>    </tr>    </tbody></table><br/><h3 id="二、Example实例解析"><a href="#二、Example实例解析" class="headerlink" title="二、Example实例解析"></a>二、Example实例解析</h3><p>mybatis的逆向工程中会生成实例及实例对应的example，example用于添加条件，相当where后面的部分 </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line"><span class="type">Example</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Example</span>(JavaBean.class);</span><br><span class="line">Example.<span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br></pre></td></tr></table></figure><table>    <thead>    <tr>        <th>方法</th>        <th>说明</th>    </tr>    </thead>    <tbody>    <tr>        <td>example.setOrderByClause(“字段名 ASC”);</td>        <td>添加升序排列条件，DESC为降序</td>    </tr>    <tr>        <td>example.setDistinct(false)</td>        <td>去除重复，boolean型，true为选择不重复的记录。</td>    </tr>    <tr>        <td>criteria.andXxxIsNull</td>        <td>添加字段xxx为null的条件</td>    </tr>    <tr>        <td>criteria.andXxxIsNotNull</td>        <td>添加字段xxx不为null的条件</td>    </tr>    <tr>        <td>criteria.andXxxEqualTo(value)</td>        <td>添加xxx字段等于value条件</td>    </tr>    <tr>        <td>criteria.andXxxNotEqualTo(value)</td>        <td>添加xxx字段不等于value条件</td>    </tr>    <tr>        <td>criteria.andXxxGreaterThan(value)</td>        <td>添加xxx字段大于value条件</td>    </tr>    <tr>        <td>criteria.andXxxGreaterThanOrEqualTo(value)</td>        <td>添加xxx字段大于等于value条件</td>    </tr>    <tr>        <td>criteria.andXxxLessThan(value)</td>        <td>添加xxx字段小于value条件</td>    </tr>    <tr>        <td>criteria.andXxxLessThanOrEqualTo(value)</td>        <td>添加xxx字段小于等于value条件</td>    </tr>    <tr>        <td>criteria.andXxxIn(List&lt;？&gt;)</td>        <td>添加xxx字段值在List&lt;？&gt;条件</td>    </tr>    <tr>        <td>criteria.andXxxNotIn(List&lt;？&gt;)</td>        <td>添加xxx字段值不在List&lt;？&gt;条件</td>    </tr>    <tr>        <td>criteria.andXxxLike(“%”+value+”%”)</td>        <td>添加xxx字段值为value的模糊查询条件</td>    </tr>    <tr>        <td>criteria.andXxxNotLike(“%”+value+”%”)</td>        <td>添加xxx字段值不为value的模糊查询条件</td>    </tr>    <tr>        <td>criteria.andXxxBetween(value1,value2)</td>        <td>添加xxx字段值在value1和value2之间条件</td>    </tr>    <tr>        <td>criteria.andXxxNotBetween(value1,value2)</td>        <td>添加xxx字段值不在value1和value2之间条件</td>    </tr>    </tbody></table><h3 id="三、使用案例"><a href="#三、使用案例" class="headerlink" title="三、使用案例"></a>三、使用案例</h3><h4 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h4><p>① selectByPrimaryKey() 按主键查询</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：select * from user where id = 100;</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> UserMapper.selectByPrimaryKey(<span class="number">100</span>); </span><br></pre></td></tr></table></figure><p>② selectByExample() 和 selectByExampleWithBLOGs()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：select * from user where username = &#x27;wyw&#x27; </span></span><br><span class="line"><span class="comment">// and  username is null order by username asc,email desc</span></span><br><span class="line"><span class="type">UserExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserExample</span>();</span><br><span class="line"><span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br><span class="line">criteria.andUsernameEqualTo(<span class="string">&quot;wyw&quot;</span>);</span><br><span class="line">criteria.andUsernameIsNull();</span><br><span class="line">example.setOrderByClause(<span class="string">&quot;username asc,email desc&quot;</span>);</span><br><span class="line">List&lt;?&gt;list = XxxMapper.selectByExample(example);</span><br></pre></td></tr></table></figure><h4 id="2-插入数据"><a href="#2-插入数据" class="headerlink" title="2.插入数据"></a>2.插入数据</h4><p>①insert()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：insert into user(ID,username,password,email) values </span></span><br><span class="line"><span class="comment">//(&#x27;dsfgsdfgdsfgds&#x27;,&#x27;jack&#x27;,&#x27;1234&#x27;,&#x27;hello@126.com&#x27;);</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setId(<span class="string">&quot;dsfgsdfgdsfgds&quot;</span>);</span><br><span class="line">user.setUsername(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;1234&quot;</span>)</span><br><span class="line">user.setEmail(<span class="string">&quot;hello@163.com&quot;</span>);</span><br><span class="line">XxxMapper.insert(user);</span><br></pre></td></tr></table></figure><h4 id="3-更新数据"><a href="#3-更新数据" class="headerlink" title="3.更新数据"></a>3.更新数据</h4><p>①updateByPrimaryKey()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：update user set username=&#x27;rose&#x27;, password=&#x27;5678&#x27;, </span></span><br><span class="line"><span class="comment">//email=&#x27;hello@163.com&#x27; where id=&#x27;a01&#x27;</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setId(<span class="string">&quot;a01&quot;</span>);</span><br><span class="line">user.setUsername(<span class="string">&quot;rose&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;5678&quot;</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;hello@163.com&quot;</span>);</span><br><span class="line">XxxMapper.updateByPrimaryKey(user);</span><br></pre></td></tr></table></figure><p>②updateByPrimaryKeySelective()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：update user set password=&#x27;7890&#x27; where id=&#x27;a01&#x27;</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setId(<span class="string">&quot;a01&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;7890&quot;</span>);</span><br><span class="line">XxxMapper.updateByPrimaryKey(user);</span><br></pre></td></tr></table></figure><p>③ updateByExample() 和 updateByExampleSelective()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：update user set password=&#x27;6666&#x27; where username=&#x27;jack&#x27;</span></span><br><span class="line"><span class="type">UserExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserExample</span>();</span><br><span class="line"><span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br><span class="line">criteria.andUsernameEqualTo(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setPassword(<span class="string">&quot;6666&quot;</span>);</span><br><span class="line">XxxMapper.updateByPrimaryKeySelective(user,example);</span><br></pre></td></tr></table></figure><blockquote><p>updateByExample()更新所有的字段，包括字段为null的也更新<br>建议使用 updateByExampleSelective()更新想更新的字段</p></blockquote><h4 id="4-删除数据"><a href="#4-删除数据" class="headerlink" title="4.删除数据"></a>4.删除数据</h4><p>①deleteByPrimaryKey()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：delete from user where id=1</span></span><br><span class="line">XxxMapper.deleteByPrimaryKey(<span class="number">1</span>);  </span><br></pre></td></tr></table></figure><p>②deleteByExample()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：delete from user where username=&#x27;jack&#x27;</span></span><br><span class="line"><span class="type">UserExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserExample</span>();</span><br><span class="line"><span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br><span class="line">criteria.andUsernameEqualTo(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">XxxMapper.deleteByExample(example);</span><br></pre></td></tr></table></figure><h4 id="5-查询数据数量"><a href="#5-查询数据数量" class="headerlink" title="5.查询数据数量"></a>5.查询数据数量</h4><p>①countByExample()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相当于：select count(*) from user where username=&#x27;jack&#x27;</span></span><br><span class="line"><span class="type">UserExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserExample</span>();</span><br><span class="line"><span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br><span class="line">criteria.andUsernameEqualTo(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> XxxMapper.countByExample(example);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象类和接口有什么不同点？</title>
      <link href="/2018/12/25/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%E7%82%B9%EF%BC%9F/"/>
      <url>/2018/12/25/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%E7%82%B9%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<table border="1" style="text-align: center;">    <thead>        <tr>            <th>参数</th>            <th>抽象类</th>            <th>接口</th>        </tr>    </thead>    <tbody>        <tr>            <th>默认的方法实现</th>            <td>它可以有默认的方法实现</td>            <td>接口完全是抽象的。它根本不存在方法的实</td>        </tr>        <tr>            <th>实现</th>            <td>子类使用 <font color="hotpink">extends</font> 关键字来继承抽象类。如果子类不是抽象类的话，它需要提供抽象类中所有声明的方法的实现</td>            <td>子类使用关键字 <font color="hotpink">implements</font> 来实现接口。它需要提供接口中所有声明的方法的实现</td>        </tr>        <tr>            <th>构造器</th>            <td>抽象类可以有构造器</td>            <td>接口不能有构造器</td>        </tr>        <tr>            <th>与正常Java类的区别</th>            <td>除了你不能实例化抽象类之外，它和普通Java 类没有任何区别</td>            <td>接口是完全不同的类型</td>        </tr>        <tr>            <th>访问修饰符</th>            <td>抽象方法可以有 <font color="hotpink">public</font>、<font color="hotpink">protected</font> 和 <font color="hotpink">default</font> 这些修饰符</td>            <td>接口方法默认修饰符是 <font color="hotpink">public</font>。你不可以使用其它修饰符</td>        </tr>        <tr>            <th>main 方法</th>            <td>抽象方法可以有main 方法并且我们可以运行它</td>            <td>接口没有main 方法，因此我们不能运行它</td>        </tr>        <tr>            <th>多继承</th>            <td>抽象方法可以继承一个类和实现多个接口</td>            <td>接口只可以继承一个或多个其它接口</td>        </tr>        <tr>            <th>速度</th>            <td>它比接口速度要快</td>            <td>接口是稍微有点慢的，因为它需要时间去寻找在类中实现的方法</td>        </tr>        <tr>            <th>添加新方法</th>            <td>如果你往抽象类中添加新的方法，你可以给它提供默认的实现。因此你不需要改变你现在的代码</td>            <td>如果你往接口中添加方法，那么你必须改变实现该接口的类</td>        </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题：说下原生jdbc 操作数据库流程？</title>
      <link href="/2018/12/25/%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E8%AF%B4%E4%B8%8B%E5%8E%9F%E7%94%9Fjdbc-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%81%E7%A8%8B%EF%BC%9F/"/>
      <url>/2018/12/25/%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E8%AF%B4%E4%B8%8B%E5%8E%9F%E7%94%9Fjdbc-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%81%E7%A8%8B%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原生的jdbc操作数据库流程：<br>1.注册驱动程序：Class.forName(“com.mysql.jdbc.Driver”);<br>2.使用驱动管理类来获取数据连接对象：conn &#x3D; DriverManager.getConnection(…);<br>3.获取数据库操作对象：Statement stmt &#x3D; conn.createStatement();<br>4.定义操作的SQL语句<br>5.执行SQL：stmt.executeQuery(sql);<br>6.处理结果集：ResultSet，如果SQL前有参数值就设置参数值setXXX()<br>7.关闭对象，回收数据库资源（关闭结果集–&gt;关闭数据库操作对象–&gt;关闭连接）</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCTest</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用JDBC连接并操作mysql数据库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 数据库驱动类名的字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line">        <span class="comment">// 数据库连接串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/jdbctest&quot;</span>;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1、加载数据库驱动（ 成功加载后，会将Driver类的实例注册到DriverManager类中）</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            <span class="comment">// 2、获取数据库连接</span></span><br><span class="line">            conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">            <span class="comment">// 3、获取数据库操作对象</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            <span class="comment">// 4、定义操作的SQL语句</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user where id = 100&quot;</span>;</span><br><span class="line">            <span class="comment">// 5、执行数据库操作</span></span><br><span class="line">            rs = stmt.executeQuery(sql);</span><br><span class="line">            <span class="comment">// 6、获取并操作结果集</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                System.out.println(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7、关闭对象，回收数据库资源</span></span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="literal">null</span>) &#123; <span class="comment">//关闭结果集对象</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (stmt != <span class="literal">null</span>) &#123; <span class="comment">// 关闭数据库操作对象</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="literal">null</span>) &#123; <span class="comment">// 关闭数据库连接对象</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!conn.isClosed()) &#123;</span><br><span class="line">                        conn.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨域问题&amp;cors解决跨域</title>
      <link href="/2018/12/21/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98-cors%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
      <url>/2018/12/21/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98-cors%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h2><blockquote><p>跨域：浏览器对于javascript的同源策略的限制 。</p></blockquote><p>以下情况都属于跨域：</p><table><thead><tr><th>跨域原因说明</th><th>示例</th></tr></thead><tbody><tr><td>域名不同</td><td><code>www.jd.com</code> 与 <code>www.taobao.com</code></td></tr><tr><td>域名相同，端口不同</td><td><code>www.jd.com:8080</code> 与 <code>www.jd.com:8081</code></td></tr><tr><td>二级域名不同</td><td><code>item.jd.com</code> 与 <code>miaosha.jd.com</code></td></tr></tbody></table><p>如果<strong>域名和端口都相同，但是请求路径不同</strong>，不属于跨域，如：</p><ul><li><code>www.jd.com/item</code> </li><li><code>www.jd.com/goods</code></li></ul><p>而我们刚才是从<code>manage.leyou.com</code>去访问<code>api.leyou.com</code>，这属于二级域名不同，跨域了。</p><h2 id="为什么有跨域问题？"><a href="#为什么有跨域问题？" class="headerlink" title="为什么有跨域问题？"></a>为什么有跨域问题？</h2><p>跨域不一定会有跨域问题。</p><p>因为跨域问题是浏览器对于ajax请求的一种安全限制：<strong>一个页面发起的ajax请求，只能是与当前页域名相同的路径</strong>，这能有效的阻止跨站攻击。</p><p>因此：<strong>跨域问题 是针对ajax的一种限制</strong>。</p><p>但是这却给我们的开发带来了不便，而且在实际生产环境中，肯定会有很多台服务器之间交互，地址和端口都可能不同，怎么办？</p><h2 id="解决跨域问题的方案"><a href="#解决跨域问题的方案" class="headerlink" title="解决跨域问题的方案"></a>解决跨域问题的方案</h2><p>目前比较常用的跨域解决方案有3种：</p><ul><li><p>Jsonp<br>最早的解决方案，利用script标签可以跨域的原理实现。<br>限制：</p><ul><li>需要服务的支持</li><li>只能发起GET请求</li></ul></li><li><p>nginx反向代理<br>思路是：利用nginx把跨域反向代理为不跨域，支持各种请求方式<br>缺点：需要在nginx进行额外配置，语义不清晰</p></li><li><p>CORS<br>规范化的跨域请求解决方案，安全可靠。<br>优势：</p><ul><li>在服务端进行控制是否允许跨域，可自定义规则</li><li>支持各种请求方式</li></ul><p>缺点：</p><ul><li>会产生额外的请求</li></ul></li></ul><p>我们这里会采用<strong>cors的跨域方案</strong>。</p><h2 id="cors解决跨域"><a href="#cors解决跨域" class="headerlink" title="cors解决跨域"></a>cors解决跨域</h2><h3 id="1-什么是cors"><a href="#1-什么是cors" class="headerlink" title="1.什么是cors"></a>1.什么是cors</h3><p>CORS是一个W3C标准，全称是”跨域资源共享”（Cross-origin resource sharing）。<br>它允许浏览器向跨源服务器，发出<a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html"><code>XMLHttpRequest</code></a>请求，从而克服了AJAX只能<a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html">同源</a>使用的限制。</p><p>CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。</p><ul><li><p>浏览器端：</p><p>目前，所有浏览器都支持该功能（IE10以下不行）。整个CORS通信过程，都是浏览器自动完成，不需要用户参与。</p></li><li><p>服务端：</p><p>CORS通信与AJAX没有任何差别，因此你不需要改变以前的业务逻辑。只不过，浏览器会在请求中携带一些头信息，我们需要以此判断是否允许其跨域，然后在响应头中加入一些信息即可。这一般通过过滤器完成即可。</p></li></ul><h3 id="2-原理有点复杂"><a href="#2-原理有点复杂" class="headerlink" title="2.原理有点复杂"></a>2.原理有点复杂</h3><p>浏览器会将ajax请求分为两类，其处理方案略有差异：简单请求、特殊请求。</p><h4 id="2-1-简单请求"><a href="#2-1-简单请求" class="headerlink" title="2.1.简单请求"></a>2.1.简单请求</h4><p>只要同时满足以下两大条件，就属于简单请求。：</p><p>（1) 请求方法是以下三种方法之一：</p><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><p>（2）HTTP的头信息不超出以下几种字段：</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type：只限于三个值<code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code></li></ul><p>当浏览器发现发起的ajax请求是简单请求时，会在请求头中携带一个字段：Origin.<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181221/20181221083052688.png" alt="在这里插入图片描述"><br>Origin中会指出当前请求属于哪个域（协议+域名+端口）。服务会根据这个值决定是否允许其跨域。</p><p>如果服务器允许跨域，需要在返回的响应头中携带下面信息：</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br></pre></td></tr></table></figure><ul><li>Access-Control-Allow-Origin：可接受的域，是一个具体域名或者*（代表任意域名）</li><li>Access-Control-Allow-Credentials：是否允许携带cookie，默认情况下，cors不会携带cookie，除非这个值是true</li></ul><blockquote><p>有关cookie：</p></blockquote><p>要想操作cookie，需要满足3个条件：</p><ul><li>服务的响应头中需要携带Access-Control-Allow-Credentials并且为true。</li><li>浏览器发起ajax需要指定withCredentials 为true</li><li>响应头中的Access-Control-Allow-Origin一定不能为*，必须是指定的域名</li></ul><h4 id="2-2-特殊请求"><a href="#2-2-特殊请求" class="headerlink" title="2.2.特殊请求"></a>2.2.特殊请求</h4><p>不符合简单请求的条件，会被浏览器判定为特殊请求,，例如请求方式为PUT。</p><blockquote><p>预检请求</p></blockquote><p>特殊请求会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）。</p><p>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的<code>XMLHttpRequest</code>请求，否则就报错。</p><p>一个“预检”请求的样板：</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">OPTIONS</span> <span class="string">/cors</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Request-Method</span><span class="punctuation">: </span>PUT</span><br><span class="line"><span class="attribute">Access-Control-Request-Headers</span><span class="punctuation">: </span>X-Custom-Header</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>api.leyou.com</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0...</span><br></pre></td></tr></table></figure><p>与简单请求相比，除了Origin以外，多了两个头：</p><ul><li>Access-Control-Request-Method：接下来会用到的请求方式，比如PUT</li><li>Access-Control-Request-Headers：会额外用到的头信息</li></ul><blockquote><p>预检请求的响应</p></blockquote><p>服务的收到预检请求，如果许可跨域，会发出响应：</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 01 Dec 2008 01:15:39 GMT</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache/2.0.61 (Unix)</span><br><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br><span class="line"><span class="attribute">Access-Control-Allow-Methods</span><span class="punctuation">: </span>GET, POST, PUT</span><br><span class="line"><span class="attribute">Access-Control-Allow-Headers</span><span class="punctuation">: </span>X-Custom-Header</span><br><span class="line"><span class="attribute">Access-Control-Max-Age</span><span class="punctuation">: </span>1728000</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Encoding</span><span class="punctuation">: </span>gzip</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br><span class="line"><span class="attribute">Keep-Alive</span><span class="punctuation">: </span>timeout=2, max=100</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>Keep-Alive</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/plain</span><br></pre></td></tr></table></figure><p>除了<code>Access-Control-Allow-Origin</code>和<code>Access-Control-Allow-Credentials</code>以外，这里又额外多出3个头：</p><ul><li>Access-Control-Allow-Methods：允许访问的方式</li><li>Access-Control-Allow-Headers：允许携带的头</li><li>Access-Control-Max-Age：本次许可的有效时长，单位是秒，<strong>过期之前的ajax请求就无需再次进行预检了</strong></li></ul><p>如果浏览器得到上述响应，则认定为可以跨域，后续就跟简单请求的处理是一样的了。</p><h3 id="3-实现非常简单"><a href="#3-实现非常简单" class="headerlink" title="3.实现非常简单"></a>3.实现非常简单</h3><p>虽然原理比较复杂，但是前面说过：</p><ul><li>浏览器端都有浏览器自动完成，我们无需操心</li><li>服务端可以通过拦截器统一实现，不必每次都去进行跨域判定的编写。</li></ul><p>事实上，SpringMVC已经帮我们写好了CORS的跨域过滤器：CorsFilter ,内部已经实现了刚才所讲的判定逻辑，我们直接用就好了。</p><p>在<code>leyou-gateway</code>中编写一个配置类，并且注册CorsFilter：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalCorsConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1.添加CORS配置信息</span></span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        <span class="comment">//1) 允许的域,不要写*，否则cookie就无法使用了</span></span><br><span class="line">        config.addAllowedOrigin(<span class="string">&quot;http://manage.leyou.com&quot;</span>);</span><br><span class="line">        <span class="comment">//2) 是否发送Cookie信息</span></span><br><span class="line">        config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//3) 允许的请求方式</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;OPTIONS&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;HEAD&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;PUT&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;DELETE&quot;</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;PATCH&quot;</span>);</span><br><span class="line">        <span class="comment">// 4）允许的头信息</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加映射路径，我们拦截一切请求</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">configSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        configSource.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.返回新的CorsFilter.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(configSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181221/20181221084136322.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CollectionUtils工具类使用指南</title>
      <link href="/2018/12/20/CollectionUtils%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2018/12/20/CollectionUtils%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>CollectionUtils提供很多对集合的操作方法，常用的方法如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//并集  </span></span><br><span class="line">Collection&lt;String&gt; union = CollectionUtils.union(a, b);  </span><br><span class="line"><span class="comment">//交集  </span></span><br><span class="line">Collection&lt;String&gt; intersection = CollectionUtils.intersection(a, b);  </span><br><span class="line"><span class="comment">//交集的补集  </span></span><br><span class="line">Collection&lt;String&gt; disjunction = CollectionUtils.disjunction(a, b);  </span><br><span class="line"><span class="comment">//集合相减 </span></span><br><span class="line">Collection&lt;String&gt; subtract = CollectionUtils.subtract(a, b);  </span><br><span class="line"><span class="comment">//判断集合是否为空</span></span><br><span class="line"><span class="type">Boolean</span> <span class="variable">boolean</span> <span class="operator">=</span> CollectionUtils.isEmpty(Collection&lt;?&gt; collection);</span><br><span class="line"><span class="comment">//判断集合是否不为空</span></span><br><span class="line"><span class="type">Boolean</span> <span class="variable">boolean</span> <span class="operator">=</span> CollectionUtils.isNotEmpty(Collection&lt;?&gt; collection);</span><br></pre></td></tr></table></figure><h4 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUnion</span><span class="params">()</span>&#123;</span><br><span class="line">    String[] arrayA = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span> &#125;;  </span><br><span class="line">    String[] arrayB = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;B&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;K&quot;</span> &#125;;</span><br><span class="line">    List&lt;String&gt; listA = Arrays.asList(arrayA);</span><br><span class="line">    List&lt;String&gt; listB = Arrays.asList(arrayB);</span><br><span class="line">    <span class="comment">//2个数组取并集 </span></span><br><span class="line">    System.out.println(ArrayUtils.toString(CollectionUtils.union(listA, listB)));</span><br><span class="line">    <span class="comment">//[A, B, C, D, E, F, G, H, K]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIntersection</span><span class="params">()</span>&#123;</span><br><span class="line">    String[] arrayA = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span> &#125;;  </span><br><span class="line">    String[] arrayB = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;B&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;K&quot;</span> &#125;;</span><br><span class="line">    List&lt;String&gt; listA = Arrays.asList(arrayA);</span><br><span class="line">    List&lt;String&gt; listB = Arrays.asList(arrayB);</span><br><span class="line">    <span class="comment">//2个数组取交集 </span></span><br><span class="line">    System.out.println(ArrayUtils.toString(CollectionUtils.intersection(listA, listB)));</span><br><span class="line">    <span class="comment">//[B, D, F]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="交集的补集（析取）"><a href="#交集的补集（析取）" class="headerlink" title="交集的补集（析取）"></a>交集的补集（析取）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDisjunction</span><span class="params">()</span>&#123;</span><br><span class="line">    String[] arrayA = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span> &#125;;  </span><br><span class="line">    String[] arrayB = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;B&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;K&quot;</span> &#125;;</span><br><span class="line">    List&lt;String&gt; listA = Arrays.asList(arrayA);</span><br><span class="line">    List&lt;String&gt; listB = Arrays.asList(arrayB);</span><br><span class="line">    <span class="comment">//2个数组取交集 的补集</span></span><br><span class="line">    System.out.println(ArrayUtils.toString(CollectionUtils.disjunction(listA, listB)));</span><br><span class="line">    <span class="comment">//[A, C, E, G, H, K]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="差集（扣除）"><a href="#差集（扣除）" class="headerlink" title="差集（扣除）"></a>差集（扣除）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSubtract</span><span class="params">()</span>&#123;</span><br><span class="line">    String[] arrayA = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span> &#125;;  </span><br><span class="line">    String[] arrayB = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;B&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;K&quot;</span> &#125;;</span><br><span class="line">    List&lt;String&gt; listA = Arrays.asList(arrayA);</span><br><span class="line">    List&lt;String&gt; listB = Arrays.asList(arrayB);</span><br><span class="line">    <span class="comment">//arrayA扣除arrayB</span></span><br><span class="line">    System.out.println(ArrayUtils.toString(CollectionUtils.subtract(listA, listB)));</span><br><span class="line">    <span class="comment">//[A, C, E]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="集合是否为空"><a href="#集合是否为空" class="headerlink" title="集合是否为空"></a>集合是否为空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIsEmpty</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Girl</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Integer&gt; first = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; second = <span class="literal">null</span>;</span><br><span class="line">    List&lt;Person&gt; boy = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//每个男孩心里都装着一个女孩</span></span><br><span class="line">    boy.add(<span class="keyword">new</span> <span class="title class_">Girl</span>());</span><br><span class="line">    <span class="comment">//判断集合是否为空</span></span><br><span class="line">    System.out.println(CollectionUtils.isEmpty(first));   <span class="comment">//true</span></span><br><span class="line">    System.out.println(CollectionUtils.isEmpty(second));   <span class="comment">//true</span></span><br><span class="line">    System.out.println(CollectionUtils.isEmpty(boy));   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断集合是否不为空</span></span><br><span class="line">    System.out.println(CollectionUtils.isNotEmpty(first));   <span class="comment">//false</span></span><br><span class="line">    System.out.println(CollectionUtils.isNotEmpty(second));   <span class="comment">//false</span></span><br><span class="line">    System.out.println(CollectionUtils.isNotEmpty(boy));   <span class="comment">//true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="集合是否相等"><a href="#集合是否相等" class="headerlink" title="集合是否相等"></a>集合是否相等</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIsEqual</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Girl</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Integer&gt; first = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; second = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    first.add(<span class="number">1</span>);</span><br><span class="line">    first.add(<span class="number">2</span>);</span><br><span class="line">    second.add(<span class="number">2</span>);</span><br><span class="line">    second.add(<span class="number">1</span>);</span><br><span class="line">    <span class="type">Girl</span> <span class="variable">goldGirl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Girl</span>();</span><br><span class="line">    List&lt;Person&gt; boy1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//每个男孩心里都装着一个女孩</span></span><br><span class="line">    boy1.add(<span class="keyword">new</span> <span class="title class_">Girl</span>());</span><br><span class="line">    List&lt;Person&gt; boy2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//每个男孩心里都装着一个女孩</span></span><br><span class="line">    boy2.add(<span class="keyword">new</span> <span class="title class_">Girl</span>());</span><br><span class="line">    <span class="comment">//比较两集合值</span></span><br><span class="line">    System.out.println(CollectionUtils.isEqualCollection(first,second));   <span class="comment">//true</span></span><br><span class="line">    System.out.println(CollectionUtils.isEqualCollection(first,boy1));   <span class="comment">//false</span></span><br><span class="line">    System.out.println(CollectionUtils.isEqualCollection(boy1,boy2));   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    List&lt;Person&gt; boy3 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//每个男孩心里都装着一个女孩</span></span><br><span class="line">    boy3.add(goldGirl);</span><br><span class="line">    List&lt;Person&gt; boy4 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    boy4.add(goldGirl);</span><br><span class="line">    System.out.println(CollectionUtils.isEqualCollection(boy3,boy4));   <span class="comment">//true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不可修改的集合"><a href="#不可修改的集合" class="headerlink" title="不可修改的集合"></a>不可修改的集合</h4><p>我们对c进行操作，s也同样获得了和c相同的内容，这样就可以避免其他人员修改这个s对象。有时候需要对它进行保护，避免返回结果被人修改。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUnmodifiableCollection</span><span class="params">()</span>&#123;</span><br><span class="line">    Collection&lt;String&gt; c = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    Collection&lt;String&gt; s = CollectionUtils.unmodifiableCollection(c);</span><br><span class="line">    c.add(<span class="string">&quot;boy&quot;</span>);</span><br><span class="line">    c.add(<span class="string">&quot;love&quot;</span>);</span><br><span class="line">    c.add(<span class="string">&quot;girl&quot;</span>);</span><br><span class="line">    <span class="comment">//! s.add(&quot;have a error&quot;);</span></span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Collections.unmodifiableCollection可以得到一个集合的镜像，它的返回结果是不可直接被改变，否则会提示错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java.lang.UnsupportedOperationException</span><br><span class="line">at org.apache.commons.collections.collection.UnmodifiableCollection.add(UnmodifiableCollection.java:75)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
            <tag> CollectionUtils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通用Mapper的select(T t)的使用</title>
      <link href="/2018/12/20/%E9%80%9A%E7%94%A8Mapper%E7%9A%84select(T%20t)%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/12/20/%E9%80%9A%E7%94%A8Mapper%E7%9A%84select(T%20t)%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>通用mapper类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CategoryMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;Category&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用select(T t)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Category&gt; <span class="title function_">queryCategoryListByParentId</span><span class="params">(Long pid)</span> &#123;</span><br><span class="line"><span class="comment">// select(T t) 将对象c中的非空字段当作查询的条件参数</span></span><br><span class="line"><span class="type">Category</span> <span class="variable">record</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Category</span>();</span><br><span class="line">record.setParentId(pid);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.categoryMapper.select(record);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>select(T t) 将实例对象t中的非空字段作为条件参数<br>上面实例转换的sql语句：select * from category c where c.pid &#x3D; #{pid}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mapper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用nginx进行反向代理</title>
      <link href="/2018/12/20/%E4%BD%BF%E7%94%A8nginx%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
      <url>/2018/12/20/%E4%BD%BF%E7%94%A8nginx%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是反向代理？"><a href="#什么是反向代理？" class="headerlink" title="什么是反向代理？"></a>什么是反向代理？</h2><ul><li>代理：通过客户机的配置，实现让一台服务器(代理服务器)代理客户机，客户的所有请求都交给代理服务器处理。</li><li>反向代理：用一台服务器，代理真实服务器，用户访问时，不再是访问真实服务器，而是代理服务器。</li></ul><p>nginx可以当做反向代理服务器来使用：</p><ul><li>我们需要提前在nginx中配置好反向代理的规则，不同的请求，交给不同的真实服务器处理</li><li>当请求到达nginx，nginx会根据已经定义的规则进行请求的转发，从而实现路由功能</li></ul><p>利用反向代理，就可以解决我们前面所说的端口问题，如图：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220170949726.png" alt="在这里插入图片描述"></p><h2 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装非常简单，把课前资料提供的nginx直接解压即可，绿色免安装，舒服！<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220171122796.gif" alt="在这里插入图片描述"></p><blockquote><p>下载nginx：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p></blockquote><p>我们在本地安装一台nginx：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220171233798.png" alt="在这里插入图片描述"></p><p>解压后，目录结构：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220171247576.png" alt="在这里插入图片描述"></p><ol><li>conf：配置目录</li><li>contrib：第三方依赖</li><li>html：默认的静态资源目录，类似于tomcat的webapps</li><li>logs：日志目录</li><li>nginx.exe：启动程序。可双击运行，但不建议这么做。</li></ol><h3 id="反向代理配置"><a href="#反向代理配置" class="headerlink" title="反向代理配置"></a>反向代理配置</h3><p>示例：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220171320144.png" alt="在这里插入图片描述"></p><p>nginx中的每个server就是一个反向代理配置，可以有多个server</p><p>完整配置：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  manage.leyou.com;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Server <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://127.0.0.1:9001;</span><br><span class="line"><span class="attribute">proxy_connect_timeout</span> <span class="number">600</span>;</span><br><span class="line"><span class="attribute">proxy_read_timeout</span> <span class="number">600</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  api.leyou.com;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Server <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://127.0.0.1:10010;</span><br><span class="line"><span class="attribute">proxy_connect_timeout</span> <span class="number">600</span>;</span><br><span class="line"><span class="attribute">proxy_read_timeout</span> <span class="number">600</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>nginx可以通过命令行来启动，操作命令：</p><ul><li>启动：<code>start nginx.exe</code></li><li>停止：<code>nginx.exe -s stop</code></li><li>重新加载：<code>nginx.exe -s reload</code></li></ul><p>启动过程会闪烁一下，启动成功后，任务管理器中会有两个nginx进程：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181222113315892.png" alt="在这里插入图片描述"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动nginx，然后用域名访问后台管理系统：<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/2018122017160322.png" alt="在这里插入图片描述"><br>现在实现了域名访问网站了，中间的流程是怎样的呢？<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220171624185.png" alt="在这里插入图片描述"></p><ol><li>浏览器准备发起请求，访问 <code>http://mamage.leyou.com</code>，但需要进行域名解析</li><li>优先进行本地域名解析，因为我们修改了hosts，所以解析成功，得到地址：<code>127.0.0.1</code></li><li>请求被发往解析得到的ip，并且默认使用80端口： <code>http://127.0.0.1:80</code><br>本机的nginx一直监听 <code>80</code> 端口，因此捕获这个请求</li><li>nginx中配置了反向代理规则，将 <code>manage.leyou.com</code> 代理到 <code>127.0.0.1:9001</code>，因此请求被转发</li><li>后台系统的webpack server监听的端口是9001，得到请求并处理，完成后将响应返回到nginx</li><li>nginx将得到的结果返回到浏览器</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10使用Switchhost显示无修改权限</title>
      <link href="/2018/12/20/win10%E4%BD%BF%E7%94%A8Switchhost%E6%98%BE%E7%A4%BA%E6%97%A0%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90/"/>
      <url>/2018/12/20/win10%E4%BD%BF%E7%94%A8Switchhost%E6%98%BE%E7%A4%BA%E6%97%A0%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>使用Switchhost!操作电脑hosts文件时，显示无修改权限，即使使用管理员身份运行Switchhost!也是如此<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220162929593.png" alt="在这里插入图片描述"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li><p>找到<strong>hosts</strong>文件<br> 路径：<code>C:\Windows\System32\drivers\etc</code></p></li><li><p>右键<strong>hosts</strong>，点击<strong>属性</strong></p></li><li><p>取消<strong>常规</strong>中<strong>只读</strong>的勾选</p></li></ol><p>  <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/1586741128557.png" alt="1586741128557"></p><ol start="4"><li><p>选择<strong>安全</strong><br> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/2018122016401089.png" alt="在这里插入图片描述"></p></li><li><p>点击<strong>编辑</strong>，赋予<strong>Users</strong> <code>完全权限</code><br> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220164036629.png" alt="在这里插入图片描述"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA报错：Lombok Requires Annotation Processing</title>
      <link href="/2018/12/20/IDEA%E6%8A%A5%E9%94%99%EF%BC%9ALombok%20Requires%20Annotation%20Processing/"/>
      <url>/2018/12/20/IDEA%E6%8A%A5%E9%94%99%EF%BC%9ALombok%20Requires%20Annotation%20Processing/</url>
      
        <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>Lombok安装完成之后，启动项目时出现 <code>Lombok Requires Annotation Processing</code> 的错误提示<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220161224759.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">16:08Lombok Requires Annotation Processing</span><br><span class="line">Annotation processing seems to be disabled for the project &quot;leyou&quot;.</span><br><span class="line">For the plugin to function correctly, please enable it under</span><br><span class="line">&quot;Settings &gt; Build &gt; Compiler &gt; Annotation Processors&quot;</span><br></pre></td></tr></table></figure><br/><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>依次点 <code>File</code> &amp;rarr; <code>Settings</code> &amp;rarr; <code>Build, Execution, Deploymen</code> &amp;rarr; <code>Annotation Processors</code> 打开编辑页面，勾上 <code>Enable annotation processing</code> 前面的选框，保存重启IDEA即可解决<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181220/20181220162024980.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> IDEA </tag>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中clone()与new的区别？</title>
      <link href="/2018/12/20/Java%E4%B8%ADclone()%E4%B8%8Enew%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2018/12/20/Java%E4%B8%ADclone()%E4%B8%8Enew%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="为什么要使用clone-？"><a href="#为什么要使用clone-？" class="headerlink" title="为什么要使用clone()？"></a>为什么要使用clone()？</h3><p>在实际编程过程中，我们常常要遇到这种情况：有一个对象A，在某一时刻A 中已经包含了一些有效值，此时可能会需要一个和A 完全相同新对象B，并且此后对B 任何改动都不会影响到A 中的值，也就是说，A 与B 是两个独立的对象，但B 的初始值是由A 对象确定的。<br>在Java 语言中，用简单的赋值语句是不能满足这种需求的。要满足这种需求虽然有很多途径，但实现<code>clone()</code>方法是其中最简单，也是最高效的手段<br><br/></p><h3 id="clone-与new的区别"><a href="#clone-与new的区别" class="headerlink" title="clone()与new的区别"></a>clone()与new的区别</h3><ol><li>clone()不会调用构造方法；new会调用构造方法</li><li>clone()更快。clone()能快速创建一个已有对象的副本，即创建对象并且将已有对象中所有属性值克隆；new只能在JVM中申请一个空的内存区域，对象的属性值要通过构造方法赋值</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本数据类型与String之间的转换</title>
      <link href="/2018/12/19/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8EString%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
      <url>/2018/12/19/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8EString%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串转基本数据类型"><a href="#字符串转基本数据类型" class="headerlink" title="字符串转基本数据类型"></a>字符串转基本数据类型</h3><p>调用基本数据类型对应的包装类中的方法parseXXX(String)或valueOf(String)即可返回相应基本类型。<br><br/></p><h3 id="基本数据类型转字符串"><a href="#基本数据类型转字符串" class="headerlink" title="基本数据类型转字符串"></a>基本数据类型转字符串</h3><p>一种方法是将基本数据类型与空字符串（””）连接（+）即可获得其所对应的字符串；另一种方法是调用String<br>类中的valueOf()方法返回相应字符串</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为何short s1=1;是对的，而float f=3.4;是错的？</title>
      <link href="/2018/12/19/%E4%B8%BA%E4%BD%95short%20s1=1;%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%8C%E8%80%8Cfloat%20f=3.4;%E6%98%AF%E9%94%99%E7%9A%84%EF%BC%9F/"/>
      <url>/2018/12/19/%E4%B8%BA%E4%BD%95short%20s1=1;%E6%98%AF%E5%AF%B9%E7%9A%84%EF%BC%8C%E8%80%8Cfloat%20f=3.4;%E6%98%AF%E9%94%99%E7%9A%84%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在Java中，没小数点的默认是<code>int</code> ,有小数点的默认是 <code>double</code></p></blockquote><p>编译器可以自动向上转型，如 int 转成 long 系统自动转换没有问题，因为后者精度更高 ；但如果是向下转型，就需要强制类型转换</p><p>short类型变量的初始化语句，只要不超过short范围( -215 ~ 215-1 )的就可以直接初始化，所以short s1 &#x3D; 1;是对的；<br>而对于小数，默认情况下：<code>float f=3.4;</code>中的小数3.4此时为double类型。此时，等式<code>float f=3.4;</code>左边为float类型，等式右边为double类型，将涉及到强制类型转换，所以<code>float f=3.4;</code>这个写法是错误的，</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6语法指南</title>
      <link href="/2018/12/18/ES6%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/"/>
      <url>/2018/12/18/ES6%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：<a href="http://www.ruanyifeng.com/">阮一峰</a></p><p>链接：<a href="http://es6.ruanyifeng.com/">http://es6.ruanyifeng.com/</a></p></blockquote><h1 id="ES6-语法指南"><a href="#ES6-语法指南" class="headerlink" title="ES6 语法指南"></a>ES6 语法指南</h1><p>后端项目搭建完毕，接下来就是前端页面了。不过在这之前需要一些准备工作。我们需要学习ES6的语法标准。</p><p>什么是ES6？就是ECMAScript第6版标准。</p><h2 id="1-什么是ECMAScript？"><a href="#1-什么是ECMAScript？" class="headerlink" title="1.什么是ECMAScript？"></a>1.什么是ECMAScript？</h2><p>来看下前端的发展历程：</p><blockquote><p>web1.0时代：</p></blockquote><ul><li>最初的网页以HTML为主，是纯静态的网页。网页是只读的，信息流只能从服务的到客户端单向流通。<strong>开发人员也只关心页面的样式和内容</strong>即可。</li></ul><blockquote><p>web2.0时代：</p></blockquote><ul><li>1995年，网景工程师Brendan Eich 花了10天时间设计了JavaScript语言。</li><li>1996年，微软发布了JScript，其实是JavaScript的逆向工程实现。</li><li>1997年，为了统一各种不同script脚本语言，ECMA（欧洲计算机制造商协会）以JavaScript为基础，制定了<code>ECMAscript</code>标准规范。JavaScript和JScript都是<code>ECMAScript</code>的标准实现者，随后各大浏览器厂商纷纷实现了<code>ECMAScript</code>标准。</li></ul><p>所以，ECMAScript是浏览器脚本语言的规范，而各种我们熟知的js语言，如JavaScript则是规范的具体实现。</p><h2 id="2-ECMAScript的快速发展"><a href="#2-ECMAScript的快速发展" class="headerlink" title="2.ECMAScript的快速发展"></a>2.ECMAScript的快速发展</h2><p>而后，ECMAScript就进入了快速发展期。</p><ul><li><p>1998年6月，ECMAScript 2.0 发布。</p></li><li><p>1999年12月，ECMAScript 3.0 发布。这时，ECMAScript 规范本身也相对比较完善和稳定了，但是接下来的事情，就比较悲剧了。</p></li><li><p>2007年10月。。。。ECMAScript 4.0 草案发布。</p><p>这次的新规范，历时颇久，规范的新内容也有了很多争议。在制定ES4的时候，是分成了两个工作组同时工作的。</p><ul><li>一边是以 Adobe, Mozilla, Opera 和 Google为主的 ECMAScript 4 工作组。</li><li>一边是以 Microsoft 和 Yahoo 为主的 ECMAScript 3.1 工作组。</li></ul><p>ECMAScript 4 的很多主张比较激进，改动较大。而 ECMAScript 3.1 则主张小幅更新。最终经过 TC39 的会议，决定将一部分不那么激进的改动保留发布为 ECMAScript 3.1，而ES4的内容，则延续到了后来的ECMAScript5和6版本中</p></li><li><p>2009年12月，ECMAScript 5 发布。</p></li><li><p>2011年6月，ECMAScript 5.1 发布。</p></li><li><p>2015年6月，ECMAScript 6，也就是 ECMAScript 2015 发布了。 并且从 ECMAScript 6 开始，开始采用年号来做版本。即 ECMAScript 2015，就是ECMAScript6。</p></li></ul><h2 id="3-ES5和6的一些新特性"><a href="#3-ES5和6的一些新特性" class="headerlink" title="3.ES5和6的一些新特性"></a>3.ES5和6的一些新特性</h2><p>我们这里只把一些常用的进行学习，更详细的大家参考：<a href="http://es6.ruanyifeng.com/?search=reduce&x=0&y=0#README">阮一峰的ES6教程</a></p><h3 id="3-1-let-和-const-命令"><a href="#3-1-let-和-const-命令" class="headerlink" title="3.1.let 和 const 命令"></a>3.1.let 和 const 命令</h3><blockquote><p>var</p></blockquote><p>之前，js定义变量只有一个关键字：<code>var</code></p><p><code>var</code>有一个问题，就是定义的变量有时会莫名奇妙的成为全局变量。</p><p>例如这样的一段代码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;循环外：&quot;</span> + i)</span><br></pre></td></tr></table></figure><p>你猜下打印的结果是什么？</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526107278999.png" alt="1526107278999"></p><blockquote><p>let</p></blockquote><p><code>let</code>所声明的变量，只在<code>let</code>命令所在的代码块内有效。</p><p>我们把刚才的<code>var</code>改成<code>let</code>试试：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;循环外：&quot;</span> + i)</span><br></pre></td></tr></table></figure><p>结果：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526107347275.png" alt="1526107347275"></p><blockquote><p>const</p></blockquote><p><code>const</code>声明的变量是常量，不能被修改</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526107425000.png" alt="1526107425000"></p><h3 id="3-2-字符串扩展"><a href="#3-2-字符串扩展" class="headerlink" title="3.2.字符串扩展"></a>3.2.字符串扩展</h3><blockquote><p>新的API</p></blockquote><p>ES6为字符串扩展了几个新的API：</p><ul><li><code>includes()</code>：返回布尔值，表示是否找到了参数字符串。</li><li><code>startsWith()</code>：返回布尔值，表示参数字符串是否在原字符串的头部。</li><li><code>endsWith()</code>：返回布尔值，表示参数字符串是否在原字符串的尾部。</li></ul><p>实验一下：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526107640349.png" alt="1526107640349"></p><blockquote><p>字符串模板</p></blockquote><p>ES6中提供了&#96;来作为字符串模板标记。我们可以这么玩：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526108070980.png" alt="1526108070980"></p><p>在两个&#96;之间的部分都会被作为字符串的值，不管你任意换行，甚至加入js脚本</p><p>键盘是的1的左侧，tab的上侧，esc的正下方</p><h3 id="3-3-解构表达式"><a href="#3-3-解构表达式" class="headerlink" title="3.3.解构表达式"></a>3.3.解构表达式</h3><blockquote><p>数组解构</p></blockquote><p>比如有一个数组：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>我想获取其中的值，只能通过角标。ES6可以这样：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> [x,y,z] = arr;<span class="comment">// x，y，z将与arr中的每个位置对应来取值</span></span><br><span class="line"><span class="comment">// 然后打印</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x,y,z);</span><br></pre></td></tr></table></figure><p>结果：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526109778368.png" alt="1526109778368"></p><blockquote><p>对象解构</p></blockquote><p>例如有个person对象：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;jack&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">language</span>: [<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;css&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以这么做：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 解构表达式获取值</span></span><br><span class="line"><span class="keyword">const</span> &#123;name,age,language&#125; = person;</span><br><span class="line"><span class="comment">// 打印</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(language);</span><br></pre></td></tr></table></figure><p>结果：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526109984544.png" alt="1526109984544"></p><p>如过想要用其它变量接收，需要额外指定别名：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526110159450.png" alt="1526110159450"></p><ul><li><code>&#123;name:n&#125;</code>：name是person中的属性名，冒号后面的n是解构后要赋值给的变量。</li></ul><h3 id="3-4-函数优化"><a href="#3-4-函数优化" class="headerlink" title="3.4.函数优化"></a>3.4.函数优化</h3><blockquote><p>函数参数默认值</p></blockquote><p>在ES6以前，我们无法给一个函数参数设置默认值，只能采用变通写法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a , b</span>) &#123;</span><br><span class="line">    <span class="comment">// 判断b是否为空，为空就给默认值1</span></span><br><span class="line">    b = b || <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传一个参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p>现在可以这么写：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a , b = <span class="number">1</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传一个参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><blockquote><p>箭头函数</p></blockquote><p>ES6中定义函数的简写方式：</p><p>一个参数时：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> print = <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 简写为：</span></span><br><span class="line"><span class="keyword">var</span> <span class="title function_">print2</span> = obj =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br></pre></td></tr></table></figure><p>多个参数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两个参数的情况：</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="keyword">function</span> (<span class="params">a , b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 简写为：</span></span><br><span class="line"><span class="keyword">var</span> <span class="title function_">sum2</span> = (<span class="params">a,b</span>) =&gt; a+b;</span><br></pre></td></tr></table></figure><p>代码不止一行，可以用<code>&#123;&#125;</code>括起来</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">sum3</span> = (<span class="params">a,b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对象的函数属性简写</p></blockquote><p>比如一个Person对象，里面有eat方法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">    <span class="comment">// 以前：</span></span><br><span class="line">    <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params">food</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 箭头函数版：</span></span><br><span class="line">    <span class="attr">eat2</span>: <span class="function"><span class="params">food</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food),<span class="comment">// 这里拿不到this</span></span><br><span class="line">    <span class="comment">// 简写版：</span></span><br><span class="line">    <span class="title function_">eat3</span>(<span class="params">food</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>箭头函数结合解构表达式</p></blockquote><p>比如有一个函数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;jack&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">language</span>: [<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;css&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hello</span>(<span class="params">person</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello,&quot;</span> + person.<span class="property">name</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果用箭头函数和解构表达式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">hi</span> = (<span class="params">&#123;name&#125;</span>) =&gt;  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello,&quot;</span> + name);</span><br></pre></td></tr></table></figure><h3 id="3-5-map和reduce"><a href="#3-5-map和reduce" class="headerlink" title="3.5.map和reduce"></a>3.5.map和reduce</h3><p>数组中新增了map和reduce方法。</p><blockquote><p>map</p></blockquote><p><code>map()</code>：接收一个函数，将原数组中的所有元素用这个函数处理后放入新数组返回。</p><p>举例：有一个字符串数组，我们希望转为int数组</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,<span class="string">&#x27;-5&#x27;</span>,<span class="string">&#x27;3&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"></span><br><span class="line">arr = arr.<span class="title function_">map</span>(<span class="function"><span class="params">s</span> =&gt;</span> <span class="built_in">parseInt</span>(s));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><p>  <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526110796839.png" alt="1526110796839"></p><blockquote><p>reduce</p></blockquote><p><code>reduce()</code>：接收一个函数（必须）和一个初始值（可选），该函数接收两个参数：</p><ul><li>第一个参数是上一次reduce处理的结果</li><li>第二个参数是数组中要处理的下一个元素</li></ul><p><code>reduce()</code>会从左到右依次把数组中的元素用reduce处理，并把处理的结果作为下次reduce的第一个参数。如果是第一次，会把前两个元素作为计算参数，或者把用户指定的初始值作为起始参数</p><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const arr = [1,20,-5,3]</span><br></pre></td></tr></table></figure><p>没有初始值：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526111537204.png" alt="1526111537204"></p><p>指定初始值：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526111580742.png" alt="1526111580742"></p><h3 id="3-6-promise"><a href="#3-6-promise" class="headerlink" title="3.6.promise"></a>3.6.promise</h3><p>所谓Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。</p><p>感觉跟java的Future类很像啊，有木有！</p><p>我们可以通过Promise的构造函数来创建Promise对象，并在内部封装一个异步执行的结果。</p><p>语法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">  <span class="comment">// ... 执行异步操作</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="comment">/* 异步操作成功 */</span>)&#123;</span><br><span class="line">    <span class="title function_">resolve</span>(value);<span class="comment">// 调用resolve，代表Promise将返回成功的结果</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">reject</span>(error);<span class="comment">// 调用reject，代表Promise会返回失败结果</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样，在promise中就封装了一段异步执行的结果。</p><p>如果我们想要等待异步执行完成，做一些事情，我们可以通过promise的then方法来实现,语法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">promise.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    <span class="comment">// 异步执行成功后的回调</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果想要处理promise异步执行失败的事件，还可以跟上catch：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">promise.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    <span class="comment">// 异步执行成功后的回调</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="keyword">function</span>(<span class="params">error</span>)&#123;</span><br><span class="line">    <span class="comment">// 异步执行失败后的回调</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const p = new Promise(function (resolve, reject) &#123;</span><br><span class="line">    // 这里我们用定时任务模拟异步</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        const num = Math.random();</span><br><span class="line">        // 随机返回成功或失败</span><br><span class="line">        if (num &lt; 0.5) &#123;</span><br><span class="line">            resolve(&quot;成功！num:&quot; + num)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            reject(&quot;出错了！num:&quot; + num)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, 300)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 调用promise</span><br><span class="line">p.then(function (msg) &#123;</span><br><span class="line">    console.log(msg);</span><br><span class="line">&#125;).catch(function (msg) &#123;</span><br><span class="line">    console.log(msg);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526113115887.png" alt="1526113115887"></p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526113140074.png" alt="1526113140074"></p><h3 id="3-7-set和map（了解）"><a href="#3-7-set和map（了解）" class="headerlink" title="3.7.set和map（了解）"></a>3.7.set和map（了解）</h3><p>ES6提供了Set和Map的数据结构。</p><p>Set，本质与数组类似。不同在于Set中只能保存不同元素，如果元素相同会被忽略。跟java很像吧。</p><p>构造函数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Set构造函数可以接收一个数组或空</span></span><br><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">1</span>);<span class="comment">// [1]</span></span><br><span class="line"><span class="comment">// 接收数组</span></span><br><span class="line"><span class="keyword">let</span> set2 = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>]);<span class="comment">// 得到[2,3,4,5]</span></span><br></pre></td></tr></table></figure><p>普通方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set.add(1);// 添加</span><br><span class="line">set.clear();// 清空</span><br><span class="line">set.delete(2);// 删除指定元素</span><br><span class="line">set.has(2); // 判断是否存在</span><br><span class="line">set.keys();// 返回所有key</span><br><span class="line">set.values();// 返回所有值</span><br><span class="line">set.entries();// 返回键值对集合</span><br><span class="line">// 因为set没有键值对，所有其keys、values、entries方法返回值一样的。</span><br><span class="line">set.size; // 元素个数。是属性，不是方法。</span><br></pre></td></tr></table></figure><p>map，本质是与Object类似的结构。不同在于，Object强制规定key只能是字符串。而Map结构的key可以是任意对象。即：</p><ul><li>object是 &lt;string,object&gt;集合</li><li>map是&lt;object,object&gt;集合</li></ul><p>构造函数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// map接收一个数组，数组中的元素是键值对数组</span></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([</span><br><span class="line">    [<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;key2&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>],</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 或者接收一个set</span></span><br><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([</span><br><span class="line">    [<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;key2&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>],</span><br><span class="line">])</span><br><span class="line"><span class="keyword">const</span> map2 = <span class="keyword">new</span> <span class="title class_">Map</span>(set)</span><br><span class="line"><span class="comment">// 或者其它map</span></span><br><span class="line"><span class="keyword">const</span> map3 = <span class="keyword">new</span> <span class="title class_">Map</span>(map);</span><br></pre></td></tr></table></figure><p>方法：</p><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1526114799767.png" alt="1526114799767"></p><h3 id="3-8-模块化"><a href="#3-8-模块化" class="headerlink" title="3.8.模块化"></a>3.8.模块化</h3><h4 id="3-8-1-什么是模块化"><a href="#3-8-1-什么是模块化" class="headerlink" title="3.8.1.什么是模块化"></a>3.8.1.什么是模块化</h4><p>模块化就是把代码进行拆分，方便重复利用。类似java中的导包：要使用一个包，必须先导包。</p><p>而JS中没有包的概念，换来的是 模块。</p><p>模块功能主要由两个命令构成：<code>export</code>和<code>import</code>。</p><ul><li><code>export</code>命令用于规定模块的对外接口，</li><li><code>import</code>命令用于导入其他模块提供的功能。</li></ul><h4 id="3-8-2-export"><a href="#3-8-2-export" class="headerlink" title="3.8.2.export"></a>3.8.2.export</h4><p>比如我定义一个js文件:hello.js，里面有一个对象：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> util = &#123;</span><br><span class="line">    <span class="title function_">sum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我可以使用export将这个对象导出：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> util = &#123;</span><br><span class="line">    <span class="title function_">sum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> util;</span><br></pre></td></tr></table></figure><p>当然，也可以简写为：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> util = &#123;</span><br><span class="line">    <span class="title function_">sum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>export</code>不仅可以导出对象，一切JS变量都可以导出。比如：基本类型变量、函数、数组、对象。</p><p>当要导出多个值时，还可以简写。比如我有一个文件：user.js：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;jack&quot;</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">21</span></span><br><span class="line"><span class="keyword">export</span> &#123;name,age&#125;</span><br></pre></td></tr></table></figure><blockquote><p>省略名称</p></blockquote><p>上面的导出代码中，都明确指定了导出的变量名，这样其它人在导入使用时就必须准确写出变量名，否则就会出错。</p><p>因此js提供了<code>default</code>关键字，可以对导出的变量名进行省略</p><p>例如：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无需声明对象的名字</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="title function_">sum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，当使用者导入时，可以任意起名字</p><h4 id="3-8-3-import"><a href="#3-8-3-import" class="headerlink" title="3.8.3.import"></a>3.8.3.import</h4><p>使用<code>export</code>命令定义了模块的对外接口以后，其他 JS 文件就可以通过<code>import</code>命令加载这个模块。</p><p>例如我要使用上面导出的util：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入util</span></span><br><span class="line"><span class="keyword">import</span> util <span class="keyword">from</span> <span class="string">&#x27;hello.js&#x27;</span></span><br><span class="line"><span class="comment">// 调用util中的属性</span></span><br><span class="line">util.<span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>要批量导入前面导出的name和age： </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;name, age&#125; <span class="keyword">from</span> <span class="string">&#x27;user.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name + <span class="string">&quot; , 今年&quot;</span>+ age +<span class="string">&quot;岁了&quot;</span>)</span><br></pre></td></tr></table></figure><p>但是上面的代码暂时无法测试，因为浏览器目前还不支持ES6 的导入和导出功能。除非借助于工具，把ES6 的语法进行编译降级到ES5，比如<code>Babel-cli</code>工具</p><p> 我们暂时不做测试，大家了解即可。</p><h3 id="3-9-对象扩展"><a href="#3-9-对象扩展" class="headerlink" title="3.9.对象扩展"></a>3.9.对象扩展</h3><p>ES6给Object拓展了许多新的方法，如：</p><ul><li>keys(obj)：获取对象的所有key形成的数组</li><li>values(obj)：获取对象的所有value形成的数组</li><li>entries(obj)：获取对象的所有key和value形成的二维数组。格式：<code>[[k1,v1],[k2,v2],...]</code></li><li>assian(dest, …src) ：将多个src对象的值 拷贝到 dest中（浅拷贝）。</li></ul><p> <img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181218/1527210872966.png" alt="1527210872966"></p><h3 id="3-10-数组扩展"><a href="#3-10-数组扩展" class="headerlink" title="3.10.数组扩展"></a>3.10.数组扩展</h3><p>ES6给数组新增了许多方法：</p><ul><li>find(callback)：把数组中的元素逐个传递给函数callback执行，如果返回true，则返回该元素</li><li>findIndex(callback)：与find类似，不过返回的是品牌到的元素的索引</li><li>includes（callback）：与find类似，如果匹配到元素，则返回true，代表找到了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntellijIDEA使用时的小技巧</title>
      <link href="/2018/12/17/Intellij%20IDEA%E4%BD%BF%E7%94%A8%E6%97%B6%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2018/12/17/Intellij%20IDEA%E4%BD%BF%E7%94%A8%E6%97%B6%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Inject-language编写JSON字符串"><a href="#使用Inject-language编写JSON字符串" class="headerlink" title="使用Inject language编写JSON字符串"></a>使用Inject language编写JSON字符串</h1><p>如果你使用IDEA在编写JSON字符串的时候，然后要一个一个<code>\</code>去转义双引号的话，就实在太不应该了，又烦又容易出错。在IDEA可以使用<code>Inject language</code>帮我们自动转义双引号</p><ol><li><pre><code>在双引号内 `Alt+回车`，选择`Inject language or reference`，然后回车</code></pre><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217181824340.png" alt="在这里插入图片描述"></li><li>输入 <strong>json</strong>，在列表中选择 json组件，回车<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217181753821.png" alt="在这里插入图片描述"></li><li>选择完后，在双引号内<code>Alt+回车</code>，选择<code>Edit JSON Fragment</code>，回车<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217181854421.png" alt="在这里插入图片描述"></li><li>此时将弹出编辑JSON文件的视图了<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217182000472.png" alt="在这里插入图片描述"></li></ol><p>可以看到IDEA确实帮我们自动转义双引号了。如果要退出编辑JSON信息的视图，只需要使用<code>Ctrl+F4</code>快捷键即可。</p><hr><h1 id="Structure展示一个类的所有方法"><a href="#Structure展示一个类的所有方法" class="headerlink" title="Structure展示一个类的所有方法"></a>Structure展示一个类的所有方法</h1><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217190146126.png" alt="在这里插入图片描述"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181217/20181217190405526.png" alt="在这里插入图片描述"><br>或者使用<code>Ctrl+F12</code>弹框查看当前类的所有方法</p><hr>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义百度云分享密码</title>
      <link href="/2018/12/14/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E5%AF%86%E7%A0%81/"/>
      <url>/2018/12/14/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BE%E5%BA%A6%E4%BA%91%E5%88%86%E4%BA%AB%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p>打开百度云盘网页版</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544750054257.png" alt="1544750054257"></p><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p>找到需要分享的资源，点击分享之后看见下面内容：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544750254778.png" alt="1544750254778"></p><p>别动，重点的在后面</p><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><p>按下F12，进入开发者模式，点击 consle 进入控制台，如下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544750550143.png" alt="1544750550143"></p><h1 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h1><p>在控制台中输入下面代码，按下回车</p><blockquote><p>avascript:require([“function-widget-1:share&#x2F;util&#x2F;shareFriend&#x2F;createLinkShare.js”]).prototype.makePrivatePassword&#x3D;function(){return prompt(“请输入自定义的密码”,”1234”)}</p></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544750784118.png" alt="1544750784118"></p><h1 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h1><p>关闭开发者模式，点击“创建链接”，输入你想要自定义的密码，回车确定即可</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544751090180.png" alt="1544751090180"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544751100617.png" alt="1544751100617"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544751152701.png" alt="1544751152701"></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181214/1544751191191.png" alt="1544751191191"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序笔记</title>
      <link href="/2018/12/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/12/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序账号与工具"><a href="#微信小程序账号与工具" class="headerlink" title="微信小程序账号与工具"></a>微信小程序账号与工具</h1><p>在线文档：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/">https://mp.weixin.qq.com/debug/wxadoc/dev/</a></p><h2 id="小程序开发者账号注册"><a href="#小程序开发者账号注册" class="headerlink" title="小程序开发者账号注册"></a>小程序开发者账号注册</h2><p>微信公众平台：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p><p>小程序开发者账号注册：<a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a></p><h2 id="微信开发者工具"><a href="#微信开发者工具" class="headerlink" title="微信开发者工具"></a>微信开发者工具</h2><p>微信开发者工具：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html">https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html</a></p><h2 id="小程序在线Demo二维码"><a href="#小程序在线Demo二维码" class="headerlink" title="小程序在线Demo二维码"></a>小程序在线Demo二维码</h2><p>体验小程序官方源码：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/demo/demo.zip">https://mp.weixin.qq.com/debug/wxadoc/dev/demo/demo.zip</a></p><img src="https://tiancixiong.coding.net/p/BlogIMG/d/BlogIMG/git/raw/master/blog/20181211/weChatAppdemo.jpg?raw=true"><h1 id="微信小程序文件结构"><a href="#微信小程序文件结构" class="headerlink" title="微信小程序文件结构"></a>微信小程序文件结构</h1><h2 id="主体文件结构"><a href="#主体文件结构" class="headerlink" title="主体文件结构"></a>主体文件结构</h2><p>主体部分由三个文件组成，必须放在项目的根目录，如下：</p><table><thead><tr><th>文件</th><th>必填</th><th>作用</th></tr></thead><tbody><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/app.html">app.js</a></td><td>是</td><td>小程序逻辑</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html">app.json</a></td><td>是</td><td>小程序公共设置</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxss.html">app.wxss</a></td><td>否</td><td>小程序公共样式表</td></tr></tbody></table><h2 id="页面文件结构"><a href="#页面文件结构" class="headerlink" title="页面文件结构"></a>页面文件结构</h2><p>页面由四个文件组成，分别是：</p><table><thead><tr><th>文件类型</th><th>必填</th><th>作用</th></tr></thead><tbody><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/page.html">js</a></td><td>是</td><td>页面逻辑 ( 微信小程序没有window和document对象 )</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/">wxml</a></td><td>是</td><td>页面结构  ( XML语法，不是HTML语法 )</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxss.html">wxss</a></td><td>否</td><td>页面样式表 ( <strong>拓展了rpx尺寸单位，微信专属响应式像素</strong> )</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#pagejson">json</a></td><td>否</td><td>页面配置  ( 不能写注释，否则编译报错 )</td></tr></tbody></table><img src="https://tiancixiong.coding.net/p/BlogIMG/d/BlogIMG/git/raw/master/blog/20181211/fileTree.png" /><h1 id="WXML-结构-基础-标签、组件"><a href="#WXML-结构-基础-标签、组件" class="headerlink" title="WXML 结构_基础 (标签、组件)"></a>WXML 结构_基础 (标签、组件)</h1><p>组件文档：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/component/">https://mp.weixin.qq.com/debug/wxadoc/dev/component/</a></p><h2 id="常用布局标签-组件"><a href="#常用布局标签-组件" class="headerlink" title="常用布局标签(组件)"></a>常用布局标签(组件)</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span>相当于    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span>相当于    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span>相当于    <span class="tag">&lt;<span class="name">img</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span>&gt;</span><span class="tag">&lt;/<span class="name">navigator</span>&gt;</span>相当于    <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span>&gt;</span><span class="tag">&lt;/<span class="name">block</span>&gt;</span>区块标签，不会渲染到页面</span><br></pre></td></tr></table></figure><p><strong>注意：image组件默认宽度300px、高度225px，很多时候我们都不需要这个默认宽高，记得手动设置宽高</strong></p><h2 id="常用表单标签-组件"><a href="#常用表单标签-组件" class="headerlink" title="常用表单标签(组件)"></a>常用表单标签(组件)</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">radio</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="轮播图组件"><a href="#轮播图组件" class="headerlink" title="轮播图组件"></a>轮播图组件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span>=<span class="string">&quot;是否显示面板指示点&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;是否自动切换&quot;</span> <span class="attr">interval</span>=<span class="string">&quot;自动切换时间间隔&quot;</span> <span class="attr">duration</span>=<span class="string">&quot;滑动动画时长&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;图片路径1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;375&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;图片路径2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;375&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>探索：实现无缝轮播怎么办？</p><h1 id="WXSS-样式"><a href="#WXSS-样式" class="headerlink" title="WXSS 样式"></a>WXSS 样式</h1><p>WXSS (WeiXin Style Sheets) 是一套样式语言。</p><p>WXSS文档： <a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxss.html">https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxss.html</a></p><h2 id="WXSS-新增特性"><a href="#WXSS-新增特性" class="headerlink" title="WXSS 新增特性"></a>WXSS 新增特性</h2><p>与 CSS 相比，WXSS 扩展以下2个特性：</p><ul><li>尺寸单位      rpx ( responsive pixel 响应式像素) </li><li>样式导入      @import  “样式表路径”;</li></ul><h2 id="尺寸单位"><a href="#尺寸单位" class="headerlink" title="尺寸单位"></a>尺寸单位</h2><ul><li>rpx  ( responsive pixel 响应式像素) : 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx &#x3D; 375px &#x3D; 750物理像素，1rpx &#x3D; 0.5px &#x3D; 1物理像素。</li><li><strong>建议：</strong> 开发微信小程序时设计师可以用 <code>iPhone6</code> 作为视觉稿的标准。</li></ul><h1 id="JSON-配置"><a href="#JSON-配置" class="headerlink" title="JSON 配置"></a>JSON 配置</h1><p>配置文档：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html">https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html</a></p><h2 id="app-json-配置项列表"><a href="#app-json-配置项列表" class="headerlink" title="app.json 配置项列表"></a>app.json 配置项列表</h2><blockquote><p><code>app.json</code> 文件用来对微信小程序进行全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。</p><table><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#pages">pages</a></td><td>String Array</td><td>是</td><td>设置页面路径</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#window">window</a></td><td>Object</td><td>否</td><td>设置默认页面的窗口表现</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#tabbar">tabBar</a></td><td>Object</td><td>否</td><td>设置底部 tab 的表现</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#networktimeout">networkTimeout</a></td><td>Object</td><td>否</td><td>设置网络超时时间</td></tr><tr><td><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#debug">debug</a></td><td>Boolean</td><td>否</td><td>设置是否开启 debug 模式</td></tr></tbody></table></blockquote><p>如：<code>app.json</code> </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/logs/logs&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;window&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;小程序标题&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;list&quot;</span>: [&#123;</span><br><span class="line">      <span class="string">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/logs/logs&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Tab栏&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;networkTimeout&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;request&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="string">&quot;downloadFile&quot;</span>: <span class="number">10000</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;debug&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="window-配置"><a href="#window-配置" class="headerlink" title="window 配置"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#window">window</a> 配置</h2><blockquote><p>用于设置小程序的状态栏、导航条、标题、窗口背景色。</p></blockquote><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>navigationBarBackgroundColor</td><td>HexColor</td><td>#000000</td><td>导航栏背景颜色，如”#000000”</td></tr><tr><td>navigationBarTextStyle</td><td>String</td><td>white</td><td>导航栏标题颜色，仅支持 black&#x2F;white</td></tr><tr><td>navigationBarTitleText</td><td>String</td><td></td><td>导航栏标题文字内容</td></tr><tr><td>backgroundColor</td><td>HexColor</td><td>#ffffff</td><td>窗口的背景色</td></tr><tr><td>backgroundTextStyle</td><td>String</td><td>dark</td><td>下拉背景字体、loading 图的样式，仅支持 dark&#x2F;light</td></tr><tr><td>enablePullDownRefresh</td><td>Boolean</td><td>false</td><td>是否开启下拉刷新，详见<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/page.html#%E9%A1%B5%E9%9D%A2%E7%9B%B8%E5%85%B3%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0">页面相关事件处理函数</a>。</td></tr><tr><td>onReachBottomDistance</td><td>Number</td><td>50</td><td>页面上拉触底事件触发时距页面底部距离，单位为px</td></tr></tbody></table><h3 id="window-配置图示"><a href="#window-配置图示" class="headerlink" title="window 配置图示"></a>window 配置图示</h3><img src="https://tiancixiong.coding.net/p/BlogIMG/d/BlogIMG/git/raw/master/blog/20181211/config.jpg?raw=true" /><h3 id="window-配置注意事项"><a href="#window-配置注意事项" class="headerlink" title="window 配置注意事项"></a>window 配置注意事项</h3><blockquote><p>!! 注意：页面的<code>.json</code>只能设置 <code>window</code> 相关的配置项，以决定本页面的窗口表现，所以无需写 <code>window</code> 这个关键词。</p></blockquote><p>如：&#x2F;pages&#x2F;message&#x2F;message.json</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;navigationBarBackgroundColor&quot;</span>: <span class="string">&quot;#ffffff&quot;</span>,</span><br><span class="line">    <span class="string">&quot;navigationBarTextStyle&quot;</span>: <span class="string">&quot;black&quot;</span>,</span><br><span class="line">    <span class="string">&quot;navigationBarTitleText&quot;</span>: <span class="string">&quot;内页标题修改&quot;</span>,</span><br><span class="line">    <span class="string">&quot;backgroundColor&quot;</span>: <span class="string">&quot;#eeeeee&quot;</span>,</span><br><span class="line">    <span class="string">&quot;backgroundTextStyle&quot;</span>: <span class="string">&quot;light&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="tabBar-配置"><a href="#tabBar-配置" class="headerlink" title="tabBar 配置"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html#tabbar">tabBar</a> 配置</h2><p>如果小程序是一个多 tab 应用（客户端窗口的底部或顶部有 tab 栏可以切换页面），可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。</p><p><strong>属性说明：</strong></p><table><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>color</td><td>HexColor</td><td>是</td><td></td><td>tab 上的文字默认颜色</td></tr><tr><td>selectedColor</td><td>HexColor</td><td>是</td><td></td><td>tab 上的文字选中时的颜色</td></tr><tr><td>backgroundColor</td><td>HexColor</td><td>是</td><td></td><td>tab 的背景色</td></tr><tr><td>borderStyle</td><td>String</td><td>否</td><td>black</td><td>tabbar上边框的颜色， 仅支持 black&#x2F;white</td></tr><tr><td>list</td><td>Array</td><td>是</td><td></td><td>tab 的列表，详见 list 属性说明，最少2个、最多5个 tab</td></tr><tr><td>position</td><td>String</td><td>否</td><td>bottom</td><td>可选值 bottom、top，设置成top是无图标</td></tr></tbody></table><p>其中 list 接受一个数组，数组中的每个项都是一个对象，其属性值如下：</p><table><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>pagePath</td><td>String</td><td>是</td><td>页面路径，必须在 pages 中先定义</td></tr><tr><td>text</td><td>String</td><td>是</td><td>tab 上按钮文字</td></tr><tr><td>iconPath</td><td>String</td><td>否</td><td>图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效</td></tr><tr><td>selectedIconPath</td><td>String</td><td>否</td><td>选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效</td></tr></tbody></table><h3 id="tabBar-配置图示"><a href="#tabBar-配置图示" class="headerlink" title="tabBar 配置图示"></a>tabBar 配置图示</h3><img src="https://tiancixiong.coding.net/p/BlogIMG/d/BlogIMG/git/raw/master/blog/20181211/tabBar.png" /><h3 id="tabBar-配置注意事项"><a href="#tabBar-配置注意事项" class="headerlink" title="tabBar 配置注意事项"></a>tabBar 配置注意事项</h3><blockquote><ol><li>当设置 position 为 top 时，将不会显示 icon。</li><li>tabBar 中的 list 是一个数组，<strong>只能配置最少2个、最多5个 tab</strong>，tab 按数组的顺序排序。</li><li>icon 大小限制为40kb，建议尺寸为 81px * 81px。</li></ol></blockquote><h1 id="JS-行为-逻辑"><a href="#JS-行为-逻辑" class="headerlink" title="JS 行为(逻辑)"></a>JS 行为(逻辑)</h1><h2 id="微信小程序生命周期函数"><a href="#微信小程序生命周期函数" class="headerlink" title="微信小程序生命周期函数"></a>微信小程序生命周期函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="comment">/** 页面的初始数据 */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** 生命周期函数--监听页面加载 */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(options);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** 生命周期函数--监听页面初次渲染完成 */</span></span><br><span class="line">  <span class="attr">onReady</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** 生命周期函数--监听页面显示 */</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** 生命周期函数--监听页面隐藏 */</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** 生命周期函数--监听页面卸载 */</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="页面相关事件处理函数"><a href="#页面相关事件处理函数" class="headerlink" title="页面相关事件处理函数"></a>页面相关事件处理函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 页面相关事件处理函数--监听用户下拉动作 */</span></span><br><span class="line"> <span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">/** 页面上拉触底事件的处理函数 */</span></span><br><span class="line"> <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">/** 用户点击右上角分享 */</span></span><br><span class="line"> <span class="attr">onShareAppMessage</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><blockquote><p>微信小程序没有BOM和DOM概念，所以不能使用window对象和document对象。</p></blockquote><h1 id="WXML-高级-指令、事件"><a href="#WXML-高级-指令、事件" class="headerlink" title="WXML  高级(指令、事件)"></a>WXML  高级(指令、事件)</h1><h2 id="数据绑定-amp-123-amp-123-amp-125-amp-125"><a href="#数据绑定-amp-123-amp-123-amp-125-amp-125" class="headerlink" title="数据绑定  &amp;#123;&amp;#123; &amp;#125;&amp;#125;"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/data.html">数据绑定</a>  &amp;#123;&amp;#123; &amp;#125;&amp;#125;</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;message&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;Hello MINA!&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h3><ol><li><strong>花括号和引号之间不能有空格。</strong></li><li><strong>不要直接写 checked&#x3D;”false”，其计算结果是一个字符串，转成 boolean 类型后代表真值。</strong></li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">&quot;false&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span>其计算结果是一个字符串，转成 boolean 类型后变成了 true</span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span>正确写法</span><br></pre></td></tr></table></figure><h2 id="列表渲染-wx-for"><a href="#列表渲染-wx-for" class="headerlink" title="列表渲染  wx:for"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/list.html">列表渲染</a>  wx:for</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">array</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="wx-key"><a href="#wx-key" class="headerlink" title="wx:key"></a>wx:key</h3><p>主要功能：提高列表渲染时排序的效率。</p><p><code>wx:key</code> 的值以两种形式提供：</p><ol><li>字符串，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符串或数字，且不能动态改变。</li><li>保留关键字 <code>*this</code> 代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字。</li></ol><blockquote><p>如不提供 wx:key，会报一个 warning， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。</p></blockquote><h2 id="条件渲染-wx-if-wx-else-wx-elif"><a href="#条件渲染-wx-if-wx-else-wx-elif" class="headerlink" title="条件渲染  wx:if   wx:else   wx:elif"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/conditional.html">条件渲染</a>  wx:if   wx:else   wx:elif</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;length &gt;= 80&#125;&#125;&quot;</span>&gt;</span> 优秀 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">&quot;&#123;&#123;length &gt;= 60&#125;&#125;&quot;</span>&gt;</span> 良好 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span> 加油 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="string">&#x27;95&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="wx-if-与-hidden-区别"><a href="#wx-if-与-hidden-区别" class="headerlink" title="wx:if 与 hidden 区别"></a><code>wx:if</code> 与 <code>hidden</code> 区别</h3><p> <code>wx:if</code>  是否渲染， <code>hidden</code>  是否隐藏。</p><p>一般来说，<code>wx:if</code> 有更高的切换消耗而 <code>hidden</code> 有更高的初始渲染消耗。</p><p>因此，如果需要频繁切换的情景下，用 <code>hidden</code> 更好。</p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxml/event.html">事件</a></h2><ul><li>事件对象可以获取额外信息，如 id, dataset(自定义属性集合), touches(触摸点坐标)。</li></ul><h3 id="事件绑定和冒泡"><a href="#事件绑定和冒泡" class="headerlink" title="事件绑定和冒泡"></a>事件绑定和冒泡</h3><ol><li>冒泡事件    bind事件类型        如 <code>bindtap</code>   <code>bindlongpress</code></li><li>非冒泡事件    catch事件类型    如  <code>catchtap</code>   <code> catchlongpress</code></li></ol><h3 id="常用事件类型"><a href="#常用事件类型" class="headerlink" title="常用事件类型"></a>常用事件类型</h3><table><thead><tr><th>类型</th><th>触发条件</th></tr></thead><tbody><tr><td>tap</td><td>手指触摸后马上离开</td></tr><tr><td>longpress</td><td>手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">data-index</span>=<span class="string">&quot;自定义属性&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;tapHandle&quot;</span>&gt;</span> 点我触发事件 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">tapHandle</span>: <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(event)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="事件传参注意"><a href="#事件传参注意" class="headerlink" title="事件传参注意"></a>事件传参注意</h3><p>小程序绑定事件只能写函数名称，不能通过括号方式传参。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&quot;tapHandle(520)&quot;</span>&gt;</span> 点我触发事件 <span class="tag">&lt;/<span class="name">view</span>&gt;</span>错误，事件不能触发</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">data-index</span>=<span class="string">&quot;520&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;tapHandle&quot;</span>&gt;</span> 点我触发事件 <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// page.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">tapHandle</span>: <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>( event.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">index</span> );  <span class="comment">// 输出标签自定义属性上的index值</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="WXS-脚本"><a href="#WXS-脚本" class="headerlink" title="WXS  脚本"></a>WXS  脚本</h2><p>WXS（WeiXin Script）是小程序的一套脚本语言，结合 <code>WXML</code>，功能类似<code>&lt;script&gt;</code>标签，主要用于在视图层定义函数(比较少用)。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>wxs 不依赖于运行时的基础库版本，可以在所有版本的小程序中运行。</li><li>wxs 与 javascript 是不同的语言，有自己的语法，并不和 javascript 一致。</li><li>wxs 的运行环境和其他 javascript 代码是隔离的，wxs 中不能调用其他 javascript 文件中定义的函数，也不能调用小程序提供的API。</li><li>wxs 函数不能作为组件的事件回调。</li><li>由于运行环境的差异，在 iOS 设备上小程序内的 wxs 会比 javascript 代码快 2 ~ 20 倍。在 android 设备上二者运行效率无差异。</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wxs</span> <span class="attr">module</span>=<span class="string">&quot;foo&quot;</span>&gt;</span></span><br><span class="line">var sum = function(a,b)&#123;</span><br><span class="line">  return a+b;</span><br><span class="line">&#125;;</span><br><span class="line">// 这里可以导出一个对象，这个对象可以直接在界面上使用 </span><br><span class="line">module.exports.sum = sum;</span><br><span class="line"><span class="tag">&lt;/<span class="name">wxs</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;foo.sum(1,2)&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="微信开发者工具常用快捷键"><a href="#微信开发者工具常用快捷键" class="headerlink" title="微信开发者工具常用快捷键"></a>微信开发者工具常用快捷键</h1><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Shift + Alt + F</td><td>格式化代码</td></tr><tr><td>Ctrl + P</td><td>跳到文件</td></tr><tr><td>Ctrl + E</td><td>跳到最近文件</td></tr><tr><td>Ctrl + Shift + P</td><td>上传扫码预览</td></tr><tr><td>Ctrl + Shift + I</td><td>显示&#x2F;隐藏调试器</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hystrix状态</title>
      <link href="/2018/12/07/Hystrix%E7%8A%B6%E6%80%81/"/>
      <url>/2018/12/07/Hystrix%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<p>@SpringCloudApplication 相当于：@EnableCircuitBreaker、@EnableDiscoveryClilent、@SpringBootApplication</p><h3 id="熔断器状态的相关配置"><a href="#熔断器状态的相关配置" class="headerlink" title="熔断器状态的相关配置"></a>熔断器状态的相关配置</h3><p>@HystrixProperty相关配置在抽象类：package com.netflix.hystrix.HystrixCommandProperties 中</p><p><strong>熔断器开启或者关闭的条件：</strong></p><p>1、  当满足一定的阀值的时候（默认10秒内超过20个请求次数）</p><p>2、  当失败率达到一定的时候（默认10秒内超过50%的请求失败）</p><p>3、  到达以上阀值，断路器将会开启</p><p>4、  当开启的时候，所有请求都不会进行转发</p><p>5、  一段时间之后（默认是5秒），这个时候断路器是半开状态，会让其中一个请求进行转发。如果成功，断路器会关闭，若失败，继续开启。重复4和5。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启服务降级</span></span><br><span class="line"><span class="meta">@HystrixCommand(</span></span><br><span class="line"><span class="meta">        // 熔断器状态相关配置</span></span><br><span class="line"><span class="meta">        commandProperties = &#123;</span></span><br><span class="line"><span class="meta">                // 当请求次数达到10次时才能开启熔断</span></span><br><span class="line"><span class="meta">                @HystrixProperty(name = &quot;circuitBreaker.requestVolumeThreshold&quot;,value = &quot;10&quot;),</span></span><br><span class="line"><span class="meta">                // 状态变换的时间，由开启 --&gt; 半开</span></span><br><span class="line"><span class="meta">                @HystrixProperty(name = &quot;circuitBreaker.sleepWindowInMilliseconds&quot;,value = &quot;20000&quot;),</span></span><br><span class="line"><span class="meta">                // 失败请求/所有请求=60% --&gt; 开启熔断器</span></span><br><span class="line"><span class="meta">                @HystrixProperty(name = &quot;circuitBreaker.errorThresholdPercentage&quot;,value = &quot;60&quot;)</span></span><br><span class="line"><span class="meta">        &#125;</span></span><br><span class="line"><span class="meta">)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Hystrix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashSet如何去重？</title>
      <link href="/2018/12/06/HashSet%E5%A6%82%E4%BD%95%E5%8E%BB%E9%87%8D/"/>
      <url>/2018/12/06/HashSet%E5%A6%82%E4%BD%95%E5%8E%BB%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<p>&lt; !– more –&gt;<br>HashSet存储元素的原理：<br>往hashSet添加元素的时候，首先会调用元素的 <code>hashCode</code> 方法得到元素的哈希码值，然后把哈希码值经过运算算出该元素存在哈希表中的位置。有两种情况：</p><ul><li><p>情况1：如果算出的位置目前还没有存在任何的元素，那么该元素可以直接添加到哈希表中。</p></li><li><p>情况2： 如果算出的位置目前已经存在其他的元素，那么还会调用元素的 <code>equals</code> 方法再与这个位置上的元素比较一次。<br>如果 <code>equals</code> 方法返回的是true，那么该元素被视为重复元素，不允许添加。如果equals方法返回的是false，那么该元素也可以被添加。</p></li></ul><h2 id="先看个最简单的构造方法"><a href="#先看个最简单的构造方法" class="headerlink" title="先看个最简单的构造方法"></a>先看个最简单的构造方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">* Constructs a <span class="keyword">new</span>, empty set; the backing &lt;tt&gt;HashMap&lt;/tt&gt; instance has</span><br><span class="line">* <span class="keyword">default</span> initial <span class="title function_">capacity</span> <span class="params">(<span class="number">16</span>)</span> and load <span class="title function_">factor</span> <span class="params">(<span class="number">0.75</span>)</span>.</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">HashSet</span><span class="params">()</span> &#123;</span><br><span class="line">map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，HashSet底层是Hashmap存储的。借大神的话</p><blockquote><p>HashSet 就是HashMap的马甲       —–someone</p></blockquote><h2 id="再看看add方法"><a href="#再看看add方法" class="headerlink" title="再看看add方法"></a>再看看add方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Dummy value to associate with an Object in the backing Map</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">transient</span> HashMap&lt;E,Object&gt; map;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">PRESENT</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Adds the specified element to this set if it is not already present.</span></span><br><span class="line"><span class="comment">     * More formally, adds the specified element &lt;tt&gt;e&lt;/tt&gt; to this set if</span></span><br><span class="line"><span class="comment">     * this set contains no element &lt;tt&gt;e2&lt;/tt&gt; such that</span></span><br><span class="line"><span class="comment">     * &lt;tt&gt;(e==null&amp;nbsp;?&amp;nbsp;e2==null&amp;nbsp;:&amp;nbsp;e.equals(e2))&lt;/tt&gt;.</span></span><br><span class="line"><span class="comment">     * If this set already contains the element, the call leaves the set</span></span><br><span class="line"><span class="comment">     * unchanged and returns &lt;tt&gt;false&lt;/tt&gt;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e element to be added to this set</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &lt;tt&gt;true&lt;/tt&gt; if this set did not already contain the specified</span></span><br><span class="line"><span class="comment">     * element</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">add</span><span class="params">(E e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> map.put(e, PRESENT)==<span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>add方法的参数：</p><ul><li>map：map是一个HashMap的实例</li><li>e：我们要存储的值，是HashMap的key</li><li>PRESENT：固定值( Object PRESENT &#x3D; new Object(); )，空的obj对象</li></ul><p>Set偷偷的用了HashMap的 <code>put</code> 方法，然而HashMap并没有去重的功能呀，那么Set是如何做到去重的呢？</p><p>从add方法中可以看到，E是我们要存储的值，而到了HashMap里面却变成了Key，PRESENT就是个空对象。</p><p>在HashMap中Key的HashCode是决定底层数组的下标，进一步使用 <code>equals</code> 进行遍历对象链表中的<strong>Key</strong>进而覆盖原来的Value。</p><p>那么对于HashSet，如果 <code>e</code> 已经存在（先HashCode相同定位到链表，然后equals比较定位到具体的Node），那么覆盖oldValue（value其实就是个傀儡，没啥用），Key不变；如果不存在，就添加一个新的节点（即加了一个新的Key）。</p><p>HashMap的返回值是oldValue，oldValue&#x3D;&#x3D;null说明节点之前不存在；反之说明节点存在，虽然返回false但实际上还是对底层数据进行了改变（即旧的空对象变成了新的空对象）。</p><p>总而言之，HashSet确定相同的方式其实就是HashCode相同（才能找到同一链表），然后equals的返回值（才能比较具体节点进行覆盖）。</p><h2 id="重点看key（敲黑板）"><a href="#重点看key（敲黑板）" class="headerlink" title="重点看key（敲黑板）"></a>重点看key（敲黑板）</h2><p>HashMap中的put方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> V <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Implements Map.put and related methods</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hash hash for key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key the key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value the value to put</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onlyIfAbsent if true, don&#x27;t change existing value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> evict if false, the table is in creation mode.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> previous value, or null if none</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,</span></span><br><span class="line"><span class="params">                   <span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">        <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">            n = (tab = resize()).length;</span><br><span class="line">        <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)</span><br><span class="line">            tab[i] = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Node&lt;K,V&gt; e; K k;</span><br><span class="line">            <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">                ((k = p.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                e = p;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="built_in">this</span>, tab, hash, key, value);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">binCount</span> <span class="operator">=</span> <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((e = p.next) == <span class="literal">null</span>) &#123;</span><br><span class="line">                        p.next = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">                        <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                            treeifyBin(tab, hash);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    p = e;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="literal">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">                <span class="type">V</span> <span class="variable">oldValue</span> <span class="operator">=</span> e.value;</span><br><span class="line">                <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="literal">null</span>)</span><br><span class="line">                    e.value = value;</span><br><span class="line">                afterNodeAccess(e);</span><br><span class="line">                <span class="keyword">return</span> oldValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++modCount;</span><br><span class="line">        <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">            resize();</span><br><span class="line">        afterNodeInsertion(evict);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>这里边有两个看点：</strong></p><ul><li>HashMap中key存储是hash后的值，对于String类型的相同值的hash值是一致的（其他接触类型类似，自定义对象类型需要重写hashcode方法与equel方法）。换句话说相同的值在hashMap中的存储位置是一样的。</li><li>基于上一点来看看怎么存储重复值的。如下代码对于hashMap中已经存在的key，key不变，新value覆盖就value。对于HashSet而言新旧value都是PRESENT对象，所以set在存储的时候就不会重复。</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (e != <span class="literal">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line"><span class="type">V</span> <span class="variable">oldValue</span> <span class="operator">=</span> e.value;</span><br><span class="line"><span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="literal">null</span>)</span><br><span class="line">e.value = value;</span><br><span class="line">afterNodeAccess(e);</span><br><span class="line"><span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以hashset中存储的值输出的顺序和存储的先后顺序不一致，这是因为hashset是按照值的hash顺序进行输出。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> HashSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用快捷键</title>
      <link href="/2018/12/04/IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2018/12/04/IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p><code>Ctrl+Alt+D</code> –&gt; 查看当前类的实现类</p><p>ctrl+l –&gt; 重写方法</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA创建SpringBoot开启找回RunDashboard</title>
      <link href="/2018/12/04/IDEA%E5%88%9B%E5%BB%BASpringBoot%E5%BC%80%E5%90%AF%E6%89%BE%E5%9B%9ERunDashboard/"/>
      <url>/2018/12/04/IDEA%E5%88%9B%E5%BB%BASpringBoot%E5%BC%80%E5%90%AF%E6%89%BE%E5%9B%9ERunDashboard/</url>
      
        <content type="html"><![CDATA[<h1 id="Run-Dashboard-面板"><a href="#Run-Dashboard-面板" class="headerlink" title="Run Dashboard 面板"></a>Run Dashboard 面板</h1><p><strong>Run Dashboard</strong>：微服务项目的开发过程中，工程会非常多，经常要启动很多个服务，才能完成一项测试。启动的多了，容易给开发者带来错乱的感觉，很不方便管理。IDEA开发工具推荐了一个很好用的功能–Run Dashboard。他是 Run 的升级版</p><p>我们可以对比一下这个是Run Dashboard的窗口</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543905902634.png" alt="1543905902634"> </p><p>普通的Run窗口：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543905965611.png" alt="1543905965611"> </p><p>显然如果启动多个端口Run Dashboard窗口显得更好管理。<br>一般有时候创建springboot项目的时候右下角可以提示你打开Run Dashboard，但是如果不提醒就需要自己配置了。</p><h1 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h1><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>新建项目或者通过 <code>open</code> 打开项目时，可能会弹出提示 “Multiple Spring Boot run configurations were detected. Run Dashboard allows to manage multiple run configurations at once.” 见下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543906387601.png" alt="1543906387601"> </p><p>点击 <code>Show run configurations in Run Dashboard</code> ，<code>Run Dashboard</code> 面板重新在底部区域展示了出来。</p><p>如没有此提示，请选择方式二或方式三</p><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><p>打开Run Dashboard：View –&gt; Tool Windows –&gt; Run Dashboard</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543906576903.png" alt="1543906576903"></p><h2 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h2><p>如果上述的方式都没有打开 <code>Run Dashboard</code> 面板，可以在工程目录下找 <code>.idea</code> 文件夹下的 <code>workspace.xml</code>文件，通过修改此文件可达到打开 <code>Run Dashboard</code> 面板的目的</p><ol><li><p>找到当前项目中 <code>.idea</code> 文件下的 <code>workspace.xml</code> 文件，双击打开<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543906852844.png" alt="1543906852844"> </p></li><li><p>接下来找到 <code>&lt;component name=&quot;RunDashboard&quot;&gt;</code><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181204/1543907062997.png" alt="1543907062997"> </p></li><li><p>加入如下配置：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;configurationTypes&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;SpringBootApplicationConfigurationType&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样 <code>Run Dashboard</code> 自动就弹出来了</p><p>最终配置如下：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">&quot;RunDashboard&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;configurationTypes&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;SpringBootApplicationConfigurationType&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;ruleStates&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RuleState</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ConfigurationTypeDashboardGroupingRule&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RuleState</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RuleState</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;StatusDashboardGroupingRule&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RuleState</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java线程状态</title>
      <link href="/2018/11/30/Java%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81/"/>
      <url>/2018/11/30/Java%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Java线程状态"><a href="#Java线程状态" class="headerlink" title="Java线程状态"></a>Java线程状态</h1><p>网上流传了很久的线程具备5种状态，这样是不贴切JDK中描述的，JDK中描述线程状态只有6种，而网络流传的5种<br>状态就是进程的五态模型。那张广为流传的来自网络的图如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1542897157060.png" alt="1542897157060"></p><p>很明显这是操作系统中进程的5种状态，在很多操作系统书中也由介绍分别为new，ready，running，waiting，<br>terminated。不幸的是，有很多的书上常常把这些进程状态，线程状态与Java线程状态混在一起谈。</p><p>进程与线程的区分总图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1542897357723.png" alt="1542897357723"></p><blockquote><ol><li>很多人觉得在JVM线程中应该有，Running运行状态。对JAVA而言，Runnable包含了就绪与运行，那为<br>什么JAVA不区分开呢？这跟CPU分配的时间片有关，而且JAVA进行的是抢占式轮转调度，由于我们的JVM线程是服务于监控，线程又是切换的如此之快，那么区分ready与running又没有多大意义了。<br>再者，我们都知道现在使用的很多JVM底层都将线程映射到操作系统上了，JVM本身没有做什么调度，因为虚拟机看到的都是底层的映射与封装，故而将ready与running映射来也没有太大意义，不如统一为Runnable</li><li>总之还是有些乱的，我们不妨就拿Windows系统为例，用的就是“进程”和“线程”这两种较为标准的叫法，<br>这时一个进程下至少有一个线程，<strong>线程是CPU调度的基本单位</strong>，<strong>进程不参与CPU调度</strong>，CPU根本不知道进程的存在。</li><li>为了避免混乱，下面说的线程状态，只是站在JVM层面上</li></ol></blockquote><p>我们先来看下，这里先列出各个线程状态发生的条件，下面将会对每种状态进行详细解析</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1543039901810.png" alt="1543039901810"></p><table><thead><tr><th align="center">线程状态</th><th align="center">导致状态发生条件</th></tr></thead><tbody><tr><td align="center">NEW(新建)</td><td align="center">线程刚被创建，但是并未启动</td></tr><tr><td align="center">Runnable(可运行)</td><td align="center">线程可以在java虚拟机中运行的状态，可能正在运行自己代码，也可能没有，这取决于操作系统处理器</td></tr><tr><td align="center">Blocked(锁阻塞)</td><td align="center">当一个线程试图获取一个对象锁，而该对象锁被其他的线程持有，则该线程进入Blocked状态；当该线程持有锁时，该线程将变成Runnable状态</td></tr><tr><td align="center">Waiting(无限等待)</td><td align="center">一个线程在等待另一个线程执行一个（唤醒）动作时，该线程进入Waiting状态。进入这个状态后是不能自动唤醒的，必须等待另一个线程调用notify或者notifyAll方法才能够唤醒</td></tr><tr><td align="center">Timed Waiting(计时等待)</td><td align="center">同waiting状态，有几个方法有超时参数，调用他们将进入Timed Waiting状态。这一状态将一直保持到超时期满或者接收到唤醒通知。带有超时参数的常用方法有Thread.sleep 、Object.wait。</td></tr><tr><td align="center">Teminated(被终止)</td><td align="center">因为run方法正常退出而死亡，或者因为没有捕获的异常终止了run方法而死亡</td></tr></tbody></table><blockquote><ol><li>初始(NEW)：新创建了一个线程对象，但还没有调用 <code>start()</code> 方法。</li><li>运行(RUNNABLE)：Java线程中将就绪（ready）和运行中（running）两种状态笼统的称为“运行”。<br>线程对象创建后，其他线程(比如main线程）调用了该对象的start()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获取CPU的使用权，此时处于就绪状态（ready）。就绪状态的线程在获得CPU时间片后变为运行中状态（running）</li><li>阻塞(BLOCKED)：表示线程阻塞于锁</li><li>等待(WAITING)：进入该状态的线程需要等待其他线程做出一些特定动作（通知或中断）</li><li>超时等待(TIMED_WAITING)：该状态不同于WAITING，它可以在指定的时间后自行返回</li><li>终止(TERMINATED)：表示该线程已经执行完毕</li></ol></blockquote><h2 id="1-NEW-新建-状态"><a href="#1-NEW-新建-状态" class="headerlink" title="1. NEW(新建)状态"></a>1. NEW(新建)状态</h2><blockquote><p>概念：线程对象创建了，但是还没有启动之前，就是新建状态</p></blockquote><p>实现 <code>Runnable接口</code> 或继承 <code>Thread</code> 可以得到一个线程类，new一个实例出来，线程就进入了初始状态。</p><p>这里强调两点：</p><ul><li>线程对象创建之后，还未开启( 调用start()方法 )时候，就处于NEW的状态</li><li>开启线程，指的是调用start方法，并不是run方法，run方法仅仅作为一个普通方法存在</li></ul><blockquote><p>线程对象调用 <code>run()</code> 方法不开启线程，仅是对象调用方法。线程对象调用 <code>start()</code> 方法开启线程，并让jvm调用 <code>run()</code> 方法在开启的线程中执行</p></blockquote><p>当我们执行 <code>new Thread(target)</code> 时，jvm 要为线程的运行做一些前期的准备工作，比如检查线程类是否已经被加载、解析和初始化过，接下来还要为对象分配空间并对空间初始化零值等。当完成这些准备工作时线程才能进入到下一个 <code>Runnable</code> (可运行)状态。</p><blockquote><p>在我们研究线程状态时，采用Thread中的getState()方法进行研究</p></blockquote><p>通过代码演示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 线程执行的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 研究新建线程状态</span></span><br><span class="line"><span class="comment"> *   新建状态：至今还未启动的线程处于这一状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadStateTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="comment">// 线程默认名：Thread-0 Thread-1...</span></span><br><span class="line">        System.out.println(myThread.getName());</span><br><span class="line">        System.out.println(<span class="string">&quot;线程创建之后处于：&quot;</span> + myThread.getState());</span><br><span class="line"></span><br><span class="line">        myThread.run();</span><br><span class="line">        System.out.println(<span class="string">&quot;线程run之后处于：&quot;</span> + myThread.getState());</span><br><span class="line"></span><br><span class="line">        myThread.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;线程start之后处于：&quot;</span> + myThread.getState());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出：</span></span><br><span class="line"><span class="comment">//   线程创建之后处于：NEW</span></span><br><span class="line"><span class="comment">//   线程run之后处于：NEW</span></span><br><span class="line"><span class="comment">//   线程start之后处于：RUNNABLE</span></span><br></pre></td></tr></table></figure><blockquote><p>当我们执行 <code>new Thread(target)</code> 时，jvm 要为线程的运行做一些前期的准备工作，比如检查线程类是否已经被加载、解析和初始化过，接下来还要为对象分配空间并对空间初始化零值等。当完成这些准备工作时线程才能进入到下一个 <code>Runnable</code> (可运行)状态。所以说</p><p>当业务需要频繁创建线城市，最好使用线程池，提高效率减轻JVM的压力。当然如果大量线程进行频繁上下文切换，此时多线程的效率会大打折扣。</p></blockquote><h2 id="2-RUNNABLE-可运行-状态"><a href="#2-RUNNABLE-可运行-状态" class="headerlink" title="2. RUNNABLE(可运行)状态"></a>2. RUNNABLE(可运行)状态</h2><blockquote><p>可运行状态：一个在JVM中执行的线程处于这个状态中，等待JVM调度，德能在执行，也可能在等待</p></blockquote><blockquote><p>注：这里的等待指的是等待调度，等待的是系统资源，如IO、CPU时间片，与 sleep、lock 的等待有着本质差别。</p></blockquote><p>接下来使用代码演示一个最简单的可运行状态：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程开始执行具体的任务&quot;</span>);</span><br><span class="line">        <span class="comment">// 假设这个任务使用5秒钟</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">beiginTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">while</span> (System.currentTimeMillis()-beiginTime &lt; <span class="number">5000</span>)&#123;</span><br><span class="line">            <span class="comment">// 假设做了5秒钟的任务</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程执行完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可运行状态</span></span><br><span class="line"><span class="comment"> *   当线程有资格运行，调用了start方法，线程首先进入可运行状态</span></span><br><span class="line"><span class="comment"> *   这种可运行状态不一定被线程调度运行</span></span><br><span class="line"><span class="comment"> *   简单来说，调用start方法之后，该线程处于可运行状态，但未运行</span></span><br><span class="line"><span class="comment"> *   此时存放在&quot;可运行池&quot;中</span></span><br><span class="line"><span class="comment"> *   线程在运行的过程中，自然该线程也是处于可运行状态</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   JDK中处于可运行状态的线程，有两种，一种是正在JVM中运行，</span></span><br><span class="line"><span class="comment"> *   另一种是可能正在等待操作系统其它资源，比如处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;创建完成之后：&quot;</span> + myThread.getState());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        myThread.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;开启线程之后：&quot;</span> + myThread.getState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-BLOCHED-阻塞-状态"><a href="#3-BLOCHED-阻塞-状态" class="headerlink" title="3. BLOCHED(阻塞)状态"></a>3. BLOCHED(阻塞)状态</h2><p>我们还是使用代码来解析一下锁阻塞状态：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadA</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Object obj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ThreadA</span><span class="params">(String name,Object obj)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 同步代码块</span></span><br><span class="line">        <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程A开始执行&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;线程A真正开始执行代码了&quot;</span>);</span><br><span class="line">            <span class="type">long</span> <span class="variable">beginTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="comment">// 模拟5秒钟的任务</span></span><br><span class="line">            <span class="keyword">while</span>(System.currentTimeMillis()-beginTime &lt; <span class="number">5000</span>)&#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;线程A执行完毕&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadB</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object obj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ThreadB</span><span class="params">(String name,Object obj)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 同步代码块</span></span><br><span class="line">        <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程B开始执行&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;线程B真正开始执行代码了&quot;</span>);</span><br><span class="line">            <span class="type">long</span> <span class="variable">beginTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="comment">// 模拟5秒钟的任务</span></span><br><span class="line">            <span class="keyword">while</span>(System.currentTimeMillis()-beginTime &lt; <span class="number">5000</span>)&#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;线程B执行完毕&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程状态之阻塞状态BLOCKED</span></span><br><span class="line"><span class="comment"> *    JDK：锁阻塞并且正在等待监视器锁的某一线程状态</span></span><br><span class="line"><span class="comment"> *    处于受阻状态的某一线程正在等待监视器锁，以便进入一个同步代码块/同步方</span></span><br><span class="line"><span class="comment"> *    还有就是 调用Object.wart方法之后，再次进入同步中时</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlockedDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 创建一个锁对象</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程A、B</span></span><br><span class="line">        <span class="type">ThreadA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadA</span>(<span class="string">&quot;线程A&quot;</span>, obj);</span><br><span class="line">        <span class="type">ThreadB</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadB</span>(<span class="string">&quot;线程B&quot;</span>, obj);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        a.start();</span><br><span class="line">        b.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程A的状态是：&quot;</span> + a.getState());</span><br><span class="line">        System.out.println(<span class="string">&quot;线程B的状态是：&quot;</span> + b.getState());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程A的状态是：&quot;</span> + a.getState());</span><br><span class="line">        System.out.println(<span class="string">&quot;线程B的状态是：&quot;</span> + b.getState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里我们只是对之前分析的情况一进行了阐释</p><h2 id="4-Timed-Waiting-计时等待-状态"><a href="#4-Timed-Waiting-计时等待-状态" class="headerlink" title="4. Timed Waiting(计时等待)状态"></a>4. Timed Waiting(计时等待)状态</h2><blockquote></blockquote><p>带指定的等待时间的等待线程所处的状态。一个线程处于这一状态是因为用一个指定的正的等待时间（为参数）调用了一下方法中的其一：</p><ul><li>Thread.sleep</li><li>带时限（timeout）的 Object.wait</li><li>带时限（timeout）的 Thread.join</li><li>LockSupport.parkNanos</li><li>LockSupport.parkUntil</li></ul><p>Timed Waiting 在API中的描述为：一个正在限时等待另一个线程执行一个（唤醒）动作的线程处于这一状态。单独的去理解这句话，真是玄之又玄，其实我们在之前的操作中已经接触过这个状态了，在哪里呢？</p><p>在我们写卖票的案例中，为了减少线程执行太快，现象不明显等问题，我们在run方法中添加了sleep语句，这样就强制当前正在执行的线程休眠（暂停执行），以“减慢线程”。</p><blockquote><p>注：sleep的使用时区别去其他方法的。</p></blockquote><p>其实当我们调用了sleep方法之后，当前执行的线程就进入到“休眠状态”，其实就是所谓的Timed Waiting（计时等待），那么我们通过一个案例加深对该状态的一个理解：</p><p>实现一个计数器，计数到100，在每个数字之间暂停1秒，每隔10个数字输出一个字符串</p><p>代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 限时等待</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        myThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;mt的线程状态： &quot;</span> + myThread.getState());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现一个计算器，0-99计数，在每个数字之间暂停1秒，每个10个数字输出一个字符串</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">99</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">10</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;oewewowllskd &quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(i);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;    休息了1秒&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过案例可以发西咸，sleep方法的使用还是很简单的。我们需要记住下面几点：</p><ol><li>进入 TIMED_WAITING 状态的一种常见情形是调用的 sleep 方法，单独的线程也可以调用，不一定非要有协作关系。</li><li>为了让其他线程有机会执行，可以将Thread.sleep() 的调用放线程run()之内，这样才能保证该线程执行过程中会睡眠</li><li>sleep 与锁无关，线程睡眠到期自动苏醒，并返回到 Runnable（可运行）状态</li></ol><blockquote><p>小提示：sleep() 中指定的时间是线程不会运行的最短时间。因此，sleep() 方法不能保证该线程睡眠到期后就开始立刻执行</p></blockquote><h2 id="5-WAITING-无限等待-状态"><a href="#5-WAITING-无限等待-状态" class="headerlink" title="5. WAITING(无限等待)状态"></a>5. WAITING(无限等待)状态</h2><p>Wating状态在API中介绍为：一个正在无限期等待另一个线程执行一个特别的（唤醒）动作的线程处于这一状态。</p><p>一个线程进入 WAITING 状态是因为调用了以下方法：</p><ul><li>不带时限的 Object.wait 方法</li><li>不带时限的 Thread.join 方法</li><li>LockSupport.park</li></ul><p>然后会等其他线程执行一个特别的动作，比如：</p><ul><li>一个调用了某个对象的 Object.wait 方法的线程会等待另一个线程调用此对象的 Object.notify() 或 Object.notifyAll()</li><li>一个调用了 Thread.join 方法的线程会等待指定的线程结束</li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无限等待</span></span><br><span class="line"><span class="comment"> *   Object中的wait方法完成</span></span><br><span class="line"><span class="comment"> *     使用当前线程 进入无限等待状态，直到其他线程有唤醒 notify 或 notifyAll 才能被唤醒</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     线程间通信 两个线程执行不同的操作 关联的</span></span><br><span class="line"><span class="comment"> *       两个线程 使用同样的锁 只能使用锁对象调用wait方法或者notify方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WaitingTest</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 使用匿名函数创建线程</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;获取到锁，调用wait方法，当前线程进入无线等待状态。。。等待着别的线程来唤醒&quot;</span>);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        obj.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;唤醒了这个线程，就不再是线程等待了，线程执行完毕&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 开启线程t1</span></span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用匿名内部内方式创建一个新的线程，用来唤醒t1线程</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// 获取到锁</span></span><br><span class="line">                <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 3秒钟后执行唤醒操作</span></span><br><span class="line">                        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;获取到锁 执行 唤醒操作&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 唤醒操作</span></span><br><span class="line">                    obj.notify();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4秒后查看线程t1状态</span></span><br><span class="line">        Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;查看t1的线程状态&quot;</span> + t1.getState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上述案例我们会发现，一个调用了某个对象的 Object.wait 方法的线程会等待另一个线程调用此对象的 Object.notify() 方法或 Object.notifyAll() 方法</p><p>其实 waiting 状态并不是一个线程的操作，它体现的是多个线程间的通信，可以理解为多个线程之间的协作关系，<br>多个线程会争取锁，同时相互之间又存在协作关系。就好比在公司了你和你的同事们，你们可能存在晋升时的竞争，但更多时候你们更多是一起合作一完成某些任务。</p><h2 id="6-TEMINATED-终止-状态"><a href="#6-TEMINATED-终止-状态" class="headerlink" title="6. TEMINATED(终止)状态"></a>6. TEMINATED(终止)状态</h2><p>线程因如下两个原因之一将被终止：</p><ol><li>run() 方法正常退出而自然死亡</li><li>一个没有捕获的异常终止了 run() 方法而意外死亡</li></ol><h1 id="线程的方法"><a href="#线程的方法" class="headerlink" title="线程的方法"></a>线程的方法</h1><h2 id="1-wait-notify-notifyAll-等方法介绍"><a href="#1-wait-notify-notifyAll-等方法介绍" class="headerlink" title="1. wait(), notify(), notifyAll()等方法介绍"></a>1. wait(), notify(), notifyAll()等方法介绍</h2><p>在Object.java中，定义了wait(), notify()和notifyAll()等接口。**<code>wait()</code> 的作用是让当前线程进入等待状态<strong>，同时，wait()也会让当前线程释放它所持有的锁。而notify()和notifyAll()的作用，则是唤醒当前对象上的等待线程；</strong><code>notify()</code> 是唤醒单个线程<strong>，</strong>而 <code>notifyAll()</code> 是唤醒所有的线程**。</p><p>Object类中关于等待&#x2F;唤醒的API详细信息如下：<br><strong>notify()</strong>        – 唤醒在此对象监视器上等待的单个线程。<br><strong>notifyAll()</strong>   – 唤醒在此对象监视器上等待的所有线程。<br><strong>wait()</strong>                                         – 让当前线程处于“等待(阻塞)状态”，“直到其他线程调用此对象的 notify() 方法或 notifyAll() 方法”，当前线程被唤醒(进入“就绪状态”)。<br><strong>wait(long timeout)</strong>                    – 让当前线程处于“等待(阻塞)状态”，“直到其他线程调用此对象的 notify() 方法或 notifyAll() 方法，或者超过指定的时间量”，当前线程被唤醒(进入“就绪状态”)。<br><strong>wait(long timeout, int nanos)</strong>  – 让当前线程处于“等待(阻塞)状态”，“直到其他线程调用此对象的 notify() 方法或 notifyAll() 方法，或者其他某个线程中断当前线程，或者已超过某个实际时间量”，当前线程被唤醒(进入“就绪状态”)。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex布局</title>
      <link href="/2018/11/30/Flex%E5%B8%83%E5%B1%80/"/>
      <url>/2018/11/30/Flex%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Flex-布局教程：语法篇"><a href="#Flex-布局教程：语法篇" class="headerlink" title="Flex 布局教程：语法篇"></a>Flex 布局教程：语法篇</h1><blockquote><p>作者： <a href="http://www.ruanyifeng.com/blog//">阮一峰</a><br>链接： <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></p></blockquote><p>网页布局（layout）是 CSS 的一个重点应用</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071001.gif?raw=true" alt="img"></p><p>布局的传统解决方案，基于<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box_model">盒状模型</a>，依赖 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display"><code>display</code></a> 属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"><code>position</code></a>属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float"><code>float</code></a>属性。它对于那些特殊布局非常不方便，比如，<a href="https://css-tricks.com/centering-css-complete-guide/">垂直居中</a>就不容易实现。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071002.png" alt="img"></p><p>2009年，W3C 提出了一种新的方案—-Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071003.jpg" alt="img"></p><p>Flex 布局将成为未来布局的首选方案。本文介绍它的语法，<a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html">下一篇文章</a>给出常见布局的 Flex 写法。网友<a href="http://vgee.cn/">JailBreak</a> 为本文的所有示例制作了 <a href="http://static.vgee.cn/static/index.html">Demo</a>，也可以参考。</p><p>以下内容主要参考了下面两篇文章：<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">A Complete Guide to Flexbox</a> 和 <a href="https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties">A Visual Guide to CSS3 Flexbox Properties</a>。</p><h2 id="一、Flex-布局是什么？"><a href="#一、Flex-布局是什么？" class="headerlink" title="一、Flex 布局是什么？"></a>一、Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>行内元素也可以使用 Flex 布局。</p><blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p><blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071004.png" alt="img"></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p><h2 id="三、容器的属性-紫色大盒子"><a href="#三、容器的属性-紫色大盒子" class="headerlink" title="三、容器的属性  (紫色大盒子) *"></a>三、容器的属性  (紫色大盒子) *</h2><p>以下6个属性设置在容器上。</p><blockquote><ul><li>flex-direction  √</li><li>flex-wrap  √</li><li>flex-flow</li><li>justify-content  √</li><li>align-items √</li><li>align-content</li></ul></blockquote><h3 id="3-1-flex-direction属性"><a href="#3-1-flex-direction属性" class="headerlink" title="3.1 flex-direction属性 **"></a>3.1 flex-direction属性 **</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071005.png" alt="img"></p><p>它可能有4个值。</p><blockquote><ul><li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul></blockquote><h3 id="3-2-flex-wrap属性"><a href="#3-2-flex-wrap属性" class="headerlink" title="3.2 flex-wrap属性 **"></a>3.2 flex-wrap属性 **</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071006.png" alt="img"></p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>它可能取三个值。</p><p>（1）<code>nowrap</code>（默认）：不换行。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071007.png" alt="img"></p><p>（2）<code>wrap</code>：换行，第一行在上方。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071008.jpg" alt="img"></p><p>（3）<code>wrap-reverse</code>：换行，第一行在下方。</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071009.jpg" alt="img"></p><h3 id="3-3-flex-flow"><a href="#3-3-flex-flow" class="headerlink" title="3.3 flex-flow"></a>3.3 flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h3 id="3-4-justify-content属性"><a href="#3-4-justify-content属性" class="headerlink" title="3.4 justify-content属性  **"></a>3.4 justify-content属性  **</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p><blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071010.png" alt="img"></p><p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><blockquote><ul><li><code>flex-start</code>（默认值）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>： 居中</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul></blockquote><h3 id="3-5-align-items属性"><a href="#3-5-align-items属性" class="headerlink" title="3.5 align-items属性 **"></a>3.5 align-items属性 **</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  align-items: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071011.png" alt="img"></p><p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><blockquote><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul></blockquote><h3 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  align-content: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071012.png" alt="img"></p><p>该属性可能取6个值。</p><blockquote><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li></ul></blockquote><h2 id="四、项目的属性-橙色小盒子"><a href="#四、项目的属性-橙色小盒子" class="headerlink" title="四、项目的属性  (橙色小盒子) *"></a>四、项目的属性  (橙色小盒子) *</h2><p>以下6个属性设置在项目上。</p><blockquote><ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul></blockquote><h3 id="4-1-order属性"><a href="#4-1-order属性" class="headerlink" title="4.1 order属性"></a>4.1 order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  order: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071013.png" alt="img"></p><h3 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex-grow: &lt;number&gt;; /* default 0 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071014.png" alt="img"></p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="4-3-flex-shrink属性"><a href="#4-3-flex-shrink属性" class="headerlink" title="4.3 flex-shrink属性"></a>4.3 flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex-shrink: &lt;number&gt;; /* default 1 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071015.jpg" alt="img"></p><p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3 id="4-4-flex-basis属性"><a href="#4-4-flex-basis属性" class="headerlink" title="4.4 flex-basis属性"></a>4.4 flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex-basis: &lt;length&gt; | auto; /* default auto */</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p><h3 id="4-5-flex属性"><a href="#4-5-flex属性" class="headerlink" title="4.5 flex属性 **"></a>4.5 flex属性 **</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  flex: none | [ &lt;&#x27;flex-grow&#x27;&gt; &lt;&#x27;flex-shrink&#x27;&gt;? || &lt;&#x27;flex-basis&#x27;&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 none (<code>0 0 auto</code>)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">  align-self: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/bg2015071016.png" alt="img"></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 装载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2018/11/30/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/11/30/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Linux介绍"><a href="#1-Linux介绍" class="headerlink" title="1 Linux介绍"></a>1 Linux介绍</h1><h2 id="1-1-Linux的版本"><a href="#1-1-Linux的版本" class="headerlink" title="1.1 Linux的版本"></a>1.1 Linux的版本</h2><p>Linux的版本分为两种：<a href="https://www.kernel.org/">内核版本</a>和发行版本</p><ul><li>Linux内核版本：Linux内核运维开发小组。 源码在一定程度上不是开源的</li><li>Linux发行版本：由各大互联网&#x2F;软件公司定制。 外围的样式功能的源码完全开源</li></ul><p>一个内核版本是有多种多样的发行版本：</p><ul><li><p>Ubuntu：以强大的桌面应用为主，吸收不少Windows用户</p><ul><li>因为桌面应用会在一定程度上大量占用系统资源，开发。</li><li>服务器部署上，不会优先选择Ubuntu</li></ul></li><li><p><strong>CentOS</strong>：对服务器性能进行了一定程度的优化，性能比较高，比较稳定</p><ul><li>服务器操作系统的优选CentOS</li></ul></li></ul><h2 id="1-2-Linux目录介绍"><a href="#1-2-Linux目录介绍" class="headerlink" title="1.2 Linux目录介绍"></a>1.2 Linux目录介绍</h2><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1538621186769.png" alt="1538621186769"></p><ul><li><p><strong>&#x2F;<strong>：</strong>Linux系统根目录</strong></p></li><li><p><strong>&#x2F;etc</strong>：(etcetera) <strong>系统配置文件存放的目录</strong>，不建议在此目录下存放可执行文件。</p><p>重要的配置文件有&#x2F;etc&#x2F;inittab、&#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;init.d、&#x2F;etc&#x2F;X11、&#x2F;etc&#x2F;sysconfig、&#x2F;etc&#x2F;xinetd.d修改配置文件之前记得备份。</p><p>注：&#x2F;etc&#x2F;X11存放与 x windows 有关的设置（防火墙文件，网络设置文件，JDK环境配置文件，mysql）</p></li><li><p><strong>home</strong>:存放所有普通用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是&#x2F;home&#x2F;user，可以用<code>~user</code>表示</p></li><li><p><strong>&#x2F;root</strong>： <strong>系统管理员root(超级用户)的家目录</strong>，系统第一个启动的分区为&#x2F;，所以最好将&#x2F;root和&#x2F;放置在一个分区下</p><p>每一个用户都有家目录，超级管理员root家目录  &#x2F;root</p><p>Linux命令行模式中相当于Windows的桌面</p></li><li><p><strong>&#x2F;usr</strong>：(unix shared resources)：<strong>应用程序存放目录</strong>，比较重要的目录<code>/usr/local</code>本地系统管理员软件安装目录（安装系统级的应用）</p><p>&#x2F;usr&#x2F;bin 存放应用程序</p><p>&#x2F;usr&#x2F;share 存放共享数据</p><p>&#x2F;usr&#x2F;lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件</p><p>&#x2F;usr&#x2F;local:存放软件升级包</p><p>&#x2F;usr&#x2F;share&#x2F;doc: 系统说明文件存放目录</p><p>&#x2F;usr&#x2F;share&#x2F;man: 程序说明文件存放目录，使用 man ls时会查询&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz的内容建议单独分区，设置较大的磁盘空间。<br>​Jdk,tomcat,mysql,redis,nginx</p></li><li><p><strong>&#x2F;opt</strong>：<strong>额外安装的可选应用程序包</strong>所放置的位置。一般情况下，我们可以把tomcat等都安装到这里</p></li></ul><p>以上建议并不是强制性约束</p><h1 id="2-常用命令【重点】"><a href="#2-常用命令【重点】" class="headerlink" title="2 常用命令【重点】"></a>2 常用命令【重点】</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 指令格式</span><br><span class="line">[root@study ~]$ command [-options] parameter1 parameter2 ...</span><br><span class="line">                指令     选项        参数1       参数2</span><br><span class="line"># 说明</span><br><span class="line">1.一行指令中第一个输入的部分绝对是 &quot;指令(command)&quot; 或 &quot;可可执行文件案(例如批次脚本,script)&quot;</span><br><span class="line">2.command 为指令的名称，例如变换工作目录的指令为 cd 等</span><br><span class="line">3.中刮号&quot;[]&quot;并不存在于实际的指令中，而加入选项设置时，通常选项前会带&quot;-&quot;号，例如 -h；有时候会使用选项的完整全名，则选项前带有&quot;--&quot;符号，例如&quot;--help&quot;</span><br><span class="line">4.parameter1 parameter2 为依附在选项后面的参数，或者是 command 的参数</span><br><span class="line">5.指令、选项、参数等，这几个中间以空格来区分，不论空几格shell都视为一格。所以空格是很重要的特殊字符</span><br><span class="line">6.按下[Enter]按键后，该指令就立即执行。[Enter]按键代表着一行指令的开始启动</span><br><span class="line">7.指令太长的时候，可以使用反斜线&quot;\&quot; 来跳脱[Enter]符号，使指令连续到下一行</span><br></pre></td></tr></table></figure><p>Linux命令中参数，一般都是无序的。特殊情况下除外<br>注意：Linux中的命令<strong>严格区分大小写</strong>的！如 <code>cd</code> 和 <code>CD</code> 并不同</p><h2 id="2-1-磁盘管理命令"><a href="#2-1-磁盘管理命令" class="headerlink" title="2.1 磁盘管理命令"></a>2.1 磁盘管理命令</h2><h3 id="ls-列出目录内容"><a href="#ls-列出目录内容" class="headerlink" title="ls 列出目录内容"></a><em>ls</em> 列出目录内容</h3><ol><li><p>ls（list）功能：列出目录内容</p></li><li><p>格式：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls [参数] [文件或目录]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-a或--all   查询所有文件和文件夹，包含隐藏。注意隐藏文件、特殊目录、. 和 ..</span><br><span class="line">-l   查询详细列表    ls -l--&gt;简写：ll</span><br><span class="line">-h 友好展示信息    ll -h (d目录，-普通文件, l链接)</span><br><span class="line"></span><br><span class="line">-t  用文件和目录的更改时间排序。</span><br><span class="line">-r 反向排序</span><br><span class="line">--help   在线帮助</span><br></pre></td></tr></table></figure></li><li><p>常用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l--&gt; 此命令非常常用，提供简化版命令 ll</span><br><span class="line">ls -al</span><br><span class="line">ll /home/--&gt; 显示指定目录下的内容</span><br></pre></td></tr></table></figure></li><li><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：展示某个目录下的内容    ls 目录名</span><br><span class="line">所在位置：/root</span><br><span class="line">想要查看:/etc目录下的内容</span><br><span class="line">命令：ll -h /etc</span><br></pre></td></tr></table></figure></li></ol><h3 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a><em>cd</em> 切换目录</h3><ol><li>cd(change directory) 功能：切换目录</li><li>语法：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">cd [目录]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">常用</span></span><br><span class="line">cd /目录名   ，任意目录切换到指定目录中     /目录名--&gt;Linux的绝对路径</span><br><span class="line">   windows绝对路径--&gt;c:/xxxx/xxx.jpg?raw=true</span><br><span class="line">cd ../  ，向上一层目录</span><br><span class="line">cd ~，切换到当前用户 家目录。root用户家目录 /root</span><br><span class="line">cd /，切换到Linux的 根目录</span><br><span class="line">cd -  ，切换到上一次访问的目录。   只能两个目录相互切换</span><br><span class="line">cd ..，上一级目录</span><br><span class="line">cd，缺省当前用户目录</span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>Linux绝对</strong>：  <ul><li>eg：<code>cd /etc/x1</code>   先切换到 &#x2F;目录，然后在 &#x2F;目录 中找到子目录 etc，在 etc 中找 子目录x1</li><li>特点：在任意目录都可以随意切换</li></ul></li><li><strong>Linux相对</strong>：<ul><li>eg：<code>cd x1/x2</code>   在当前目录中寻找子目录x1, 在x1中寻找子目录x2</li><li>特点：必须确定 当前目录 下有子目录x1</li></ul></li></ul><h3 id="pwd-显示当前的所在目录"><a href="#pwd-显示当前的所在目录" class="headerlink" title="pwd 显示当前的所在目录"></a><em>pwd</em> 显示当前的所在目录</h3><ul><li>pwd(print working directory) 功能：显示工作目录(当前的所在目录)。返回绝对路径</li></ul><h3 id="mkdir-创建目录"><a href="#mkdir-创建目录" class="headerlink" title="mkdir 创建目录"></a><em>mkdir</em> 创建目录</h3><ol><li><p>mkdir（make directoriy）功能： 创建目录</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">mkdir -p 文件夹名称</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-p  父目录不存在情况下先生成父目录 （parents）</span><br><span class="line">-v显示命令执行过程中的详细信息</span><br></pre></td></tr></table></figure></li><li><p>注意：<br>使用<code>mkdir</code>创建带后缀的文件时，创建的是<strong>目录</strong>，不是文件（创建文件使用<code>touch</code>命令）<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539658915126.png" alt="1539658915126"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539659032657.png" alt="1539659032657"> </p></li><li><p>eg:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1</span></span><br><span class="line">需要在/root/t1目录下创建一个t2目录</span><br><span class="line">位置：/root</span><br><span class="line">命令：相对路径：mkdir t1/t2</span><br><span class="line">绝对：mkdir /root/t1/t2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2</span></span><br><span class="line">需要在/root/t3目录下创建一个t4目录</span><br><span class="line">位置：/root</span><br><span class="line">条件：t3和t4都不存在</span><br><span class="line">命令：mkdir -p t3/t4</span><br></pre></td></tr></table></figure></li></ol><h3 id="rmdir-删除空目录"><a href="#rmdir-删除空目录" class="headerlink" title="rmdir 删除空目录"></a><em>rmdir</em> 删除空目录</h3><ul><li>rmdir(remove directory) 功能：删除空目录</li></ul><h3 id="指令快捷键"><a href="#指令快捷键" class="headerlink" title="指令快捷键"></a>指令快捷键</h3><ol><li><p>历史输入<br>使用上、下箭头可以找出上一条指令和下一条指令</p></li><li><p>Tab代码补全<br>使用tab键可以快速输入指令<br>比如：我要输入shutdown指令，这时，我们可以只输入shut然后按下tab键，即可自动把shutdown补全</p><p><strong>注意</strong>：使用两下Tab补全时，如果匹配的结果有多个，这时候将会把所有匹配的结果展示出来。当结果很多时将会出现以下结果：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539654279277.png" alt="1539654279277"> </p><p>按<code>y</code>之后会列出所有匹配的结果，但因为129个比较多，而在电脑中无法一次全显示出来，所以先显示一部分：（More代表还有更多，这时按<code>回车</code>就可以向下滚动，按下<code>Ctrl+C</code>将会退出）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539654354678.png" alt="1539654354678"></p></li></ol><h2 id="2-2-文件浏览-管理-命令"><a href="#2-2-文件浏览-管理-命令" class="headerlink" title="2.2 文件浏览(管理)命令"></a>2.2 文件浏览(管理)命令</h2><ul><li><em>cat</em> 由第一行开始显示文件内容</li><li><em>tac</em> 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li><li><em>nl</em> 显示的时候，顺道输出行号</li><li><em>more</em> 一页一页的显示文件内容</li><li><em>less</em> 与 more 类似，但是比 more 更好的是，他可以往前翻页</li><li><em>head</em> 只看头几行</li><li><em>tail</em> 只看尾巴几行</li><li><em>od</em> 以二进制的方式读取文件内容</li></ul><h3 id="直接浏览文件内容"><a href="#直接浏览文件内容" class="headerlink" title="直接浏览文件内容"></a>直接浏览文件内容</h3><h4 id="cat-查看文件全部内容"><a href="#cat-查看文件全部内容" class="headerlink" title="cat 查看文件全部内容"></a><em>cat</em> 查看文件全部内容</h4><ol><li><p><em>cat</em>： Concatenate(连续)的简写，快捷查看当前文件的内容</p><p>cat适合查看少量信息的文件</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">cat [-AbEnTv] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数：</span></span><br><span class="line">-A ：相当于 -vET 的整合选项，可列出一些特殊字符而不是空白而已</span><br><span class="line">-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号</span><br><span class="line">-E ：将结尾的断行字符 $ 显示出来</span><br><span class="line">-n ：打印出行号，连同空白行也会有行号，与 -b 的选项不同</span><br><span class="line">-T ：将 [tab] 按键以 ^I 显示出来；</span><br><span class="line">-v ：列出一些看不出来的特殊字符</span><br></pre></td></tr></table></figure></li></ol><h4 id="nl-添加行号打印"><a href="#nl-添加行号打印" class="headerlink" title="nl 添加行号打印"></a><em>nl</em> 添加行号打印</h4><p><em>nl</em> 可以将输出的文件内容自动的加上行号</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">nl [-bnw] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-b ：指定行号指定的方式，主要有两种：</span><br><span class="line">-b a ：表示不论是否为空行，也同样列出行号（类似 cat -n）</span><br><span class="line">-b t ：如果有空行，空的那一行不要列出行号（默认值）</span><br><span class="line">-n ：列出行号表示的方法，主要有三种：</span><br><span class="line">-n ln ：行号在屏幕的最左方显示</span><br><span class="line">-n rn ：行号在自己字段的最右方显示，且不加 0</span><br><span class="line">-n rz ：行号在自己字段的最右方显示，且加 0</span><br><span class="line">-w ：行号字段的占用的字符数</span><br></pre></td></tr></table></figure><h3 id="可翻页浏览"><a href="#可翻页浏览" class="headerlink" title="可翻页浏览"></a>可翻页浏览</h3><h4 id="more-一页一页翻动"><a href="#more-一页一页翻动" class="headerlink" title="more 一页一页翻动"></a><em>more</em> 一页一页翻动</h4><ol><li><p><em>more</em>：分页显示文件内容，还支持直接跳转行等功能</p></li><li><p><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">more 文件名</span><br></pre></td></tr></table></figure></li><li><p>操作：</p><ul><li>空格键(space) ：向下翻一页</li><li>Enter ：向下翻<strong>一行</strong></li><li>&#x2F;字串 ：代表在这个显示的内容当中，向下搜寻“字串”这个关键字</li><li>:f ：立刻显示出文件名以及目前显示的行数</li><li>q ：代表立刻离开 more ，不再显示该文件内容</li><li>b 或 Ctrl+B ：代表往回翻页，不过这动作只对文件有用，对管线无用</li></ul></li></ol><h4 id="less-一页一页翻动"><a href="#less-一页一页翻动" class="headerlink" title="less 一页一页翻动"></a><em>less</em> 一页一页翻动</h4><ol><li><p><em>less</em>：分页显示文件内容，操作更详细</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">less -mN 文件名 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-m  显示类似more命令的百分比</span><br><span class="line">-N  显示每行的行号</span><br></pre></td></tr></table></figure></li><li><p>操作：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">空格键    向下滚动一屏 或 Ctrl+F</span><br><span class="line">b    返回上一屏 或 Ctrl+B</span><br><span class="line">q    退出less</span><br><span class="line"></span><br><span class="line">d    前进半页</span><br><span class="line">u    后退半页</span><br><span class="line">Enter    (或方向键向下)前进一行</span><br><span class="line">y    (或方向键向上)后退一行</span><br><span class="line">v    进入vim编辑器</span><br><span class="line">/字符串   向下搜索</span><br><span class="line">?字符串   向上搜索</span><br><span class="line">    n    重复前一个搜寻(与 / 或 ? 有关)</span><br><span class="line">    N    反向的重复前一个搜寻(与 / 或 ? 有关)</span><br><span class="line">    g    跳到文件第一行</span><br><span class="line">    G    跳到文件最后一行</span><br><span class="line">左右方向键 相当于水平滚动条</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><p>适用于<strong>大量数据</strong>的查看</p></li></ol><h3 id="数据撷取"><a href="#数据撷取" class="headerlink" title="数据撷取"></a>数据撷取</h3><h4 id="head-取出前面几行"><a href="#head-取出前面几行" class="headerlink" title="head 取出前面几行"></a><em>head</em> 取出前面几行</h4><p>显示一个文件的前几行内容</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">head [-n number] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-n ：后面接数字，代表显示几行的意思</span><br></pre></td></tr></table></figure><h4 id="tail-取出后面几行"><a href="#tail-取出后面几行" class="headerlink" title="tail 取出后面几行"></a><em>tail</em> 取出后面几行</h4><ol><li><p>用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">tail [-n number] [文件]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-n : 后面接数字，代表显示几行的意思</span><br><span class="line">-f : 循环读取，通过Ctrl+C结束循环</span><br></pre></td></tr></table></figure></li><li><p>eg：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/clip_image001.png" alt="img"></p><ul><li>&amp; 表示后台运行，否则占用终端</li><li>Ctrl + C 退出</li></ul></li></ol><h2 id="2-3-文件操作命令"><a href="#2-3-文件操作命令" class="headerlink" title="2.3 文件操作命令"></a>2.3 文件操作命令</h2><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><ol><li><p>隐藏文件</p><p>Linux中以 点<code>.</code> 开头的是隐藏文件，使用<code>ls</code>命令是查看不到的，需使用<code>ls -a</code></p></li><li><p>目录与文件的区别</p><p>当我们使用ls命令列出目录中的所有子目录和文件时，如何区分哪些是文件哪些是目录？<br>可以通过详细信息中第一列的信息来区分：以 <code>d</code> 开头的是目录，以 <code>-</code> 开头的是文件</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539658318279.png" alt="1539658318279"></p></li></ol><h3 id="touch创建文件"><a href="#touch创建文件" class="headerlink" title="touch创建文件"></a><em>touch</em>创建文件</h3><ol><li><p>功能：创建文件</p></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch 绝对路径/相对路径</span><br></pre></td></tr></table></figure></li></ol><h3 id="cp-复制"><a href="#cp-复制" class="headerlink" title="cp 复制"></a><em>cp</em> 复制</h3><ol><li><p>cp（copy）：复制文件或者复制目录</p></li><li><p>复制<strong>文件</strong>：</p><ul><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp 需要复制的文件 复制的位置</span><br></pre></td></tr></table></figure><p>注意：cp可以进行重命名操作：</p><ul><li><p>cp demo1.java t1&#x2F;ddd.java</p><p>当将一个 文件位置 以不同名字复制到<strong>当前文件</strong>时，意思是复制并重命名；即 将demo1.java复制到t1目录中，并重命名成ddd.java</p></li></ul></li><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：把/root/Demo1.java文件 复制到  /root/t1 目录中</span><br><span class="line">位置：/root</span><br><span class="line">命令：cp Demo1.java t1</span><br><span class="line"> cp /root/Demo1.java /root/t1</span><br><span class="line"></span><br><span class="line">需求：把/root/Demo1.java文件 复制到  /root/t1 目录中，改名为ddd.java</span><br><span class="line">位置：/root</span><br><span class="line">命令：cp Demo1.java t1/ddd.java</span><br></pre></td></tr></table></figure></li></ul></li><li><p>复制<strong>目录</strong>：</p><ul><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">cp -r 需要复制的目录 复制的位置</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-r或--recursive  递归处理，将指定目录下的文件与子目录一并处理 复制目录必须使用-r</span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：把/root/t5目录 复制到  /root/t1目录中</span><br><span class="line">位置：/root</span><br><span class="line">命令：cp -r t5 t1</span><br><span class="line"> cp -r /root/t5 /root/t1</span><br><span class="line"> </span><br><span class="line">cp ./abc ./xxx#无法复制目录</span><br><span class="line">cp -r ./abc ./xxx#复制目录必须使用 -r参数</span><br></pre></td></tr></table></figure></li></ul><h3 id="mv-移动、更名"><a href="#mv-移动、更名" class="headerlink" title="mv 移动、更名"></a><em>mv</em> 移动、更名</h3><ol><li><p>mv(move) 功能： <strong>移动</strong> 或 <strong>更名</strong> 现有的文件或目录</p></li><li><p>移动<strong>文件</strong>：</p><ul><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">mv -f 需要移动的文件 移动的位置</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-f或--force 　若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录，不进行询问</span><br></pre></td></tr></table></figure></li><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：把/root/t5 目录 移动到 /root/t3目录中</span><br><span class="line">位置：/root</span><br><span class="line">命令：mv t5 t3</span><br><span class="line"></span><br><span class="line">需求：把/root/t5 目录 移动到 /root/t3目录中</span><br><span class="line">不询问，直接覆盖</span><br><span class="line">位置：/root</span><br><span class="line">已知：/root/t3目录中 已经有一个t5目录了</span><br><span class="line">命令：mv -f t5 t3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>文件<strong>更名</strong>：</p><ul><li><p>格式：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv 需要移动的文件 新名字</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 必须是在同一目录中进行此操作</span></span></span><br></pre></td></tr></table></figure></li><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件/目录更名操作：</span><br><span class="line">需求：把/root/Demo1.java  改名为 hehe.java</span><br><span class="line">位置：/root</span><br><span class="line">命令：mv Demo1.java hehe.java</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="rm-删除"><a href="#rm-删除" class="headerlink" title="rm 删除"></a><em>rm</em> 删除</h3><ol><li><p>rm(remove) 功能：删除文件或目录</p></li><li><p>删除<strong>文件</strong>：</p><ul><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm 文件名</span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除<strong>目录</strong>：</p><ul><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">rm -rf 目录名</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-f或--force 　强制删除文件或目录，不进行询问</span><br><span class="line">-r或-R或--recursive 　递归处理，将指定目录下的所有文件及子目录一并处理。删除目录必须使用-r</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>注意</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf *     删除 当前目录 下所有内容</span><br><span class="line">rm –rf /*    删除Linux系统 根目录 下所有内容</span><br></pre></td></tr></table></figure></li><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：删除/root/t5 目录， </span><br><span class="line">位置：/root</span><br><span class="line">已知：t5目录下有子目录或者文件</span><br><span class="line">命令：rm -rf t5</span><br></pre></td></tr></table></figure></li></ol><h3 id="find-查找"><a href="#find-查找" class="headerlink" title="find 查找"></a><em>find</em> 查找</h3><ol><li><p>find功能：查找文件或目录</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find 目录名 -name &#x27;需要查找的字符串&#x27;</span><br><span class="line"></span><br><span class="line">-name 指定字符串作为寻找文件或目录的范本样式</span><br><span class="line">* 表示0~多个任意字符 eg：find t1 -name &#x27;*.txt&#x27;</span><br></pre></td></tr></table></figure></li><li><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：查找/root目录下 所有以ins开头的文件或者目录</span><br><span class="line">位置：/root</span><br><span class="line">命令：find /root -name &#x27;ins*&#x27;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-4-文档编辑命令"><a href="#2-4-文档编辑命令" class="headerlink" title="2.4 文档编辑命令"></a>2.4 文档编辑命令</h2><p>Windows是有记事本<br>Linux也有类似的记事本功能   VIM编辑器</p><h3 id="VI-编辑"><a href="#VI-编辑" class="headerlink" title="VI 编辑"></a><em>VI</em> 编辑</h3><ol><li><p>操作：</p><ul><li>输入 <code>vi 文件名</code>  进入 “命令(一般)模式”</li><li>按下 “<strong>i</strong>” 从一般模式，进入“插入模式”</li><li>按下 “<strong>esc</strong>” 从“插入模式”退出到“一般模式”</li><li>在“一般模式”下，输入 “**:wq**”，退出编辑</li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1538637143785.png" alt="1538637143785"></p></li><li></li></ol><h3 id="vim-命令"><a href="#vim-命令" class="headerlink" title="vim 命令"></a><em>vim</em> 命令</h3><ol><li><p>操作：</p><ul><li>输入 <code>vim 文件名</code> 或 <code>vi 文件名</code> 进入 “一般模式”</li><li>按下 “<strong>i</strong>” 从一般模式，进入“插入模式”</li><li>按下 “<strong>esc</strong>” 从“插入模式”退出到“一般模式”</li><li>在“一般模式”下，输入 “**:wq**”，退出编辑</li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1538637143785.png" alt="1538637143785"></p></li><li><ul><li>**一般(命令)**模式:<ul><li>可以<strong>浏览文件内容</strong>，可以进行文本快捷操作（单行复制，多行复制，单行删除，多行删除…）</li><li>按 <strong>i&#x2F;a&#x2F;o</strong> 可以切换到 <strong>插入</strong>模式<br>按 <strong>:</strong> 可以切换到 <strong>底行</strong>模式</li></ul></li><li><strong>插入</strong>模式：<ul><li>可以<strong>编辑</strong>文件内容。</li><li>按 <strong>ESC</strong> 可以切回 <strong>一般</strong>模式</li></ul></li><li><strong>底行</strong>模式：<ul><li>可以进行<strong>强制退出不保存</strong>操作   <strong>q!</strong></li><li>可以进行<strong>保存并退出</strong>操作  <strong>wq</strong></li></ul></li></ul></li></ol><h2 id="2-5-grep-、-管道-、重定向输出-gt-gt"><a href="#2-5-grep-、-管道-、重定向输出-gt-gt" class="headerlink" title="2.5 grep* 、 管道|、重定向输出&gt;&gt;"></a>2.5 grep* 、 管道|、重定向输出&gt;&gt;</h2><h3 id="grep-正则表达式"><a href="#grep-正则表达式" class="headerlink" title="grep 正则表达式"></a><em>grep</em> 正则表达式</h3><ol><li><p>grep：正则表达式，进行字符串搜索工作</p><p>用于过滤&#x2F;搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活</p></li><li><p><strong>语法</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">grep -i 需要搜索的字符串 搜索的文件</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-i 忽略大小写查找数据</span><br></pre></td></tr></table></figure><p>符合规则，就会返回符合规则的<strong>行</strong></p></li></ol><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a><em>管道</em></h3><ol><li><p>管道命令： 可以连接多个Linux命令，其作用是<strong>将一个命令的输出用在另一个命令的输入</strong></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1538638149167.png" alt="1538638149167"></p></li><li><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令1 | 命令2 | 命令3……</span><br></pre></td></tr></table></figure></li><li><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：查询当前目录中，所有带ins关键字的行数据</span><br><span class="line">位置：/root</span><br><span class="line">思考：查询当前目录内容  ll</span><br><span class="line"> 查询字符串，返回字符串所在行  grep</span><br><span class="line">命令：ll | grep ins</span><br><span class="line"></span><br><span class="line">需求：分页显示ls的help信息</span><br><span class="line">命令：ls --help | more</span><br></pre></td></tr></table></figure></li></ol><h3 id="重定向输出-gt-gt-gt"><a href="#重定向输出-gt-gt-gt" class="headerlink" title="重定向输出&gt; &gt;&gt;"></a>重定向输出&gt; &gt;&gt;</h3><ol><li><p>重定向输出</p><ul><li><p>&gt;</p><p>定向输出到文件，如果文件不存在，就创建文件；如果文件存在，就将其清空</p></li><li><p>&gt;&gt;</p><p>将输出内容追加到目标文件中。如果文件不存在，就创建文件；如果文件存在，则将新的内容追加到那个文件的末尾，该文件中的原有内容不受影响</p></li></ul><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539671830735.png" alt="1539671830735"></p></li><li><p>格式：</p><p>注意：</p></li><li><p>使用：</p><ul><li><p>将一个文件夹的内容保存到文本文件中去，也就是将<code>ls</code>命令打印出来的内容都写到文本中去可以这样：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">a.txt文件中就是<span class="built_in">ls</span>命令打印出来的内容了</span></span><br><span class="line">ls -al &gt;&gt; a.txt</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="2-6-压缩-x2F-解压"><a href="#2-6-压缩-x2F-解压" class="headerlink" title="2.6 压缩 &#x2F; 解压"></a>2.6 压缩 &#x2F; 解压</h2><h3 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a><em>gzip</em></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">gzip [-cdtv#] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-c ：将压缩的数据输出到屏幕上，可通过数据流重导向来处理；</span><br><span class="line">-d ：解压缩的参数；</span><br><span class="line">-t ：可以用来检验一个压缩文件的一致性～看看文件有无错误；</span><br><span class="line">-v ：可以显示出原文件/压缩文件的压缩比等信息；</span><br><span class="line"><span class="meta prompt_">-# </span><span class="language-bash">：<span class="comment"># 为数字的意思，代表压缩等级，-1 最快，但是压缩比最差、-9 最慢，但是压缩比最好！默认是 -6</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例子</span></span><br><span class="line">gzip -v services #压缩</span><br><span class="line">gzip -d services.gz #解压</span><br><span class="line">zcat services.gz #查看压缩文件的内容</span><br></pre></td></tr></table></figure><p>使用 <strong>gzip</strong> 进行压缩时，在默认的状态下原本的文件会被压缩成为 <code>.gz</code> 的文件名，原始文件就不再存在了；与 <strong>gzip</strong> 相反， <strong>gzip -d</strong> 会将原本的 <code>.gz</code> 删除</p><h3 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a><em>bzip2</em></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">bzip2 [-cdkzv#] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-c ：将压缩的过程产生的数据输出到屏幕上！</span><br><span class="line">-d ：解压缩的参数</span><br><span class="line">-k ：保留原始文件，而不会删除原始的文件喔！</span><br><span class="line">-z ：压缩的参数 （默认值，可以不加）</span><br><span class="line">-v ：可以显示出原文件/压缩文件的压缩比等信息；</span><br><span class="line"><span class="meta prompt_">-# </span><span class="language-bash">：与 gzip 同样的，都是在计算压缩比的参数， -9 最佳， -1 最快！</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例子</span></span><br><span class="line">bzip2 -v services #压缩</span><br><span class="line">bzip2 -d services.bz2 #解压</span><br><span class="line">bzcat services.bz2 #查看压缩文件的内容</span><br></pre></td></tr></table></figure><p><strong>bzip2</strong> 的<strong>压缩率</strong>比 <strong>gzip</strong> 要好些。不过，对于大容量文件来说，<strong>bzip2</strong> 的<strong>压缩时间</strong>会比 <strong>gzip</strong> 要更久一些</p><h3 id="xz"><a href="#xz" class="headerlink" title="xz"></a><em>xz</em></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">xz [-dtlkc#] 文件名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-d ：就是解压缩啊！</span><br><span class="line">-t ：测试压缩文件的完整性，看有没有错误</span><br><span class="line">-l ：列出压缩文件的相关信息</span><br><span class="line">-k ：保留原本的文件不删除～</span><br><span class="line">-c ：同样的，就是将数据由屏幕上输出的意思！</span><br><span class="line">-v ：可以显示出原文件/压缩文件的压缩比等信息；</span><br><span class="line"><span class="meta prompt_">-# </span><span class="language-bash">：同样的，也有较佳的压缩比的意思！</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例子</span></span><br><span class="line">xz -v services #压缩</span><br><span class="line">xz -d services.xz #解压</span><br><span class="line">xzcat services.xz #查看压缩文件的内容</span><br></pre></td></tr></table></figure><p>压缩率从高到低：<em>xz</em> &gt; <em>bzip2</em> &gt; <em>gzip</em><br>压缩时间从长到短：<em>xz</em> &gt; <em>bzip2</em> &gt; <em>gzip</em></p><h3 id="tar-打包"><a href="#tar-打包" class="headerlink" title="tar 打包"></a><em>tar</em> 打包</h3><p>打包：将多个文件或目录包成一个大文件</p><ol><li>Linux常见压缩包： *.tar        打包，大小不会进行压缩<br>​  *.tar.gz   打包并压缩文件大小</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">tar [-j|-z] [cv] [-f 创建的档名] filename...#打包与压缩</span><br><span class="line">tar [-j|-z] [tv] [-f 创建的档名]#察看档名</span><br><span class="line">tar [-j|-z] [xv] [-f 创建的档名] [-C 目录]        #解压缩</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-c  ：创建打包文件，可搭配 -v 来察看过程中被打包的档名(filename)</span><br><span class="line">-t  ：查看打包文件的内容含有哪些档名，重点在察看『档名』就是了；</span><br><span class="line">-x  ：解打包或解压缩的功能，可以搭配 -C (大写) 在特定目录解开</span><br><span class="line">      特别留意的是， -c, -t, -x 不可同时出现在一串命令列中。</span><br><span class="line">-z  ：通过 gzip  的支持进行压缩/解压缩：此时档名最好为 *.tar.gz</span><br><span class="line">-j  ：通过 bzip2 的支持进行压缩/解压缩：此时档名最好为 *.tar.bz2</span><br><span class="line">-J ：通过 xz 的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz</span><br><span class="line">特别留意， -z, -j, -J 不可以同时出现在一串命令行中</span><br><span class="line">-v  ：在压缩/解压缩的过程中，将正在处理的档名显示出来！</span><br><span class="line">-f filename：-f 后面要立刻接要被处理的档名！建议 -f 单独写一个选项罗！</span><br><span class="line">-C 目录    ：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。</span><br></pre></td></tr></table></figure><p>tar 并不会主动的产生创建的文件名，如果不加 [-z|-j|-J] 的话，文件名最好取为 .tar 即可</p><ol><li><p><strong>压缩</strong>：(<strong>参数顺序不变</strong>)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">tar -zcvf 压缩包名字.tar.gz 需要压缩的内容</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选项与参数：</span></span><br><span class="line">-z 是否需要用 gzip 压缩</span><br><span class="line">-c 建立一个压缩文件的参数指令（create）--压缩</span><br><span class="line">-v 压缩的过程中显示文件（verbose）</span><br><span class="line">-f 使用档案名称，在 f 之后要立即接档名（file）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例如：tar -zcvf hehe.tar.gz *   将当前目录下所有内容进行打包压缩，文件名hehe.tar.gz</span><br></pre></td></tr></table></figure></li><li><p><strong>解压</strong>：(<strong>参数顺序不变</strong>)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压到当前目录</span></span><br><span class="line">tar -zxvf 需要解压的压缩包名称 解压到当前目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压到指定目录</span></span><br><span class="line">tar -zxvf 需要解压的压缩包名称 -C 指定压缩路径  解压到指定目录中</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-z 是否需要用 gzip 压缩</span><br><span class="line">-x 解开一个压缩文件的参数指令（extract）--解压</span><br><span class="line">-v 压缩的过程中显示文件（verbose）</span><br><span class="line">-f 使用档名，在 f 之后要立即接档名（file）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eg：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把 /root/t5/abc.tar.gz 解压到 /root/t5/t5 目录中</span></span><br><span class="line">tar -zxvf /root/t5/abc.tar.gz -C /root/t5/t5</span><br><span class="line">tar -zxvf hehe.tar.gz -C t5</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-7-系统命令"><a href="#2-7-系统命令" class="headerlink" title="2.7 系统命令"></a>2.7 系统命令</h2><h3 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h3><p>服务，是指常期运行，常驻内存中的进程，比如，apache、mysql、ssh等</p><h4 id="服务与端口"><a href="#服务与端口" class="headerlink" title="服务与端口"></a>服务与端口</h4><p>每个服务软件一般在运行时都会对应一个端口。<br>查看监听的端口：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ss –lntp</span><br></pre></td></tr></table></figure><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1539792074690.png" alt="1539792074690"></p><h4 id="防火墙及防火墙设置"><a href="#防火墙及防火墙设置" class="headerlink" title="防火墙及防火墙设置"></a>防火墙及防火墙设置</h4><p>CentOS 7.0默认使用的是<code>firewall</code>作为防火墙，使用<code>iptables</code>必须重新设置一下</p><p>查看防火墙状态：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">running 防火墙处于开启状态</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">not running 防火墙处于关闭状态</span></span><br></pre></td></tr></table></figure><h5 id="直接关闭防火墙"><a href="#直接关闭防火墙" class="headerlink" title="直接关闭防火墙"></a>直接关闭防火墙</h5><p>停止<strong>firewall</strong>：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>禁止<strong>firewall</strong>开机启动：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service </span><br></pre></td></tr></table></figure><h4 id="查看系统进程：ps-ef"><a href="#查看系统进程：ps-ef" class="headerlink" title="查看系统进程：ps -ef"></a>查看系统进程：ps -ef</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：查看进程中 和 vim相关的进程</span><br><span class="line">命令：ps -ef|grep -i vim</span><br><span class="line"></span><br><span class="line">-e 　此参数的效果和指定&quot;A&quot;参数相同，显示所有程序</span><br><span class="line">-f 　显示UID,PPIP,C与STIME栏位</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="强制杀死某个进程：kill-9-pid号"><a href="#强制杀死某个进程：kill-9-pid号" class="headerlink" title="强制杀死某个进程：kill -9 pid号"></a>强制杀死某个进程：kill -9 pid号</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需求：查看进程 和 vim相关的进程有哪些，并将vim进程杀死</span><br><span class="line">命令：ps -ef|grep -i vim</span><br><span class="line"> Kill -9 pid号</span><br><span class="line">  </span><br><span class="line">-l &lt;信息编号&gt; 　若不加&lt;信息编号&gt;选项，则-l参数会列出全部的信息名称</span><br><span class="line">kill 9 表示强制终止</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>查看网络配置：<strong>ifconfig</strong><ul><li>显示网络设备</li></ul></li><li>测试和目标的连通性：<strong>ping 主机名或ip地址</strong><ul><li>测试与目标主机的连通性</li><li>会持续不断一直测试，直到ctrl+c</li></ul></li><li>Linux centos重启命令：<strong>reboot</strong></li><li>Linux centos关机命令：<strong>halt</strong></li></ol><h3 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">shutdown [-krhc] [时间] [警告讯息]</span><br><span class="line"></span><br><span class="line">选项与参数：</span><br><span class="line">-k：不要真的关机，只是发送警告讯息出去！</span><br><span class="line">-r：在将系统的服务停掉之后就重新开机（常用）</span><br><span class="line">-h：将系统的服务停掉后，立即关机（常用）</span><br><span class="line">-c：取消已经在进行的 shutdown 指令内容。</span><br><span class="line">时间：指定系统关机的时间</span><br><span class="line"></span><br><span class="line">特殊：</span><br><span class="line">shutdown -h now#立刻关机，其中 now 相当于时间为 0 的状态</span><br><span class="line">shutdown -h 20:25 #系统在今天的20:25关机，若在21:25才下达此指令，则隔天才关机</span><br><span class="line">shutdown -h +10 #系统再过十分钟后自动关机</span><br><span class="line">shutdown -r now #系统立刻重新开机</span><br><span class="line">shutdown -r +30 &#x27;The system will reboot&#x27; #再过三十分钟系统会重新开机，并显示后面的讯息给所有在线上的使用者</span><br><span class="line">shutdown -k now &#x27;This system will reboot&#x27; #仅发出警告信件的参数！系统并不会关机啦！吓唬人！</span><br></pre></td></tr></table></figure><p>其他关机或重启的命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot#直接重启系统</span><br><span class="line">poweroff#系统关机，所以没有提供额外的电力，屏幕空白</span><br><span class="line">halt#系统停止，屏幕可能会保留系统已经停止的讯息</span><br></pre></td></tr></table></figure><p>其实上面这些命令都是调用了 <strong>systemctl</strong> 这个指令，这个指令跟关机有关的语法如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl [指令]</span><br><span class="line">指令：</span><br><span class="line">halt进入系统停止的模式，屏幕可能会保留已有些讯息，这与你的电源管理模式有关</span><br><span class="line">poweroff进入系统关机模式，直接关机没有提供电力</span><br><span class="line">reboot直接重新开机</span><br><span class="line">suspend进入休眠模式</span><br></pre></td></tr></table></figure><h2 id="2-8-其他命令"><a href="#2-8-其他命令" class="headerlink" title="2.8 其他命令"></a>2.8 其他命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su -#切换root账号</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示日期与时间</span></span><br><span class="line">date [+%Y/%m/%d]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示日历</span></span><br><span class="line">cal [month] [year]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">eg: cal 2021、cal 12 2021</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">简单好用的计算机 运算符号：+(加)、-(减)、*(乘)、/(除)、%(余)、^(指数)</span></span><br><span class="line">bc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bc默认仅输出整数，如果要输出小数，需使用下面命令指定小数点位数</span></span><br><span class="line">scale=number</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">eg:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1/100<span class="comment">#0</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scale=3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1/100<span class="comment">#.010</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">退出bc</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h3 id="热键"><a href="#热键" class="headerlink" title="热键"></a>热键</h3><ul><li><code>Tab</code> 命令补全<strong>、</strong>文件补齐</li><li><code>Ctrl+C</code> 中断目前的程序</li><li><code>Ctrl+D</code> 相当于输入<strong>exit</strong></li><li><code>Shift+PgUp/PgDn</code> 向前&#x2F;后翻页</li></ul><h3 id="chmod-文件权限"><a href="#chmod-文件权限" class="headerlink" title="chmod 文件权限"></a><em>chmod</em> 文件权限</h3><ol><li><p>chmod(change mode) 功能：变更文件或目录的权限</p></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">chmod [参数] [&lt;权限范围&gt;&lt;符号&gt;&lt;权限代号&gt;]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数</span></span><br><span class="line">-R或--recursive 　递归处理，将指定目录下的所有文件及子目录一并处理</span><br></pre></td></tr></table></figure></li></ol><ul><li>权限范围的表示法如下：<ul><li>u：User，即文件或目录的拥有者</li><li>g：Group，即文件或目录的所属群组</li><li>o：Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围</li><li>a：All，即全部的用户，包含拥有者，所属群组以及其他用户</li><li>符号：<ul><li>‘+’添加权限</li><li>‘-‘取消权限</li></ul></li><li>有关权限代号的部分，列表于下：<ul><li>r：读取权限，数字代号为”4”</li><li>w：写入权限，数字代号为”2”</li><li>x：执行或切换权限，数字代号为”1”</li><li>-：不具任何权限，数字代号为”0”</li></ul></li></ul></li></ul><ol start="3"><li><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir xxx</span><br><span class="line">ll | grep xxx</span><br><span class="line">chmod u-rwx xxx#取消xxx目录，用户“读写执行”权限</span><br><span class="line">chmod g-rwx xxx #取消xxx目录，组“读写执行”权限</span><br><span class="line">chmod 777 xxx#给xxx目录添加所有权限</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>linux 权限格式：&lt;类型&gt;&lt;用户&gt;&lt;组&gt;&lt;其他用户&gt;</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1543568285232.png" alt="img"></p></li></ol><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><ol><li><p>VIM命令配置</p><ul><li><p>网卡配置 cat &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</p></li><li><p>概要信息如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DEVICE=eth0                 #网卡名称</span><br><span class="line">TYPE=Ethernet               #网卡类型</span><br><span class="line">ONBOOT=yes                  #是否开机启动网卡</span><br><span class="line">BOOTPROTO=static            #静态获取IP，其他取值：dhcp （如果设置dhcp下面红色不需要）</span><br><span class="line">IPADDR=192.168.44.100       #ip地址</span><br><span class="line">GATEWAY=192.168.44.2        #网关</span><br><span class="line">NETMASK=255.255.255.0       #子网掩码</span><br></pre></td></tr></table></figure></li></ul></li><li><p>setup设置</p><ol><li><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/image-20210105112211914.png" alt="image-20210105112211914"> </p></li><li><p>选择“网络配置”</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/clip_image002-1538642858562.jpg?raw=true" alt="img"> </p></li><li><p>选择“设备配置”</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/clip_image001-1538642873407.png" alt="img"> </p></li><li><p>选择“第一块网卡”</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/1538642891449.png" alt="1538642891449"> </p></li><li><p>设置IP地址等详细信息</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/clip_image001.png" alt="img"></p></li></ol></li></ol><h1 id="3-命令总结-和-帮助"><a href="#3-命令总结-和-帮助" class="headerlink" title="3 命令总结 和 帮助"></a>3 命令总结 和 帮助</h1><ul><li><p>内部命令：属于Shell解析器的一部分 （系统启动直接加载到内存的）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd   切换目录（change directory）</span><br><span class="line">pwd  显示当前工作目录（print working directory）</span><br><span class="line">help 帮助</span><br></pre></td></tr></table></figure></li><li><p>外部命令：独立于Shell解析器之外的文件程序（独立的可执行文件）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls    显示文件和目录列表（list）</span><br><span class="line">mkdir 创建目录（make directoriy）</span><br><span class="line">cp    复制文件或目录（copy）</span><br></pre></td></tr></table></figure></li><li><p>查看帮助文档</p><ul><li><p>内部命令：help + 命令（eg：help cd）</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/image-20210105112458072.png" alt="image-20210105112458072"> </p></li><li><p>外部命令：man + 命令（eg：man ls）；在man中<strong>空格键</strong>为翻页，按<strong>q</strong>离开</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181130/image-20210105112551955.png" alt="image-20210105112551955"></p></li></ul></li><li><p>不用特意记忆命令分类，开发中，如果需要查看命令参数，先使用<code>man</code>，如果没有结果，再使用<code>help</code></p></li></ul><h2 id="man-page"><a href="#man-page" class="headerlink" title="man page"></a>man page</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式</span></span><br><span class="line">man [命令]# 查看某个命令的操作说明</span><br></pre></td></tr></table></figure><p>举个栗子👇：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]$ man date</span><br><span class="line">DATE(1) User Commands DATE(1)</span><br><span class="line">Name</span><br><span class="line">...</span><br><span class="line">SYNOPSIS</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>**DATE(1)**中括号内的数字具体表示内容如下：</p><table><thead><tr><th>数字</th><th>代表内容</th></tr></thead><tbody><tr><td><code>1</code></td><td>使用者在shell环境中可以操作的指令或可执行文件【重要】</td></tr><tr><td>2</td><td>系统核心可调用的函数与工具等</td></tr><tr><td>3</td><td>一些常用的函数（function）与函数库（library），大部分为C的函数库（libc）</td></tr><tr><td>4</td><td>设备文件的说明，通常在&#x2F;dev下的文件</td></tr><tr><td><code>5</code></td><td>配置文件或者是某些文件的格式【重要】</td></tr><tr><td>6</td><td>游戏（games）</td></tr><tr><td>7</td><td>惯例与协定等，例如Linux文件系统、网络协定、ASCII code等等的说明</td></tr><tr><td><code>8</code></td><td>系统管理员可用的管理指令【重要】</td></tr><tr><td>9</td><td>跟kernel有关的文件</td></tr></tbody></table><p>man page的内容以 <strong>NAME</strong> 作为开始介绍，最后还有个 <strong>SEE ALSO</strong> 来作为结束，大致分成下面这几个部分：</p><table><thead><tr><th>名称</th><th>内容说明</th></tr></thead><tbody><tr><td>NAME</td><td>简短的指令、数据名称说明</td></tr><tr><td>SYNOPSIS</td><td>简短的指令下达语法（syntax）简介</td></tr><tr><td>DESCRIPTION</td><td>较为完整的说明，这部分最好仔细看看！</td></tr><tr><td>OPTIONS</td><td>针对 SYNOPSIS 部分中，有列举的所有可用的选项说明</td></tr><tr><td>COMMANDS</td><td>当这个程序（软件）在执行的时候，可以在此程序（软件）中下达的指令</td></tr><tr><td>FILES</td><td>这个程序或数据所使用或参考或链接到的某些文件</td></tr><tr><td>SEE ALSO</td><td>可以参考的，跟这个指令或数据有相关的其他说明！</td></tr><tr><td>EXAMPLE</td><td>一些可以参考的范例</td></tr></tbody></table><p>在man page当中可以使用 <strong>PgUp&#x2F;PgDn</strong> 来翻页，可以输入 <code>/word</code> 来查询关键字，按下 <code>q</code> 可以退出</p><hr><h1 id="参考资料与延伸阅读"><a href="#参考资料与延伸阅读" class="headerlink" title="参考资料与延伸阅读"></a>参考资料与延伸阅读</h1><ul><li><a href="http://linux.vbird.org/linux_basic/">鸟哥的Linux私房菜 : 基础学习篇 第四版</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣Top250资源合集</title>
      <link href="/2018/11/29/%E8%B1%86%E7%93%A3Top250%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/"/>
      <url>/2018/11/29/%E8%B1%86%E7%93%A3Top250%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p><br/><br/><div style="display:flex;justify-content:center;"><font color="hotpink">点击影片”名称”即可获取资源链接</font></div></p><div style="display:flex;justify-content:flex-end"><font color="red"># 更新至Top1-Top100，敬请期待...</font></div><table border="1" style="text-align: center;"><thead><tr><th>排名</th><th>名称</th><th>年份</th><th>评分</th></tr></thead><tbody><tr><td>Top1</td><td><a href="https://pan.baidu.com/s/1Hl1j9BGzvxhdaRfGGGL2zQ">肖申克的救赎</a></td><td>1994</td><td>9.6</td></tr><tr><td>Top2</td><td><a href="http://pan.baidu.com/s/1gfOr0Dd">霸王别姬</a></td><td>1993</td><td>9.6</td></tr><tr><td>Top3</td><td><a href="http://pan.baidu.com/s/1bpNdERt">这个杀手不太冷</a></td><td>1994</td><td>9.4</td></tr><tr><td>Top4</td><td><a href="https://pan.baidu.com/s/1o8Nejc2?fid=853395936269539">阿甘正传</a></td><td>1994</td><td>9.4</td></tr><tr><td>Top5</td><td><a href="https://pan.baidu.com/s/14sshh?fid=738933366388433">美丽人生</a></td><td>1997</td><td>9.5</td></tr><tr><td>Top6</td><td><a href="http://pan.baidu.com/s/1o7PiQ3w">泰坦尼克号</a></td><td>1997</td><td>9.3</td></tr><tr><td>Top7</td><td><a href="https://pan.baidu.com/s/11xA1VNyZZlboNTckXywkxQ">千与千寻</a></td><td>2001</td><td>9.3</td></tr><tr><td>Top8</td><td><a href="http://pan.baidu.com/s/1qXCTBic">辛德勒的名单</a></td><td>1993</td><td>9.5</td></tr><tr><td>Top9</td><td><a href=" http://pan.baidu.com/s/1i5w3bkp">盗梦空间</a></td><td>2010</td><td>9.3</td></tr><tr><td>Top10</td><td><a href="https://pan.baidu.com/s/1ge5y0nD?fid=923497949059553">机器人总动员</a></td><td>2008</td><td>9.3</td></tr><tr><td>Top11</td><td><a href="https://pan.baidu.com/s/1mhQXQIG?fid=859409840409891">忠犬八公的故事</a></td><td>2009</td><td>9.3</td></tr><tr><td>Top12</td><td><a href="http://pan.baidu.com/s/1eRFpHLK">三傻大闹宝莱坞</a></td><td>2009</td><td>9.2</td></tr><tr><td>Top13</td><td><a href="http://pan.baidu.com/s/1boR7j3p">海上钢琴师</a></td><td>1998</td><td>9.2</td></tr><tr><td>Top14</td><td><a href="http://pan.baidu.com/s/1eRDnUi2">放牛班的春天</a></td><td>2004</td><td>9.2</td></tr><tr><td>Top15</td><td><a href="https://pan.baidu.com/s/1Cd9bMZjqWbhTS0wLKWfr_w?fid=351298108017917">大话西游之大圣娶亲</a></td><td>1995</td><td>9.2</td></tr><tr><td>Top16</td><td><a href="https://pan.baidu.com/s/1GZ356B4GumSYp2afnrcCpg?fid=354248154465777">楚门的世界</a></td><td>1998</td><td>9.2</td></tr><tr><td>Top17</td><td><a href="https://pan.baidu.com/s/1i3YIMAp?fid=1074753729212605">教父</a></td><td>1972</td><td>9.2</td></tr><tr><td>Top18</td><td><a href="https://pan.baidu.com/s/14wznp?fid=823033633333159">星际穿越</a></td><td>2014</td><td>9.2</td></tr><tr><td>Top19</td><td><a href="https://pan.baidu.com/s/1bo0FnXl?fid=252951322427901">龙猫</a></td><td>1988</td><td>9.1</td></tr><tr><td>Top20</td><td><a href="https://pan.baidu.com/s/1zLis1PHuhxILsa7Ac7Wx9Q">熔炉</a></td><td>2011</td><td>9.3</td></tr><tr><td>Top21</td><td><a href="https://pan.baidu.com/s/1MUAbY8A5kUaAh_6HXPCjqA">无间道</a></td><td>2002</td><td>9.1</td></tr><tr><td>Top22</td><td><a href="https://pan.baidu.com/s/1nuSZ9ix?fid=703054725115319">当幸福来敲门</a></td><td>2006</td><td>9.0</td></tr><tr><td>Top23</td><td><a href="https://pan.baidu.com/s/1FlfH_qZf38PlbwX9E512yA">触不可及</a></td><td>2011</td><td>9.2</td></tr><tr><td>Top24</td><td><a href="https://pan.baidu.com/s/1s6_q9mZKLAKwNAh4O7-r3w">怦然心动</a></td><td>2010</td><td>9.0</td></tr><tr><td>Top25</td><td><a href="https://pan.baidu.com/s/15svfI?fid=2938514528">乱世佳人</a></td><td>1939</td><td>9.2</td></tr><tr><td>Top26</td><td><a href="https://pan.baidu.com/s/1jIvYj2m?fid=859083213231438">疯狂动物城</a></td><td>2016</td><td>9.2</td></tr><tr><td>Top27</td><td><a href="https://pan.baidu.com/s/1gUs1lMPvhWLP8x_ijzpNGw">蝙蝠侠：黑暗骑士</a></td><td>2008</td><td>9.1</td></tr><tr><td>Top28</td><td><a href="https://pan.baidu.com/s/1bqOlUAr?fid=1002856157420219">天堂电影院</a></td><td>1988</td><td>9.1</td></tr><tr><td>Top29</td><td><a href="https://pan.baidu.com/s/1dE79wGx?fid=267490512661091">活着</a></td><td>1994</td><td>9.1</td></tr><tr><td>Top30</td><td><a href="https://pan.baidu.com/s/1ZszH2VXTSPUAqNo8By1lfA">少年派的奇幻漂流</a></td><td>2012</td><td>9.0</td></tr><tr><td>Top31</td><td><a href="https://pan.baidu.com/s/1IOy5uip6rYWhQsgbsxbB0g">十二怒汉</a></td><td>1957</td><td>9.4</td></tr><tr><td>Top32</td><td><a href="https://pan.baidu.com/s/1gNtiJXKiXQ9DH0goLVuA2Q">鬼子来了</a></td><td>2000</td><td>9.2</td></tr><tr><td>Top33</td><td><a href="https://pan.baidu.com/s/18wC7U?fid=254565905159819">指环王3：王者无敌</a></td><td>2003</td><td>9.1</td></tr><tr><td>Top34</td><td><a href="https://pan.baidu.com/s/15m0uRMjTz07_TZ88L2uTUA">控方证人</a></td><td>1957</td><td>9.6</td></tr><tr><td>Top35</td><td><a href="https://pan.baidu.com/s/1sjqhVGx?fid=906768803799193">搏击俱乐部</a></td><td>1999</td><td>9.0</td></tr><tr><td>Top36</td><td><a href="https://pan.baidu.com/s/12MgZrABxuQ-oPNJ9auTgVA">天空之城</a></td><td>1986</td><td>9.0</td></tr><tr><td>Top37</td><td><a href="https://pan.baidu.com/s/1Jc-0DcaIoJuUrtP2pH4vOg">飞屋环游记</a></td><td>2009</td><td>8.9</td></tr><tr><td>Top38</td><td><a href="https://pan.baidu.com/s/10raMk?fid=973205912028341">大话西游之月光宝盒</a></td><td>1995</td><td>8.9</td></tr><tr><td>Top39</td><td><a href="https://pan.baidu.com/s/13WJuB?fid=937467810241967">罗马假日</a></td><td>1953</td><td>9.0</td></tr><tr><td>Top40</td><td><a href="https://pan.baidu.com/s/1sl3D0Gd#list/path=%2F">摔跤吧！爸爸</a></td><td>2016</td><td>9.1</td></tr><tr><td>Top41</td><td><a href="https://pan.baidu.com/s/1TfnhXTgWsPub6HQwck3Oag">窃听风暴</a></td><td>2006</td><td>9.1</td></tr><tr><td>Top42</td><td><a href="https://pan.baidu.com/s/14u2gB?fid=263900955744687">辩护人</a></td><td>2013</td><td>9.2</td></tr><tr><td>Top43</td><td><a href="https://pan.baidu.com/share/link?shareid=558455183&uk=3623880440&fid=2141965982">两杆大烟枪</a></td><td>1998</td><td>9.1</td></tr><tr><td>Top44</td><td><a href="https://pan.baidu.com/s/1-9SOF2mFoQSseIntwx_N9Q?fid=754656724538878">闻香识女人</a></td><td>1992</td><td>9.0</td></tr><tr><td>Top45</td><td><a href="https://pan.baidu.com/s/1waI720ZTkEYh_KV_V102oQ">哈尔的移动城堡</a></td><td>2004</td><td>8.9</td></tr><tr><td>Top46</td><td><a href="https://pan.baidu.com/s/1ifJ7h4Q_RWCsMOeRFY_RbA">飞越疯人院</a></td><td>1975</td><td>9.0</td></tr><tr><td>Top47</td><td><a href="https://pan.baidu.com/s/1ge38MlH?fid=389555883875523">死亡诗社</a></td><td>1989</td><td>9.0</td></tr><tr><td>Top48</td><td><a href="https://pan.baidu.com/s/1Js4qCj2GEQ9DF9hgkDL4cw">V字仇杀队</a></td><td>2005</td><td>8.8</td></tr><tr><td>Top49</td><td><a href="https://pan.baidu.com/s/1gf4TipX?fid=309002731979882">海豚湾</a></td><td>2009</td><td>9.3</td></tr><tr><td>Top50</td><td><a href="https://pan.baidu.com/s/1gfPWl0n?fid=95543062299217">教父2</a></td><td>1974</td><td>9.1</td></tr><tr><td>Top51</td><td><a href="https://pan.baidu.com/s/15IgbR?fid=695943185158780">指环王2：双塔奇兵</a></td><td>2002</td><td>9.0</td></tr><tr><td>Top52</td><td><a href="https://pan.baidu.com/s/19f0HS?fid=803394449358026">指环王1：魔戒再现</a></td><td>2001</td><td>8.9</td></tr><tr><td>Top53</td><td><a href="https://pan.baidu.com/s/1Fo42K5QFS0ZLvnxFkmGVBQ">美丽心灵</a></td><td>2001</td><td>8.9</td></tr><tr><td>Top54</td><td><a href="https://pan.baidu.com/s/1_GEJ_CoHeQuqUFtyzrwDIg">饮食男女</a></td><td>1994</td><td>9.1</td></tr><tr><td>Top55</td><td><a href="https://pan.baidu.com/s/1O1Wi9V1ikEggIVpMMZSqZQ">情书</a></td><td>1995</td><td>8.8</td></tr><tr><td>Top56</td><td><a href="https://pan.baidu.com/s/1jIBD8iU?fid=241575748710910">素媛</a></td><td>2013</td><td>9.1</td></tr><tr><td>Top57</td><td><a href="https://pan.baidu.com/s/1acVbcpPFtCkuVaR0NuvVMA">狮子王</a></td><td>1994</td><td>8.9</td></tr><tr><td>Top58</td><td><a href="https://pan.baidu.com/s/1ISIPJI1CzZ0wyxgchU7ZUQ">钢琴家</a></td><td>2002</td><td>9.1</td></tr><tr><td>Top59</td><td><a href="https://pan.baidu.com/s/1Lr6zQTA94CbMXZP8CKePNA">美国往事</a></td><td>1984</td><td>9.1</td></tr><tr><td>Top60</td><td><a href="https://pan.baidu.com/s/1e62DBaMv9qaYgP960B0dpQ">小鞋子</a></td><td>1997</td><td>9.2</td></tr><tr><td>Top61</td><td><a href="https://pan.baidu.com/s/1K5Zgnm7DAFx_ZeNo18ayjA">七宗罪</a></td><td>1995</td><td>8.8</td></tr><tr><td>Top62</td><td><a href="https://pan.baidu.com/s/1eoFq0O4ZrFo3mBs_3jPajA">被嫌弃的松子的一生</a></td><td>2006</td><td>8.9</td></tr><tr><td>Top63</td><td><a href="https://pan.baidu.com/s/1KDC_qYq-nxCSAqZE0qDTIg">致命魔术</a></td><td>2006</td><td>8.8</td></tr><tr><td>Top64</td><td><a href="https://pan.baidu.com/s/19a04jR2acwbTx2ho1v8Ejg">本杰明·巴顿奇事</a></td><td>2008</td><td>8.8</td></tr><tr><td>Top65</td><td><a href="https://pan.baidu.com/s/1EwTT6TsO_yrrJxS0LVnOHw">末代皇帝</a></td><td>1987</td><td>9.0</td></tr><tr><td>Top66</td><td><a href="https://pan.baidu.com/s/1XnhKY7Hxon8IQoTgUsFT_A?fid=1096320857195922">西西里的美丽传说</a></td><td>2000</td><td>8.8</td></tr><tr><td>Top67</td><td><a href="https://pan.baidu.com/s/1453_7kpPiqeQnoG0LFiV5w">天使爱美丽</a></td><td>2001</td><td>8.7</td></tr><tr><td>Top68</td><td><a href="https://pan.baidu.com/s/1ysPw4189zFZBDFm_Pe2FVA">黑客帝国</a></td><td>1999</td><td>8.9</td></tr><tr><td>Top69</td><td><a href="https://pan.baidu.com/s/1AdCvtWEOE457L2mOCRJgPA">让子弹飞</a></td><td>2010</td><td>8.7</td></tr><tr><td>Top70</td><td><a href="https://pan.baidu.com/s/1KkAEvlGPBjVcS_3ugScM_A">拯救大兵瑞恩</a></td><td>1998</td><td>8.9</td></tr><tr><td>Top71</td><td><a href="https://pan.baidu.com/s/1bqFwEvl#list/path=%2F&parentPath=%2F%E6%88%91%E7%9A%84%E8%B5%84%E6%BA%90">看不见的客人</a></td><td>2016</td><td>8.7</td></tr><tr><td>Top72</td><td><a href="https://pan.baidu.com/s/1EAE2GMs5tCz09Proae6uyw">音乐之声</a></td><td>1965</td><td>8.9</td></tr><tr><td>Top73</td><td><a href="https://pan.baidu.com/s/1p_yW-ruXtEK5heKsFmQNUw">低俗小说</a></td><td>1994</td><td>8.8</td></tr><tr><td>Top74</td><td><a href="https://pan.baidu.com/s/1WVXAxAM0I2b8SNIjDMGE0Q">勇敢的心</a></td><td>1995</td><td>8.8</td></tr><tr><td>Top75</td><td><a href="https://pan.baidu.com/s/16XvuTxWzJh4s_w7-whqrOA">剪刀手爱德华</a></td><td>1990</td><td>8.7</td></tr><tr><td>Top76</td><td><a href="https://pan.baidu.com/s/1mlcerfQxK3WForgNa6SKwg">大闹天宫</a></td><td>1961196419782004</td><td>9.3</td></tr><tr><td>Top77</td><td><a href="https://pan.baidu.com/s/1pLgFPbX?fid=464690874078412">沉默的羔羊</a></td><td>1991</td><td>8.8</td></tr><tr><td>Top78</td><td><a href="https://pan.baidu.com/s/1x7yq0ULCJtAtMtuVDemGRA">蝴蝶效应</a></td><td>2004</td><td>8.7</td></tr><tr><td>Top79</td><td><a href="https://pan.baidu.com/s/1elizCqrt3kU7kHXjm_A-zQ">哈利·波特与魔法石</a></td><td>2001</td><td>8.8</td></tr><tr><td>Top80</td><td><a href="https://pan.baidu.com/s/1gfOcT2r?fid=35225760102993">春光乍泄</a></td><td>1997</td><td>8.8</td></tr><tr><td>Top81</td><td><a href="https://pan.baidu.com/s/1ZxEIADzr_rO3ZIDW5nGB3w">入殓师</a></td><td>2008</td><td>8.8</td></tr><tr><td>Top82</td><td><a href="https://pan.baidu.com/s/1bGhs44VwbBZEqaaelsz8GQ">心灵捕手</a></td><td>1997</td><td>8.8</td></tr><tr><td>Top83</td><td><a href="https://pan.baidu.com/s/13Lg1sGGb7aFN0oESt6F9Gw">猫鼠游戏</a></td><td>2002</td><td>8.8</td></tr><tr><td>Top84</td><td><a href="https://pan.baidu.com/s/1pIugxrDIO6fZn7kqF-T2pw?fid=360967812964633">布达佩斯大饭店</a></td><td>2014</td><td>8.8</td></tr><tr><td>Top85</td><td><a href="https://pan.baidu.com/s/15Lc06yp0Uu2-mrkDXa9V2g">禁闭岛</a></td><td>2010</td><td>8.7</td></tr><tr><td>Top86</td><td><a href="https://pan.baidu.com/s/1ZhGG3ccQiZmr2CJYr6BhEA">玛丽和马克思</a></td><td>2009</td><td>8.9</td></tr><tr><td>Top87</td><td><a href="https://pan.baidu.com/s/1GuL7JmjlihphuNpV5ENc_A">阳光灿烂的日子</a></td><td>1994</td><td>8.8</td></tr><tr><td>Top88</td><td><a href="https://pan.baidu.com/s/1gnDTK-Y2GV-ywPky8b75vg">第六感</a></td><td>1999</td><td>8.8</td></tr><tr><td>Top89</td><td><a href="https://pan.baidu.com/s/1iQ_obdzemXyp7sd9-YEsUA">幽灵公主</a></td><td>1997</td><td>8.8</td></tr><tr><td>Top90</td><td><a href="https://pan.baidu.com/s/17_MV94EH_TKT8XElVrGzFw">重庆森林</a></td><td>1994</td><td>8.7</td></tr><tr><td>Top91</td><td><a href="https://pan.baidu.com/s/1bA7IQEPDwSEQXmEbGhp1Jw">狩猎</a></td><td>2012</td><td>9.1</td></tr><tr><td>Top92</td><td><a href="https://pan.baidu.com/s/1XCZDkMDTvfSKOkPY-8VVDQ">致命ID</a></td><td>2003</td><td>8.7</td></tr><tr><td>Top93</td><td><a href="https://pan.baidu.com/s/1kd0rlbX-aAJsDZhzzjBusw">穿条纹睡衣的男孩</a></td><td>2008</td><td>8.9</td></tr><tr><td>Top94</td><td><a href="https://pan.baidu.com/s/1cCdglN-WrcOgcIKSsq9d_w">断背山</a></td><td>2005</td><td>8.7</td></tr><tr><td>Top95</td><td><a href="https://pan.baidu.com/s/1Z0TdybqvMFqiGf5AssaP_w">加勒比海盗</a></td><td>2003</td><td>8.6</td></tr><tr><td>Top96</td><td><a href="https://pan.baidu.com/s/1-tx2TPNbGAKQgId6fz8geA">大鱼</a></td><td>2003</td><td>8.7</td></tr><tr><td>Top97</td><td><a href="https://pan.baidu.com/s/126MI3BRV4xc8yPGveGHKzw">阿凡达</a></td><td>2009</td><td>8.6</td></tr><tr><td>Top98</td><td><a href="https://pan.baidu.com/s/1ef5Yb_O7HSUKAy_Gkr7zlg">摩登时代</a></td><td>1936</td><td>9.2</td></tr><tr><td>Top99</td><td><a href="https://pan.baidu.com/s/1ruqr3uwuVTYLIBv5XP77LQ">告白</a></td><td>2010</td><td>8.7</td></tr><tr><td>Top100</td><td><a href="https://pan.baidu.com/s/1QvOiIg25WAtGBpE88AbOGw">一一</a></td><td>2000</td><td>9.0</td></tr><tr><td>Top101</td><td><a href="">射雕英雄传之东成西就</a></td><td>1993</td><td>8.7</td></tr><tr><td>Top102</td><td><a href="">甜蜜蜜</a></td><td>1996</td><td>8.8</td></tr><tr><td>Top103</td><td><a href="">阳光姐妹淘</a></td><td>2011</td><td>8.8</td></tr><tr><td>Top104</td><td><a href="">消失的爱人</a></td><td>2014</td><td>8.7</td></tr><tr><td>Top105</td><td><a href="">爱在黎明破晓前</a></td><td>1995</td><td>8.7</td></tr><tr><td>Top106</td><td><a href="">上帝之城</a></td><td>2002</td><td>8.9</td></tr><tr><td>Top107</td><td><a href="">小森林 夏秋篇</a></td><td>2014</td><td>8.9</td></tr><tr><td>Top108</td><td><a href="">侧耳倾听</a></td><td>1995</td><td>8.8</td></tr><tr><td>Top109</td><td><a href="">喜剧之王</a></td><td>1999</td><td>8.6</td></tr><tr><td>Top110</td><td><a href="">倩女幽魂</a></td><td>1987</td><td>8.6</td></tr><tr><td>Top111</td><td><a href="">恐怖直播</a></td><td>2013</td><td>8.7</td></tr><tr><td>Top112</td><td><a href="">风之谷</a></td><td>1984</td><td>8.8</td></tr><tr><td>Top113</td><td><a href="">爱在日落黄昏时</a></td><td>2004</td><td>8.8</td></tr><tr><td>Top114</td><td><a href="">超脱</a></td><td>2011</td><td>8.8</td></tr><tr><td>Top115</td><td><a href="">红辣椒</a></td><td>2006</td><td>8.9</td></tr><tr><td>Top116</td><td><a href="">菊次郎的夏天</a></td><td>1999</td><td>8.8</td></tr><tr><td>Top117</td><td><a href="">驯龙高手</a></td><td>2010</td><td>8.7</td></tr><tr><td>Top118</td><td><a href="">幸福终点站</a></td><td>2004</td><td>8.7</td></tr><tr><td>Top119</td><td><a href="">神偷奶爸</a></td><td>2010</td><td>8.5</td></tr><tr><td>Top120</td><td><a href="">借东西的小人阿莉埃蒂</a></td><td>2010</td><td>8.7</td></tr><tr><td>Top121</td><td><a href="">杀人回忆</a></td><td>2003</td><td>8.7</td></tr><tr><td>Top122</td><td><a href="">七武士</a></td><td>1954</td><td>9.2</td></tr><tr><td>Top123</td><td><a href="">岁月神偷</a></td><td>2010</td><td>8.6</td></tr><tr><td>Top124</td><td><a href="">请以你的名字呼唤我</a></td><td>2017</td><td>8.8</td></tr><tr><td>Top125</td><td><a href="">萤火虫之墓</a></td><td>1988</td><td>8.7</td></tr><tr><td>Top126</td><td><a href="">怪兽电力公司</a></td><td>2001</td><td>8.6</td></tr><tr><td>Top127</td><td><a href="">小森林 冬春篇</a></td><td>2015</td><td>9.0</td></tr><tr><td>Top128</td><td><a href="">哈利·波特与死亡圣器(下)</a></td><td>2011</td><td>8.7</td></tr><tr><td>Top129</td><td><a href="">谍影重重3</a></td><td>2007</td><td>8.7</td></tr><tr><td>Top130</td><td><a href="">喜宴</a></td><td>1993</td><td>8.8</td></tr><tr><td>Top131</td><td><a href="">东邪西毒</a></td><td>1994</td><td>8.6</td></tr><tr><td>Top132</td><td><a href="">电锯惊魂</a></td><td>2004</td><td>8.7</td></tr><tr><td>Top133</td><td><a href="">贫民窟的百万富翁</a></td><td>2008</td><td>8.5</td></tr><tr><td>Top134</td><td><a href="">疯狂原始人</a></td><td>2013</td><td>8.7</td></tr><tr><td>Top135</td><td><a href="">记忆碎片</a></td><td>2000</td><td>8.6</td></tr><tr><td>Top136</td><td><a href="">7号房的礼物</a></td><td>2013</td><td>8.7</td></tr><tr><td>Top137</td><td><a href="">黑天鹅</a></td><td>2010</td><td>8.5</td></tr><tr><td>Top138</td><td><a href="">萤火之森</a></td><td>2011</td><td>8.8</td></tr><tr><td>Top139</td><td><a href="">真爱至上</a></td><td>2003</td><td>8.5</td></tr><tr><td>Top140</td><td><a href="">英雄本色</a></td><td>1986</td><td>8.6</td></tr><tr><td>Top141</td><td><a href="">超能陆战队</a></td><td>2014</td><td>8.6</td></tr><tr><td>Top142</td><td><a href="">雨人</a></td><td>1988</td><td>8.6</td></tr><tr><td>Top143</td><td><a href="">心迷宫</a></td><td>2014</td><td>8.7</td></tr><tr><td>Top144</td><td><a href="">蝙蝠侠：黑暗骑士崛起</a></td><td>2012</td><td>8.6</td></tr><tr><td>Top145</td><td><a href="">卢旺达饭店</a></td><td>2004</td><td>8.9</td></tr><tr><td>Top146</td><td><a href="">唐伯虎点秋香</a></td><td>1993</td><td>8.5</td></tr><tr><td>Top147</td><td><a href="">海洋</a></td><td>2009</td><td>9.0</td></tr><tr><td>Top148</td><td><a href="">傲慢与偏见</a></td><td>2005</td><td>8.5</td></tr><tr><td>Top149</td><td><a href="">荒蛮故事</a></td><td>2014</td><td>8.8</td></tr><tr><td>Top150</td><td><a href="">纵横四海</a></td><td>1991</td><td>8.7</td></tr><tr><td>Top151</td><td><a href="">海边的曼彻斯特</a></td><td>2016</td><td>8.6</td></tr><tr><td>Top152</td><td><a href="">教父3</a></td><td>1990</td><td>8.8</td></tr><tr><td>Top153</td><td><a href="">虎口脱险</a></td><td>1966</td><td>8.9</td></tr><tr><td>Top154</td><td><a href="">无人知晓</a></td><td>2004</td><td>9.1</td></tr><tr><td>Top155</td><td><a href="">时空恋旅人</a></td><td>2013</td><td>8.7</td></tr><tr><td>Top156</td><td><a href="">完美的世界</a></td><td>1993</td><td>9.0</td></tr><tr><td>Top157</td><td><a href="">寻梦环游记</a></td><td>2017</td><td>9.0</td></tr><tr><td>Top158</td><td><a href="">玩具总动员3</a></td><td>2010</td><td>8.8</td></tr><tr><td>Top159</td><td><a href="">燃情岁月</a></td><td>1994</td><td>8.7</td></tr><tr><td>Top160</td><td><a href="">花样年华</a></td><td>2000</td><td>8.5</td></tr><tr><td>Top161</td><td><a href="">恋恋笔记本</a></td><td>2004</td><td>8.5</td></tr><tr><td>Top162</td><td><a href="">达拉斯买家俱乐部</a></td><td>2013</td><td>8.7</td></tr><tr><td>Top163</td><td><a href="">血战钢锯岭</a></td><td>2016</td><td>8.7</td></tr><tr><td>Top164</td><td><a href="">二十二</a></td><td>2015</td><td>8.7</td></tr><tr><td>Top165</td><td><a href="">雨中曲</a></td><td>1952</td><td>9.0</td></tr><tr><td>Top166</td><td><a href="">魂断蓝桥</a></td><td>1940</td><td>8.8</td></tr><tr><td>Top167</td><td><a href="">穿越时空的少女</a></td><td>2006</td><td>8.6</td></tr><tr><td>Top168</td><td><a href="">猜火车</a></td><td>1996</td><td>8.5</td></tr><tr><td>Top169</td><td><a href="">我是山姆</a></td><td>2001</td><td>8.8</td></tr><tr><td>Top170</td><td><a href="">冰川时代</a></td><td>2002</td><td>8.5</td></tr><tr><td>Top171</td><td><a href="">人工智能</a></td><td>2001</td><td>8.6</td></tr><tr><td>Top172</td><td><a href="">爆裂鼓手</a></td><td>2014</td><td>8.6</td></tr><tr><td>Top173</td><td><a href="">头脑特工队</a></td><td>2015</td><td>8.7</td></tr><tr><td>Top174</td><td><a href="">被解救的姜戈</a></td><td>2012</td><td>8.6</td></tr><tr><td>Top175</td><td><a href="">未麻的部屋</a></td><td>1997</td><td>8.8</td></tr><tr><td>Top176</td><td><a href="">罗生门</a></td><td>1950</td><td>8.7</td></tr><tr><td>Top177</td><td><a href="">浪潮</a></td><td>2008</td><td>8.7</td></tr><tr><td>Top178</td><td><a href="">香水</a></td><td>2006</td><td>8.4</td></tr><tr><td>Top179</td><td><a href="">朗读者</a></td><td>2008</td><td>8.5</td></tr><tr><td>Top180</td><td><a href="">阿飞正传</a></td><td>1990</td><td>8.5</td></tr><tr><td>Top181</td><td><a href="">你的名字。</a></td><td>2016</td><td>8.4</td></tr><tr><td>Top182</td><td><a href="">房间</a></td><td>2015</td><td>8.8</td></tr><tr><td>Top183</td><td><a href="">可可西里</a></td><td>2004</td><td>8.7</td></tr><tr><td>Top184</td><td><a href="">恐怖游轮</a></td><td>2009</td><td>8.4</td></tr><tr><td>Top185</td><td><a href="">模仿游戏</a></td><td>2014</td><td>8.6</td></tr><tr><td>Top186</td><td><a href="">一个叫欧维的男人决定去死</a></td><td>2015</td><td>8.8</td></tr><tr><td>Top187</td><td><a href="">一次别离</a></td><td>2011</td><td>8.7</td></tr><tr><td>Top188</td><td><a href="">忠犬八公物语</a></td><td>1987</td><td>9.1</td></tr><tr><td>Top189</td><td><a href="">战争之王</a></td><td>2005</td><td>8.6</td></tr><tr><td>Top190</td><td><a href="">追随</a></td><td>1998</td><td>8.9</td></tr><tr><td>Top191</td><td><a href="">魔女宅急便</a></td><td>1989</td><td>8.5</td></tr><tr><td>Top192</td><td><a href="">撞车</a></td><td>2004</td><td>8.6</td></tr><tr><td>Top193</td><td><a href="">谍影重重</a></td><td>2002</td><td>8.5</td></tr><tr><td>Top194</td><td><a href="">完美陌生人</a></td><td>2016</td><td>8.6</td></tr><tr><td>Top195</td><td><a href="">地球上的星星</a></td><td>2007</td><td>8.9</td></tr><tr><td>Top196</td><td><a href="">牯岭街少年杀人事件</a></td><td>1991</td><td>8.8</td></tr><tr><td>Top197</td><td><a href="">谍影重重2</a></td><td>2004</td><td>8.6</td></tr><tr><td>Top198</td><td><a href="">哪吒闹海</a></td><td>1979</td><td>8.9</td></tr><tr><td>Top199</td><td><a href="">惊魂记</a></td><td>1960</td><td>8.9</td></tr><tr><td>Top200</td><td><a href="">青蛇</a></td><td>1993</td><td>8.5</td></tr><tr><td>Top201</td><td><a href="">梦之安魂曲</a></td><td>2000</td><td>8.7</td></tr><tr><td>Top202</td><td><a href="">无敌破坏王</a></td><td>2012</td><td>8.7</td></tr><tr><td>Top203</td><td><a href="">黑客帝国3：矩阵革命</a></td><td>2003</td><td>8.6</td></tr><tr><td>Top204</td><td><a href="">小萝莉的猴神大叔</a></td><td>2015</td><td>8.5</td></tr><tr><td>Top205</td><td><a href="">再次出发之纽约遇见你</a></td><td>2013</td><td>8.5</td></tr><tr><td>Top206</td><td><a href="">海街日记</a></td><td>2015</td><td>8.7</td></tr><tr><td>Top207</td><td><a href="">新龙门客栈</a></td><td>1992</td><td>8.5</td></tr><tr><td>Top208</td><td><a href="">东京物语</a></td><td>1953</td><td>9.2</td></tr><tr><td>Top209</td><td><a href="">步履不停</a></td><td>2008</td><td>8.8</td></tr><tr><td>Top210</td><td><a href="">终结者2：审判日</a></td><td>1991</td><td>8.6</td></tr><tr><td>Top211</td><td><a href="">源代码</a></td><td>2011</td><td>8.4</td></tr><tr><td>Top212</td><td><a href="">初恋这件小事</a></td><td>2010</td><td>8.3</td></tr><tr><td>Top213</td><td><a href="">绿里奇迹</a></td><td>1999</td><td>8.7</td></tr><tr><td>Top214</td><td><a href="">城市之光</a></td><td>1931</td><td>9.2</td></tr><tr><td>Top215</td><td><a href="">末路狂花</a></td><td>1991</td><td>8.7</td></tr><tr><td>Top216</td><td><a href="">爱在午夜降临前</a></td><td>2013</td><td>8.8</td></tr><tr><td>Top217</td><td><a href="">疯狂的石头</a></td><td>2006</td><td>8.3</td></tr><tr><td>Top218</td><td><a href="">秒速5厘米</a></td><td>2007</td><td>8.3</td></tr><tr><td>Top219</td><td><a href="">无耻混蛋</a></td><td>2009</td><td>8.5</td></tr><tr><td>Top220</td><td><a href="">这个男人来自地球</a></td><td>2007</td><td>8.5</td></tr><tr><td>Top221</td><td><a href="">勇闯夺命岛</a></td><td>1996</td><td>8.6</td></tr><tr><td>Top222</td><td><a href="">E.T. 外星人</a></td><td>1982</td><td>8.5</td></tr><tr><td>Top223</td><td><a href="">碧海蓝天</a></td><td>1988</td><td>8.7</td></tr><tr><td>Top224</td><td><a href="">变脸</a></td><td>1997</td><td>8.4</td></tr><tr><td>Top225</td><td><a href="">卡萨布兰卡</a></td><td>1942</td><td>8.6</td></tr><tr><td>Top226</td><td><a href="">黄金三镖客</a></td><td>1966</td><td>9.1</td></tr><tr><td>Top227</td><td><a href="">发条橙</a></td><td>1971</td><td>8.5</td></tr><tr><td>Top228</td><td><a href="">彗星来的那一夜</a></td><td>2013</td><td>8.4</td></tr><tr><td>Top229</td><td><a href="">聚焦</a></td><td>2015</td><td>8.8</td></tr><tr><td>Top230</td><td><a href="">海盗电台</a></td><td>2009</td><td>8.6</td></tr><tr><td>Top231</td><td><a href="">美国丽人</a></td><td>1999</td><td>8.5</td></tr><tr><td>Top232</td><td><a href="">血钻</a></td><td>2006</td><td>8.5</td></tr><tr><td>Top233</td><td><a href="">非常嫌疑犯</a></td><td>1995</td><td>8.6</td></tr><tr><td>Top234</td><td><a href="">国王的演讲</a></td><td>2010</td><td>8.3</td></tr><tr><td>Top235</td><td><a href="">荒野生存</a></td><td>2007</td><td>8.6</td></tr><tr><td>Top236</td><td><a href="">英国病人</a></td><td>1996</td><td>8.5</td></tr><tr><td>Top237</td><td><a href="">黑鹰坠落</a></td><td>2001</td><td>8.6</td></tr><tr><td>Top238</td><td><a href="">我爱你</a></td><td>2011</td><td>9.0</td></tr><tr><td>Top239</td><td><a href="">迁徙的鸟</a></td><td>2001</td><td>9.1</td></tr><tr><td>Top240</td><td><a href="">遗愿清单</a></td><td>2007</td><td>8.5</td></tr><tr><td>Top241</td><td><a href="">勇士</a></td><td>2011</td><td>8.9</td></tr><tr><td>Top242</td><td><a href="">荒岛余生</a></td><td>2000</td><td>8.5</td></tr><tr><td>Top243</td><td><a href="">2001太空漫游</a></td><td>1968</td><td>8.7</td></tr><tr><td>Top244</td><td><a href="">枪火</a></td><td>1999</td><td>8.7</td></tr><tr><td>Top245</td><td><a href="">燕尾蝶</a></td><td>1996</td><td>8.6</td></tr><tr><td>Top246</td><td><a href="">叫我第一名</a></td><td>2008</td><td>8.6</td></tr><tr><td>Top247</td><td><a href="">穆赫兰道</a></td><td>2001</td><td>8.3</td></tr><tr><td>Top248</td><td><a href="">千钧一发</a></td><td>1997</td><td>8.7</td></tr><tr><td>Top249</td><td><a href="">大卫·戈尔的一生</a></td><td>2003</td><td>8.6</td></tr><tr><td>Top250</td><td><a href="">上帝也疯狂</a></td><td>1980</td><td>8.7</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公众号文章 </tag>
            
            <tag> Top电影 </tag>
            
            <tag> 电仪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo+GitHub 搭建个人博客</title>
      <link href="/2018/11/28/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/11/28/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>昨天偶然看见一篇有关使用Hexo搭建个人博客的文章，瞬间吸引我的注意。今天使用的一天的时间在GitHub上搭建了一个个人博客，感觉还不错，分享给大家，并记录下我搭建过程中趟过的坑</p><p>环境：Win10 + Hexo + GitHub</p><p>效果展示：<a href="https://xiongtianci-tc.github.io/">脚印的博客</a></p></blockquote><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="1-了解Hexo"><a href="#1-了解Hexo" class="headerlink" title="1. 了解Hexo"></a>1. 了解Hexo</h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>官方文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p><h2 id="2-搭建Node-js环境"><a href="#2-搭建Node-js环境" class="headerlink" title="2. 搭建Node.js环境"></a>2. 搭建Node.js环境</h2><p>Hexo基于Node.js环境，那么我们搭建博客网站首先需要安装Node.js环境</p><p>下载地址：<a href="http://nodejs.cn/download">http://nodejs.cn/download</a></p><p>详细安装文档：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html">http://www.runoob.com/nodejs/nodejs-install-setup.html</a></p><p>测试安装：命令行使用 <code>node -v</code> 、<code>npm -v</code>，查看显示版本号即成功。如下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543458424692.png" alt="1543458424692"> </p><h2 id="3-注册Github账号"><a href="#3-注册Github账号" class="headerlink" title="3. 注册Github账号"></a>3. 注册Github账号</h2><p>这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用gitHub同步我们个人博客的相关文件</p><p>注册地址：<a href="https://github.com/">https://github.com</a><br>注册流程：<a href="https://blog.csdn.net/p10010/article/details/51336332">https://blog.csdn.net/p10010/article/details/51336332</a></p><blockquote><p>注意：注册Github的时候一定要选择一个合适的名字，因为后来博客网站的域名也会用到这个名字。虽然Github用户名支持后期修改，但是还是会带来很多不必要的麻烦</p></blockquote><h2 id="4-安装Git版本工具"><a href="#4-安装Git版本工具" class="headerlink" title="4. 安装Git版本工具"></a>4. 安装Git版本工具</h2><blockquote><p>使用Git可以帮助我们把本地的网页和文章等内容提交到Gihub上，实现同步</p></blockquote><ul><li><p>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>Windows系统需下载，Mac系统因为自带Git无需操作</p><p>详细安装文档：<a href="https://blog.csdn.net/u013295518/article/details/78746007">https://blog.csdn.net/u013295518/article/details/78746007</a></p><p>测试安装：<code>git --version</code>，查看显示版本号即成功。如下图：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543458907014.png" alt="1543458907014"> </p></li><li><p>配置SSH：<a href="https://blog.csdn.net/qq_35246620/article/details/69061355">https://blog.csdn.net/qq_35246620/article/details/69061355</a></p><p>SSH key添加之后，就可以在本机git bash中进行测试，输入<code>ssh -T git@github.com</code>进行测试</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543476938196.png" alt="1543476938196"> </p><p>显示 <code>Hi username ！You&#39;ve successfully...</code> 说明ssh配置成功了</p></li></ul><h2 id="5-在本地安装-Hexo"><a href="#5-在本地安装-Hexo" class="headerlink" title="5. 在本地安装 Hexo"></a>5. 在本地安装 Hexo</h2><blockquote><p>Hexo是一个建站工具，可以帮助我们快速生成基本的博客文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><blockquote><p>注意：在回车之后，可能会出现一行WARN的警告语句，不用管它，这个不妨碍安装</p><p>过一段时间如果出现hexo版本号之类的语句就代表差不多了</p></blockquote><p>然后输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>这个时候你会看到命令行出现了一堆白字，紧接着输入<code>hexo v</code>查看是否安装成功：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543477381834.png" alt="1543477381834"> </p><p>此时，Hexo已经安装完成</p><h1 id="二、搭建博客"><a href="#二、搭建博客" class="headerlink" title="二、搭建博客"></a>二、搭建博客</h1><h2 id="1-开启GitHub-Pages服务"><a href="#1-开启GitHub-Pages服务" class="headerlink" title="1. 开启GitHub Pages服务"></a>1. 开启GitHub Pages服务</h2><p>搭建我们的个人博客需要一个唯一的域名，当然我们可以申请购买一个域名来使用，但是在不是太必要的情况下，我们也可以通过Github Pages获得一个免费使用的域名，这需要我们在Github上新建一个仓库，如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543474709681.png" alt="1543474709681"></p><p>这个过程和建立普通的仓库没什么区别，关键在于新仓库的名字，一定要是：</p><blockquote><p>仓库名固定：你的github的username.github.io</p></blockquote><p> 这也是之前强调的要起一个好的用户名的原因。这样之后我们最后的博客网站的链接就会是：<code>https://UserName.github.io</code>的形式。</p><p>点击<code>Create Repository</code>后，选着仓库的<code>Setting</code>进入设置</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543476148226.png" alt="1543476148226"></p><p>往下滑找到 <code>Github Pages</code> 如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543477847990.png" alt="1543477847990"></p><p>这里我们需要点击 <code>Choose a theme</code> 任意选择一个选择主题，然后界面会跳转到仓库，我们看到有两个文件如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543477980475.png" alt="1543477980475"></p><p>点击 <code>Select theme</code> 选着主题后，此时若再查看setting，我们会看到开启GitHub Pages之后得到的域名如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543478176563.png" alt="1543478176563"></p><p>输入你的 GitHub 的用户名和密码，成功后复制<code>https://username.github.io/</code>到浏览器打开就行。看！这就是你的博客了，只要能连接到互联网，就能随时查看它(๑•̀ㅂ•́)و✧！</p><h2 id="2-创建本地博客站点"><a href="#2-创建本地博客站点" class="headerlink" title="2. 创建本地博客站点"></a>2. 创建本地博客站点</h2><p>上述的步骤相当于我们使用Github page，创建了一个默认的博客页，并且得到了一个可外部访问的域名。但是这个博客页很Low。我们的目的是创建自己个性化的博客网站，所以我们使用Hexo在本地先创建一个本地博客站点，优化后再把它部署到github上。接下来我们使用控制台命令在本地一个合适的位置创建博客站点文件夹如下：</p><blockquote><p>hexo init  myHexoBlog       &#x2F;&#x2F;myHexoBlog是项目名</p></blockquote><p>等一会，如果出现橙色的 <strong>WARN</strong> 没关系，只要不出现红色的 <strong>ERROR</strong> 就行。好了后，输入命令：</p><blockquote><p> hexo g  &#x2F;&#x2F;g是generetor的缩写，生成博客</p><p> hexo s &#x2F;&#x2F;s是server的缩写，启动服务</p></blockquote><p>然后点开 <a href="http://localhost:4000/">http://localhost:4000/</a> ，恭喜你！已经在本地搭建好博客了(๑•̀ㅂ•́)و✧！</p><h2 id="3-同步Github-允许公共访问"><a href="#3-同步Github-允许公共访问" class="headerlink" title="3. 同步Github,允许公共访问"></a>3. 同步Github,允许公共访问</h2><p>在本地我们已经搭建了博客，但是还只能自己本地访问。若要别人也能看到，那就需要我们将其同步部署到GitHub上了。还记得我们之前准备的Github仓库吗，这里就要用到了。<br>首先找到我们的博客仓库，并拷贝仓库地址：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543480461386.png" alt="1543480461386"></p><p>然后修改本地博客目录的配置：<br>修改本地博客根目录下的<code>_config.yml</code>文件，修改<code>deploy</code>下的配置，如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543480729831.png" alt="1543480729831"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:xiongtianci-tc/xiongtianci-tc.github.io.git #复制的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li>repository后面的内容是 <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#98;&#117;&#x62;&#x2e;&#99;&#111;&#109;">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#98;&#117;&#x62;&#x2e;&#99;&#111;&#109;</a>:username&#x2F;库地址 的形式</li><li>type、repository、branch冒号的后面都有一个空格（切记~~）</li></ol></blockquote><p>最后执行控制台命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save //安装部署插件</span><br><span class="line"></span><br><span class="line">hexo d //部署到github</span><br></pre></td></tr></table></figure><p>现在，我们再次访问链接：<code>https://userName.github.io</code>，就会发现这里的界面和本地的一样了。如此一来我们搭建的个人博客网站就基本完成了。</p><h1 id="三、发布你的第一篇博客"><a href="#三、发布你的第一篇博客" class="headerlink" title="三、发布你的第一篇博客"></a>三、发布你的第一篇博客</h1><p>终于可以发布自己的第一篇博客了，是不是很激动？（博主当时可是超级激动的~）<br>首先，在本地博客文件夹根目录输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;我个人博客的第一篇博客，激动~&quot;</span><br><span class="line">hexo g   //生成网页</span><br><span class="line">hexo d  //部署到远端(github)</span><br></pre></td></tr></table></figure><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543481316715.png" alt="1543481316715"> </p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543481394185.png" alt="1543481394185"> </p><p>现在打开我们的博客网站：<code>http://UserName.github.io</code>,会看到网页如下(可能需要刷新几次页面)：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543483567301.png" alt="1543483567301"></p><p>需要编写博客内容时，只需编写本地博客的 <code>_posts</code> 的博客原文，然后通过 <code>hexo g &amp;&amp; hexo d</code> 重新部署到github即可</p><h1 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h1><p>此时，我们的个人博客已经搭建完成。但是我们需要网站更加高大上，更加美观些，我们可以通过更换主题来实现个性化博客</p><p>这里以使用github上的next主题为例：</p><h2 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1. 下载主题"></a>1. 下载主题</h2><p>next主题：<a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></p><p>在控制台中切换到本地博客根目录输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git clone --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>下载成之后我们会看到next的主题已经存在 <code>thems</code> 里了如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543484274020.png" alt="1543484274020"> </p><h2 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2. 更换主题"></a>2. 更换主题</h2><p>修改博客根目录(不是next主题)下的 <code>_config.yml</code> 文件，搜索 <code>theme</code> 字段，并将其值修改为 <code>next</code></p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543484383922.png" alt="1543484383922"> </p><p>然后在控制台下输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean  //清理缓存</span><br><span class="line">hexo g    //重新生成博客代码</span><br><span class="line">hexo d   //部署到本地</span><br><span class="line">// 或者直接输入：hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>再次打开我们的博客网站：<code>https://UserName.github.io</code>，将会发现我们的博客主题已经发生了改变</p><h1 id="五、个性化"><a href="#五、个性化" class="headerlink" title="五、个性化"></a>五、个性化</h1><p>通过此步骤我们可以设置博客的作者、格言、语言…</p><blockquote><p>在Hexo中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项</p></blockquote><h2 id="1-站点配置"><a href="#1-站点配置" class="headerlink" title="1. 站点配置"></a>1. 站点配置</h2><p>在本地的博客根目录下找到_config.yml，用编辑器打开进行内容的设置，如下：</p><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181128/1543485321688.png" alt="1543485321688"></p><p>这里可以修改博客网站的标题、描述，语言等属性</p><h2 id="2-主题设置"><a href="#2-主题设置" class="headerlink" title="2. 主题设置"></a>2. 主题设置</h2><p>网上有个超级详细的教程，我就不赘述了：</p><p>文档地址：<a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></p><hr><p>终于结束了，</p><p>最后，</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java中的&amp;#92;t&amp;#92;r&amp;#92;n&amp;#92;b(Java转义字符)分别是什么？</title>
      <link href="/2018/11/27/java%E4%B8%AD%E7%9A%84-t-r-n-b(Java%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6)%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
      <url>/2018/11/27/java%E4%B8%AD%E7%9A%84-t-r-n-b(Java%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6)%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>转义序列</th><th>描述</th></tr></thead><tbody><tr><td><code>\b</code></td><td>退格符(Backspace)</td></tr><tr><td><code>\t</code></td><td>水平制表符(相当于tab，缩进)</td></tr><tr><td><code>\n</code></td><td>换行符</td></tr><tr><td><code>\f</code></td><td>换页符</td></tr><tr><td><code>\r</code></td><td>回车符</td></tr><tr><td><code>\&quot;</code></td><td>转义<code>&quot;</code></td></tr><tr><td><code>\\</code></td><td>转义<code>\</code></td></tr></tbody></table><hr><table><thead><tr><th>转义序列</th><th>描述</th></tr></thead><tbody><tr><td><code>\xxx</code></td><td>转义Latin-1编码<br/><strong>xxx</strong> 是八进制数，介于 <strong>000</strong> 到 <strong>377</strong> 之间。其中 <code>\x</code> 和 <code>\xx</code> 两种形式也是合法的，例如 <code>\0</code>，但不推荐这么用，因为转义序列只有一个数字，在字符串常量中会导致歧义。这种用法在 <code>\uxxxx</code> 中也不鼓励使用</td></tr><tr><td><code>\uxxxx</code></td><td>转义Unicode编码<br/><strong>xxxx</strong> 是四个十六进制数</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Notepad++替换某一特定中文后面的所有内容</title>
      <link href="/2018/11/27/%E4%BD%BF%E7%94%A8Notepad++%E6%9B%BF%E6%8D%A2%E6%9F%90%E4%B8%80%E7%89%B9%E5%AE%9A%E4%B8%AD%E6%96%87%E5%90%8E%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9/"/>
      <url>/2018/11/27/%E4%BD%BF%E7%94%A8Notepad++%E6%9B%BF%E6%8D%A2%E6%9F%90%E4%B8%80%E7%89%B9%E5%AE%9A%E4%B8%AD%E6%96%87%E5%90%8E%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="需求：删除”电影描述”以及其后面的内容"><a href="#需求：删除”电影描述”以及其后面的内容" class="headerlink" title="需求：删除”电影描述”以及其后面的内容"></a>需求：删除”电影描述”以及其后面的内容</h3><blockquote><p>Top1 肖申克的救赎    评分：9.6    电影描述：希望让人自由<br>Top2 霸王别姬    评分：9.5    电影描述：风华绝代<br>Top3 这个杀手不太冷    评分：9.4    电影描述：怪蜀黍和小萝莉不得不说的故事<br>Top4 阿甘正传    评分：9.4    电影描述：一部美国近现代史<br>Top5 美丽人生    评分：9.5    电影描述：最美的谎言<br>Top6 千与千寻    评分：9.2    电影描述：最好的宫崎骏，最好的久石让<br>Top7 泰坦尼克号    评分：9.2    电影描述：失去的才是永恒的<br>Top8 辛德勒的名单    评分：9.4    电影描述：拯救一个人，就是拯救整个世界<br>Top9 盗梦空间    评分：9.3    电影描述：诺兰给了我们一场无法盗取的梦<br>Top10 机器人总动员    评分：9.3    电影描述：小瓦力，大人生<br>Top11 海上钢琴师    评分：9.2    电影描述：每个人都要走一条自己坚定了的路，就算是粉身碎骨<br>Top12 三傻大闹宝莱坞    评分：9.1    电影描述：英俊版憨豆，高情商版谢耳朵<br>Top13 忠犬八公的故事    评分：9.2    电影描述：永远都不能忘记你所爱的人<br>Top14 放牛班的春天    评分：9.2    电影描述：天籁一般的童声，是最接近上帝的存在<br>Top15 大话西游之大圣娶亲    评分：9.2    电影描述：一生所爱</p></blockquote><br/><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><ol><li>Ctrl+R 打开替换窗口</li><li>在”查找目标”中输入：特定字符.*</li><li>选择右下角的”正则表达式”</li><li>点击”全部替换”<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181127/20181127104259536.png" alt="在这里插入图片描述"></li></ol><br/><h3 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h3><blockquote><p>Top1 肖申克的救赎    评分：9.6<br>Top2 霸王别姬    评分：9.5<br>Top3 这个杀手不太冷    评分：9.4<br>Top4 阿甘正传    评分：9.4<br>Top5 美丽人生    评分：9.5<br>Top6 千与千寻    评分：9.2<br>Top7 泰坦尼克号    评分：9.2<br>Top8 辛德勒的名单    评分：9.4<br>Top9 盗梦空间    评分：9.3<br>Top10 机器人总动员    评分：9.3<br>Top11 海上钢琴师    评分：9.2<br>Top12 三傻大闹宝莱坞    评分：9.1<br>Top13 忠犬八公的故事    评分：9.2<br>Top14 放牛班的春天    评分：9.2<br>Top15 大话西游之大圣娶亲    评分：9.2  </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Notepad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10常用快捷键</title>
      <link href="/2018/11/26/win10%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2018/11/26/win10%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Alt + F4</td><td>关闭活动项，或者退出活动应用</td></tr><tr><td>Alt + Tab</td><td>在打开的应用之间切换</td></tr><tr><td>Win + L</td><td>锁定电脑</td></tr><tr><td>Win + D</td><td>显示和隐藏桌面</td></tr><tr><td>Ctrl + D（或 Delete）</td><td>删除选定项并将其移动到“回收站”</td></tr></tbody></table><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Win + A</td><td>打开操作中心</td></tr><tr><td>Win + E</td><td>打开文件资源管理器</td></tr><tr><td>Win + I</td><td>打开Windows设置</td></tr><tr><td>Win + Q &#x2F; Win + S</td><td>打开Cortana</td></tr><tr><td>Win + R</td><td>打开运行</td></tr><tr><td>Win + L</td><td>锁定笔记本</td></tr><tr><td>Ctrl + Shift + Esc</td><td>打开任务管理器</td></tr><tr><td>Win + X</td><td>打开开始菜单左侧选项</td></tr><tr><td>Win + 加号</td><td>打开放大镜并放大屏幕内容</td></tr><tr><td>Win + 减号</td><td>打开放大镜并缩小屏幕内容</td></tr><tr><td>Win + Esc</td><td>退出放大镜</td></tr></tbody></table><h1 id="运行-Win-R-的常用命令"><a href="#运行-Win-R-的常用命令" class="headerlink" title="运行(Win+R)的常用命令"></a>运行(Win+R)的常用命令</h1><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>notepad</td><td>打开记事本</td></tr><tr><td>calc</td><td>打开计算器</td></tr><tr><td>mspaint</td><td>打开画图</td></tr><tr><td>osk</td><td>打开虚拟键盘</td></tr><tr><td>sysdm.cpl</td><td>打开系统设置（常用于配置环境变量）</td></tr><tr><td>appwiz.cpl</td><td>打开控制面板（常用于卸载程序）</td></tr><tr><td>psr.exe</td><td>打开步骤记录器（常用于记录操作步骤）</td></tr><tr><td>cmd</td><td>打开命令行窗口</td></tr></tbody></table><h1 id="管理窗口"><a href="#管理窗口" class="headerlink" title="管理窗口"></a>管理窗口</h1><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Win + D</td><td>最小化所有窗口，重复按下可还原</td></tr><tr><td>Win + 1…9</td><td>打开任务栏对应窗口</td></tr><tr><td>Win + T</td><td>将焦点切换到任务栏图标，并在图标之间进行切换</td></tr><tr><td>Win + 上&#x2F;下</td><td>使窗口在最大化，正常状态以及最小化之间切换</td></tr><tr><td>Win + 左&#x2F;右</td><td>使窗口在左半屏幕，正常状态以及右半屏幕之间切换</td></tr><tr><td>Ctrl + Tab</td><td>切换当前程序中的不同页面</td></tr><tr><td>Alt + Tab</td><td>切换当前程序</td></tr><tr><td>Ctrl + F4</td><td>关闭当前程序中的当前页面</td></tr><tr><td>Alt + F4</td><td>关闭当前程序</td></tr></tbody></table><h1 id="虚拟窗口"><a href="#虚拟窗口" class="headerlink" title="虚拟窗口"></a>虚拟窗口</h1><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Win + Ctrl + D</td><td>创建新的虚拟桌面</td></tr><tr><td>Win + Ctrl + F4</td><td>关闭当前虚拟桌面</td></tr><tr><td>Win + Ctrl + 左&#x2F;右</td><td>切换虚拟桌面</td></tr></tbody></table><h1 id="录频和截图"><a href="#录频和截图" class="headerlink" title="录频和截图"></a>录频和截图</h1><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Win + G</td><td>打开屏幕录制工具栏</td></tr><tr><td>PtrSc</td><td>全屏截图并保存到剪贴板</td></tr><tr><td>Alt + PtrSc</td><td>当前窗口截图并保存到剪贴板</td></tr><tr><td>Win + PtrSc</td><td>全屏截图并保存到本地</td></tr></tbody></table><h1 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h1><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Shift</td><td>切换输入法</td></tr><tr><td>Shift + Space</td><td>切换全半角</td></tr></tbody></table><h1 id="触控板常用手势"><a href="#触控板常用手势" class="headerlink" title="触控板常用手势"></a>触控板常用手势</h1><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>单指双击拖动</td><td>拖拽文件</td></tr><tr><td>两指上下移动</td><td>滚动屏幕</td></tr><tr><td>两指缩放</td><td>缩放</td></tr><tr><td>两指旋转</td><td>旋转</td></tr><tr><td>三指扩张</td><td>显示所有窗口</td></tr><tr><td>三指上下移动</td><td>隐藏或显示窗口</td></tr><tr><td>三指左右移动</td><td>切换窗口</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的线程安全问题</title>
      <link href="/2018/11/23/Java%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2018/11/23/Java%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h1><p><strong>线程安全</strong>：如果有多个线程在<strong>同时</strong>运行，而这些线程可能会<strong>同时运行这段代码</strong>。程序每次运行结果和单线程运行的结果是一样的，而且其他的变量的值也和预期的是一样的，此时我们就称之为是线程安全的。</p><p>我们通过一个案例，演示线程的安全问题：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">电影院卖票，使用了A、B、C三个窗口进行卖票，电影票总数为100张</span><br></pre></td></tr></table></figure><p>采用线程对象来模拟卖票窗口A、B、C；使用Runnable接口的子类来模拟买的电影票</p><p>模拟电影票：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Ticket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="comment">// 在成员位置 定义票的总数100</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟买票窗口</span></span><br><span class="line">        <span class="comment">// 买票窗口永远开启</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 判断是否还有票可以卖</span></span><br><span class="line">            <span class="keyword">if</span>(ticket &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 使用sleep增加“程序的时间”--每张票卖50ms</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 获得线程名称 即买票窗口名称</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> Thread.currentThread().getName();</span><br><span class="line">                System.out.println(name + <span class="string">&quot;卖掉第&quot;</span> + ticket-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟买票：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟买票操作</span></span><br><span class="line"><span class="comment"> *    假设一场电影有100张票</span></span><br><span class="line"><span class="comment"> *    三个窗口同时买票</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    窗口  线程对象</span></span><br><span class="line"><span class="comment"> *    买票  线程任务 实现runnable接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建买票任务对象</span></span><br><span class="line">        <span class="type">Ticket</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Ticket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建三个窗口</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;窗口A&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;窗口B&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;窗口C&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">窗口A卖掉第100张票</span><br><span class="line">窗口C卖掉第98张票</span><br><span class="line">窗口B卖掉第99张票</span><br><span class="line">窗口A卖掉第97张票</span><br><span class="line">窗口B卖掉第95张票</span><br><span class="line">窗口C卖掉第96张票</span><br><span class="line">窗口C卖掉第94张票 ⇐</span><br><span class="line">窗口B卖掉第94张票 ⇐</span><br><span class="line">窗口A卖掉第94张票 ⇐</span><br><span class="line">...</span><br><span class="line">窗口C卖掉第1张票</span><br><span class="line">窗口A卖掉第0张票</span><br><span class="line">窗口B卖掉第-1张票 ⇐</span><br></pre></td></tr></table></figure><p>发现程序出现了两个问题：</p><pre><code> 1. 相同的票数被卖了多次，如第94张被三个窗口都卖了 2. 卖出了不存在的票，如窗口B卖掉了第-1张票</code></pre><p>此时，几个窗口(线程)票数不同步了，这种问题称为线程不安全。</p><blockquote><p>线程安全问题都是有全局变量即静态变量引起的。若每个线程中对全局变量、静态变量只有读操作，而无写操作。一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步，否则的话就可能影响线程安全</p></blockquote><h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1><p>当我们使用多个线程访问同一资源的时候，且多个线程中对资源有些的操作，就容易出现<strong>线程安全</strong>问题<br>要解决上述多想成并发访问一个资源的安全性问题：也就是解决重复卖同一张票和卖不存在的票问题，Java中提供了同步机制(synchronized)来解决<br>根据案例简述：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">窗口A线程进入操作(买票)的时候，窗口B和窗口C线程只能在外等着，</span><br><span class="line">窗口A操作结束，窗口A、窗口B和窗口C(CPU分配内存是随机的，所以还有可能是窗口A进入)才有机会进入代码去执行。</span><br><span class="line">也就是说，在某个线程修改共享资源的时候，其他线程不能修改该资源，</span><br><span class="line">等待修改完毕同步之后，才能去抢夺CPU资源，完成对应的操作，保证了数据的同步性，解决了线程不安全的现象。</span><br></pre></td></tr></table></figure><p>为了保证每个线程都能正常执行原子操作，Java引入了线程同步机制。</p><p>有三种方式完成同步操作：</p><pre><code> 1. 同步代码块 2. 同步方法 3. 锁机制</code></pre><h1 id="同步代码块"><a href="#同步代码块" class="headerlink" title="同步代码块"></a>同步代码块</h1><p><strong>同步代码块</strong>：<code>synchronized</code> 关键字可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。</p><p>格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(同步锁)&#123;</span><br><span class="line">    <span class="comment">// 需要同步的操作的代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>同步锁</strong>：</p><p>对象的同步锁只是一个概念，可以想象为在对象上标记了一个锁。</p><pre><code> 1. 锁对象可以是任意类型 2. 多个线程对象要使用同一把锁</code></pre><blockquote><p>注意：在任何时候，最多允许一个线程拥有同步锁，谁拿到就进入代码块，其他的线程只能在外等着</p></blockquote><p>使用同步代码块解决卖票问题：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * synchronized(锁对象)&#123;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> * 1. 锁对象可以是任意类型</span></span><br><span class="line"><span class="comment"> * 2. 互斥线程需要使用同一把锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Ticket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="comment">// 在成员位置 定义票的总数100</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟买票窗口</span></span><br><span class="line">        <span class="comment">// 买票窗口永远开启</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 同步锁</span></span><br><span class="line">            <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">                <span class="comment">// 判断是否还有票可以卖</span></span><br><span class="line">                <span class="keyword">if</span>(ticket &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">// 使用sleep增加“程序的时间”--每张票卖50ms</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 获得线程名称 即买票窗口名称</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> Thread.currentThread().getName();</span><br><span class="line">                    System.out.println(name + <span class="string">&quot;卖掉第&quot;</span> + ticket-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">窗口A卖掉第100票</span><br><span class="line">窗口C卖掉第99票</span><br><span class="line">窗口B卖掉第98票</span><br><span class="line">窗口B卖掉第97票</span><br><span class="line">...</span><br><span class="line">窗口C卖掉第4票</span><br><span class="line">窗口A卖掉第3票</span><br><span class="line">窗口A卖掉第2票</span><br><span class="line">窗口A卖掉第1票</span><br></pre></td></tr></table></figure><p>此时，每张票都只会被卖掉一次，不会存在卖掉不存在的电影票的问题。</p><p>当使用了同步代码块后，上述的线程的安全问题即可解决</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word2016问题导致无法创建其他博客账号</title>
      <link href="/2018/11/22/Word2016%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2%E8%B4%A6%E5%8F%B7/"/>
      <url>/2018/11/22/Word2016%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E5%85%B6%E4%BB%96%E5%8D%9A%E5%AE%A2%E8%B4%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>网友介绍能够在word上直接将博文发布到CSDN上，纯洁的我跟着网友的说法一顿操作，结果凉凉~<br>按照网友说法在word中创建博客账号时，需要选择“其他”，就是这个&amp;darr;&amp;darr;&amp;darr;<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181122/20181122191455372.png" alt="在这里插入图片描述"><br>结果&amp;darr;&amp;darr;&amp;darr;<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181122/20181122182840183.png" alt="在这里插入图片描述"><br>网上搜了半天，终于找到一篇看似有用的文章：<a href="https://answers.microsoft.com/zh-hans/msoffice/forum/msoffice_word-mso_win10/%E6%9B%B4%E6%96%B0offices/b0f47f10-fd19-4de4-aad3-87a64ecc60fe">Word 2016 无法创建其他博客账号</a><br>然并卵，我并没有找到所谓的补丁( 一群羊驼奔腾而过~ )<br>希望各位大神赐教</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Word2016 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中Cookie、LocalStorage与SessionStorage</title>
      <link href="/2018/11/22/JS%E4%B8%ADCookie%E3%80%81LocalStorage%E4%B8%8ESessionStorage/"/>
      <url>/2018/11/22/JS%E4%B8%ADCookie%E3%80%81LocalStorage%E4%B8%8ESessionStorage/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h1><h3 id="1-Cookie"><a href="#1-Cookie" class="headerlink" title="1. Cookie"></a>1. Cookie</h3><blockquote><p><strong>cookie</strong>：主要用途有保存登录信息。cookie 非常小，它的大小限制为4KB左右。<br>用途：比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身份的数据来实现的。</p></blockquote><h3 id="2-LocalStorage"><a href="#2-LocalStorage" class="headerlink" title="2. LocalStorage"></a>2. LocalStorage</h3><blockquote><p><strong>localStorage</strong>生命周期是<strong>永久</strong>，这意味着除非用户显示在浏览器提供的UI上清除localStorage信息，否则这些信息将永远存在。存放数据大小为一般为5MB,而且它仅在客户端（即浏览器）中保存，不参与和服务器的通信</p></blockquote><h3 id="3-SessionStorage"><a href="#3-SessionStorage" class="headerlink" title="3. SessionStorage"></a>3. SessionStorage</h3><blockquote><p><strong>sessionStorage</strong>仅在当前会话下有效，关闭页面或浏览器后被清除。存放数据大小为一般为5MB,而且它仅在客户端（即浏览器）中保存，不参与和服务器的通信。源生接口可以接受，亦可再次封装来对Object和Array有更好的支持</p></blockquote><br/><h1 id="二、区别"><a href="#二、区别" class="headerlink" title="二、区别"></a>二、区别</h1><table>    <thead>        <th>特性</th>        <th>Cookie</th>        <th>LocalStorage</th>        <th>SessionStorage</th>    </thead>    <tdoby>        <tr>            <th>数据的生命周期</th>            <td>一般由服务器生成，可设置失效时间。如果在浏览器端生成Cookie，默认是关闭浏览器后失效</td>            <td>除非被清除，否则<font color="hotpink">永久保存</font></td>            <td>仅在<font color="hotpink">当前会话</font>下有效，关闭页面或浏览器后被清除</td>        </tr>        <tr>            <th>存放数据大小</th>            <td>4K左右</td>            <td colspan="2">一般为5MB</td>        </tr>        <tr>            <th>与服务器端通信</th>            <td>每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题</td>            <td colspan="2">仅在客户端（即浏览器）中保存，不参与和服务器的通信</td>        </tr>        <tr>            <th>易用性</th>            <td>需要程序员自己封装，源生的Cookie接口不友好</td>            <td colspan="2">源生接口可以接受，亦可再次封装来对Object和Array有更好的支持</td>        </tr>    </tbody></table><blockquote><p><font size="4" color="hotpink"><strong>LocalStorage和SessionStorage：</strong></font></p><ol><li><strong>不同浏览器</strong>无法共享 localStorage 或 sessionStorage 中的信息。</li><li>相同浏览器的<strong>不同页面</strong>间可以共享相同的 <code>localStorage</code>（页面属于相同域名和端口），但是不同页面或标签页间无法共享 <code>sessionStorage</code> 的信息。</li><li>这里需要注意的是，页面及标签页仅指顶级窗口，如果一个标签页包含多个 <code>iframe</code> 标签且他们属于同源页面，那么他们之间是可以共享 <code>sessionStorage</code> 的</li></ol></blockquote><br/> <h1 id="三、LocalStorage-和-SessionStorage-的操作"><a href="#三、LocalStorage-和-SessionStorage-的操作" class="headerlink" title="三、LocalStorage 和 SessionStorage 的操作"></a>三、LocalStorage 和 SessionStorage 的操作</h1><p><code>LocalStorage</code> 和 <code>SessionStorage</code> 具有相同的操作方法，例如<code>setItem</code>、 <code>getItem</code> 和 <code>removeItem</code> 等</p><h3 id="1-添加value"><a href="#1-添加value" class="headerlink" title="1. 添加value"></a>1. 添加value</h3><p><strong>描述</strong>：使用 <code>key/value</code> 的形式将数据存储进本地存储中<br><strong>格式</strong>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;site&quot;</span>, <span class="string">&quot;js8.in&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-获取value"><a href="#2-获取value" class="headerlink" title="2.获取value"></a>2.获取value</h3><p><strong>描述</strong>：获取指定 <code>key</code> 本地存储的值<br><strong>格式</strong>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> site = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;site&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="3-删除value"><a href="#3-删除value" class="headerlink" title="3.删除value"></a>3.删除value</h3><p><strong>描述</strong>：删除指定 <code>key</code> 本地存储的值<br><strong>格式</strong>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;site&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="4-清除value"><a href="#4-清除value" class="headerlink" title="4.清除value"></a>4.清除value</h3><p><strong>描述</strong>：清除所有的 <code>key/value</code><br><strong>格式</strong>：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>();</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中创建线程的两种方式</title>
      <link href="/2018/11/22/Java%E4%B8%AD%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
      <url>/2018/11/22/Java%E4%B8%AD%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="创建线程方式一"><a href="#创建线程方式一" class="headerlink" title="创建线程方式一"></a>创建线程方式一</h2><blockquote><p>通过<strong>继承</strong><code>Thread</code>类来创建并启动多线程</p></blockquote><p>Java使用<code>java.lang.Thread</code>类代表线程，所有的线程对象都必须是<code>Thread</code>类或其子类的实例。每个线程的作用是完成一定的任务，实际上就是执行一段程序流即一段顺序执行的代码。Java使用线程执行体来代表这段程序流。<br>Java中通过<strong>继承Thread类</strong>来创建并启动多线程的步骤如下：</p><ol><li>定义Thread类的子类，并重写该类的<code>run()</code>方法，该run()方法的方法体就代表了线程需要完成的任务,因此把run()方法称为线程执行体</li><li>创建Thread子类的实例，即创建了线程对象</li><li>调用线程对象的start()方法来启动该线程</li></ol><p>自定义线程类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义线程类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++)&#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建线程方式一：</span></span><br><span class="line"><span class="comment"> *  1. 创建自定义类继承Thread类</span></span><br><span class="line"><span class="comment"> *  2. 重写run方法(run方法就是新的线程要执行的代码)</span></span><br><span class="line"><span class="comment"> *  3. 创建自定义类对象(线程对象)</span></span><br><span class="line"><span class="comment"> *  4. 调用start方法开启新的线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;main线程开启&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(<span class="string">&quot;线程A&quot;</span>);</span><br><span class="line">        <span class="comment">// 开启新的线程myThread</span></span><br><span class="line">        myThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这个循环在main线程中执行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;mian线程 &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="创建线程方式二"><a href="#创建线程方式二" class="headerlink" title="创建线程方式二"></a>创建线程方式二</h2><blockquote><p>通过<strong>实现</strong><code>Runnable</code>类来创建并启动多线程</p></blockquote><p>采用java.lang.Runnable 也是非常常见的一种，我们只需要重写run方法即可<br>步骤如下：</p><ol><li>定义Runnable接口的实现类，并重写该接口的run()方法，该run()方法的方法体同样是该线程的线程执行体</li><li>创建Runnable实现类的实例，并以此实例作为Thread的target来创建Thread对象，该Thread对象才是真正<br>的线程对象</li><li>调用线程对象的start()方法来启动线程</li></ol><p>代码如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建线程方式二：</span></span><br><span class="line"><span class="comment"> *  1. 定义自定义类实现Runnable接口</span></span><br><span class="line"><span class="comment"> *  2. 重写run方法</span></span><br><span class="line"><span class="comment"> *  3. 创建自定义对象</span></span><br><span class="line"><span class="comment"> *  4. 创建Threed对象的时候，作为构造方法的参数进行传递</span></span><br><span class="line"><span class="comment"> *  5. 启动线程start方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建线程任务对象</span></span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">myRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable, <span class="string">&quot;线程A&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable, <span class="string">&quot;线程B&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重载(overload)和重写(override)的区别？</title>
      <link href="/2018/11/21/%E9%87%8D%E8%BD%BD(overload)%E5%92%8C%E9%87%8D%E5%86%99(override)%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2018/11/21/%E9%87%8D%E8%BD%BD(overload)%E5%92%8C%E9%87%8D%E5%86%99(override)%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="hotpink">方法重载：</font></p><ol><li>方法名相同，参数列表【参数的顺序，类型，个数】不同</li><li>重载与方法的返回值无关，发生在同一类中</li><li>是编译时的多态性</li></ol></blockquote><blockquote><p><font color="hotpink">方法重写：</font></p><ol><li>参数列表和返回值类型必须相同</li><li>重写发生在子类与父类之间</li><li>子类抛出的异常不能超过父类相应方法抛出的异常</li><li>子类方法的的访问级别不能低于父类相应方法的访问级别</li><li>是运行时的多态性</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用转义字符</title>
      <link href="/2018/11/20/%E5%B8%B8%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/"/>
      <url>/2018/11/20/%E5%B8%B8%E7%94%A8%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>提示：请直接按<code>Ctrl+F</code>搜索您要查找的转义字符</p></blockquote><h1 id="常用表"><a href="#常用表" class="headerlink" title="常用表"></a>常用表</h1><table><thead><tr><th>字符</th><th>转义字符</th><th>描述</th></tr></thead><tbody><tr><td>‘</td><td>&amp;#39;</td><td>单引号</td></tr><tr><td>“</td><td>&amp;quot;</td><td>双引号</td></tr><tr><td>&amp;</td><td>&amp;#38;</td><td></td></tr><tr><td>&amp;</td><td>&amp;amp;</td><td></td></tr><tr><td>&lt;</td><td>&amp;lt;</td><td></td></tr><tr><td>&gt;</td><td>&amp;gt;</td><td></td></tr><tr><td>不断开空格(non-breaking space)</td><td>&amp;nbsp;</td><td>空格</td></tr><tr><td>#</td><td>&amp;#35;</td><td></td></tr><tr><td>.</td><td>&amp;#46;</td><td>句号</td></tr><tr><td>¥</td><td>&amp;yen;</td><td></td></tr><tr><td>¦</td><td>&amp;brvbar;</td><td></td></tr><tr><td>§</td><td>&amp;sect;</td><td></td></tr><tr><td>¨</td><td>&amp;uml;</td><td></td></tr><tr><td>©</td><td>&amp;copy;</td><td></td></tr><tr><td>«</td><td>&amp;laquo;</td><td></td></tr><tr><td>®</td><td>&amp;reg;</td><td></td></tr><tr><td>¼</td><td>&amp;frac14;</td><td></td></tr><tr><td>½</td><td>&amp;frac12;</td><td></td></tr><tr><td>¾</td><td>&amp;frac34;</td><td></td></tr><tr><td>$</td><td>&amp;#36;</td><td></td></tr><tr><td>%</td><td>&amp;#37;</td><td></td></tr><tr><td>(</td><td>&amp;#40;</td><td></td></tr><tr><td>)</td><td>&amp;#41;</td><td></td></tr><tr><td>*</td><td>&amp;#42;</td><td></td></tr><tr><td>+</td><td>&amp;#43;</td><td></td></tr><tr><td>,</td><td>&amp;#44;</td><td>逗号</td></tr><tr><td>:</td><td>&amp;#58;</td><td>冒号</td></tr><tr><td>;</td><td>&amp;#59;</td><td>分号</td></tr><tr><td>&#x3D;</td><td>&amp;#61;</td><td></td></tr><tr><td>-</td><td>&amp;#45;</td><td>连字号</td></tr><tr><td>&#x2F;</td><td>&amp;#47;</td><td>斜杠</td></tr><tr><td>\</td><td>&amp;#92;</td><td>反斜杠</td></tr><tr><td>&amp;</td><td>&amp;#124;</td><td>竖杠</td></tr><tr><td>¦</td><td>&amp;#166;</td><td>断竖杠</td></tr><tr><td>[</td><td>&amp;#91;</td><td></td></tr><tr><td>]</td><td>&amp;#93;</td><td></td></tr><tr><td>^</td><td>&amp;#94;</td><td></td></tr><tr><td>_</td><td>&amp;#95;</td><td>下划线</td></tr><tr><td>&#96;</td><td>&amp;#96;</td><td>尖重音符</td></tr></tbody></table><h1 id="ISO-8859-1-characters"><a href="#ISO-8859-1-characters" class="headerlink" title="ISO 8859-1 characters"></a>ISO 8859-1 characters</h1><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>空格</td><td>&amp;nbsp;</td></tr><tr><td>¡</td><td>&amp;iexcl;</td></tr><tr><td>¢</td><td>&amp;cent;</td></tr><tr><td>£</td><td>&amp;pound;</td></tr><tr><td>¤</td><td>&amp;curren;</td></tr><tr><td>¥</td><td>&amp;yen;</td></tr><tr><td>¦</td><td>&amp;brvbar;</td></tr><tr><td>§</td><td>&amp;sect;</td></tr><tr><td>¨</td><td>&amp;uml;</td></tr><tr><td>©</td><td>&amp;copy;</td></tr><tr><td>ª</td><td>&amp;ordf;</td></tr><tr><td>«</td><td>&amp;laquo;</td></tr><tr><td>¬</td><td>&amp;not;</td></tr><tr><td>&amp;shy;</td><td></td></tr><tr><td>®</td><td>&amp;reg;</td></tr><tr><td>¯</td><td>&amp;macr;</td></tr><tr><td>°</td><td>&amp;deg;</td></tr><tr><td>±</td><td>&amp;plusmn;</td></tr><tr><td>²</td><td>&amp;sup2;</td></tr><tr><td>³</td><td>&amp;sup3;</td></tr><tr><td>´</td><td>&amp;acute;</td></tr><tr><td>µ</td><td>&amp;micro;</td></tr><tr><td>¶</td><td>&amp;para;</td></tr><tr><td>·</td><td>&amp;middot;</td></tr><tr><td>¸</td><td>&amp;cedil;</td></tr><tr><td>¹</td><td>&amp;sup1;</td></tr><tr><td>º</td><td>&amp;ordm;</td></tr><tr><td>»</td><td>&amp;raquo;</td></tr><tr><td>¼</td><td>&amp;frac14;</td></tr><tr><td>½</td><td>&amp;frac12;</td></tr><tr><td>¾</td><td>&amp;frac34;</td></tr><tr><td>¿</td><td>&amp;iquest;</td></tr><tr><td>À</td><td>&amp;Agrave;</td></tr><tr><td>Á</td><td>&amp;Aacute;</td></tr><tr><td>Â</td><td>&amp;Acirc;</td></tr><tr><td>Ã</td><td>&amp;Atilde;</td></tr><tr><td>Ä</td><td>&amp;Auml;</td></tr><tr><td>Å</td><td>&amp;Aring;</td></tr><tr><td>Æ</td><td>&amp;AElig;</td></tr><tr><td>Ç</td><td>&amp;Ccedil;</td></tr><tr><td>È</td><td>&amp;Egrave;</td></tr><tr><td>É</td><td>&amp;Eacute;</td></tr><tr><td>Ê</td><td>&amp;Ecirc;</td></tr><tr><td>Ë</td><td>&amp;Euml;</td></tr><tr><td>Ì</td><td>&amp;Igrave;</td></tr><tr><td>Í</td><td>&amp;Iacute;</td></tr><tr><td>Î</td><td>&amp;Icirc;</td></tr><tr><td>Ï</td><td>&amp;Iuml;</td></tr><tr><td>Ð</td><td>&amp;ETH;</td></tr><tr><td>Ñ</td><td>&amp;Ntilde;</td></tr><tr><td>Ò</td><td>&amp;Ograve;</td></tr><tr><td>Ó</td><td>&amp;Oacute;</td></tr><tr><td>Ô</td><td>&amp;Ocirc;</td></tr><tr><td>Õ</td><td>&amp;Otilde;</td></tr><tr><td>Ö</td><td>&amp;Ouml;</td></tr><tr><td>×</td><td>&amp;times;</td></tr><tr><td>Ø</td><td>&amp;Oslash;</td></tr><tr><td>Ù</td><td>&amp;Ugrave;</td></tr><tr><td>Ú</td><td>&amp;Uacute;</td></tr><tr><td>Û</td><td>&amp;Ucirc;</td></tr><tr><td>Ü</td><td>&amp;Uuml;</td></tr><tr><td>Ý</td><td>&amp;Yacute;</td></tr><tr><td>Þ</td><td>&amp;THORN;</td></tr><tr><td>ß</td><td>&amp;szlig;</td></tr><tr><td>à</td><td>&amp;agrave;</td></tr><tr><td>á</td><td>&amp;aacute;</td></tr><tr><td>â</td><td>&amp;acirc;</td></tr><tr><td>ã</td><td>&amp;atilde;</td></tr><tr><td>ä</td><td>&amp;auml;</td></tr><tr><td>å</td><td>&amp;aring;</td></tr><tr><td>æ</td><td>&amp;aelig;</td></tr><tr><td>ç</td><td>&amp;ccedil;</td></tr><tr><td>è</td><td>&amp;egrave;</td></tr><tr><td>é</td><td>&amp;eacute;</td></tr><tr><td>ê</td><td>&amp;ecirc;</td></tr><tr><td>ë</td><td>&amp;euml;</td></tr><tr><td>ì</td><td>&amp;igrave;</td></tr><tr><td>í</td><td>&amp;iacute;</td></tr><tr><td>î</td><td>&amp;icirc;</td></tr><tr><td>ï</td><td>&amp;iuml;</td></tr><tr><td>ð</td><td>&amp;eth;</td></tr><tr><td>ñ</td><td>&amp;ntilde;</td></tr><tr><td>ò</td><td>&amp;ograve;</td></tr><tr><td>ó</td><td>&amp;oacute;</td></tr><tr><td>ô</td><td>&amp;ocirc;</td></tr><tr><td>õ</td><td>&amp;otilde;</td></tr><tr><td>ö</td><td>&amp;ouml;</td></tr><tr><td>÷</td><td>&amp;divide;</td></tr><tr><td>ø</td><td>&amp;oslash;</td></tr><tr><td>ù</td><td>&amp;ugrave;</td></tr><tr><td>ú</td><td>&amp;uacute;</td></tr><tr><td>û</td><td>&amp;ucirc;</td></tr><tr><td>ü</td><td>&amp;uuml;</td></tr><tr><td>ý</td><td>&amp;yacute;</td></tr><tr><td>þ</td><td>&amp;thorn;</td></tr><tr><td>ÿ</td><td>&amp;yuml;</td></tr></tbody></table><h1 id="Math-symbols"><a href="#Math-symbols" class="headerlink" title="Math symbols"></a>Math symbols</h1><h2 id="Latin-Extended-B"><a href="#Latin-Extended-B" class="headerlink" title="Latin Extended-B"></a>Latin Extended-B</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>ƒ</td><td>&amp;fnof;</td></tr></tbody></table><h2 id="Arrows"><a href="#Arrows" class="headerlink" title="Arrows"></a>Arrows</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>←</td><td>&amp;larr;</td></tr><tr><td>↑</td><td>&amp;uarr;</td></tr><tr><td>→</td><td>&amp;rarr;</td></tr><tr><td>↓</td><td>&amp;darr;</td></tr><tr><td>↔</td><td>&amp;harr;</td></tr><tr><td>↵</td><td>&amp;crarr;</td></tr><tr><td>⇐</td><td>&amp;lArr;</td></tr><tr><td>⇑</td><td>&amp;uArr;</td></tr><tr><td>⇒</td><td>&amp;rArr;</td></tr><tr><td>⇓</td><td>&amp;dArr;</td></tr><tr><td>⇔</td><td>&amp;hArr;</td></tr></tbody></table><h2 id="Mathematical-Operators"><a href="#Mathematical-Operators" class="headerlink" title="Mathematical Operators"></a>Mathematical Operators</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>∀</td><td>&amp;forall;</td></tr><tr><td>∂</td><td>&amp;part;</td></tr><tr><td>∃</td><td>&amp;exist;</td></tr><tr><td>∅</td><td>&amp;empty;</td></tr><tr><td>∇</td><td>&amp;nabla;</td></tr><tr><td>∈</td><td>&amp;isin;</td></tr><tr><td>∉</td><td>&amp;notin;</td></tr><tr><td>∋</td><td>&amp;ni;</td></tr><tr><td>∏</td><td>&amp;prod;</td></tr><tr><td>∑</td><td>&amp;sum;</td></tr><tr><td>−</td><td>&amp;minus;</td></tr><tr><td>∗</td><td>&amp;lowast;</td></tr><tr><td>√</td><td>&amp;radic;</td></tr><tr><td>∝</td><td>&amp;prop;</td></tr><tr><td>∞</td><td>&amp;infin;</td></tr><tr><td>∠</td><td>&amp;ang;</td></tr><tr><td>∧</td><td>&amp;and;</td></tr><tr><td>∨</td><td>&amp;or;</td></tr><tr><td>∩</td><td>&amp;cap;</td></tr><tr><td>∪</td><td>&amp;cup;</td></tr><tr><td>∫</td><td>&amp;int;</td></tr><tr><td>∴</td><td>&amp;there4;</td></tr><tr><td>∼</td><td>&amp;sim;</td></tr><tr><td>≅</td><td>&amp;cong;</td></tr><tr><td>≈</td><td>&amp;asymp;</td></tr><tr><td>≠</td><td>&amp;ne;</td></tr><tr><td>≡</td><td>&amp;equiv;</td></tr><tr><td>≤</td><td>&amp;le;</td></tr><tr><td>≥</td><td>&amp;ge;</td></tr><tr><td>⊂</td><td>&amp;sub;</td></tr><tr><td>⊃</td><td>&amp;sup;</td></tr><tr><td>⊄</td><td>&amp;nsub;</td></tr><tr><td>⊆</td><td>&amp;sube;</td></tr><tr><td>⊇</td><td>&amp;supe;</td></tr><tr><td>⊕</td><td>&amp;oplus;</td></tr><tr><td>⊗</td><td>&amp;otimes;</td></tr><tr><td>⊥</td><td>&amp;perp;</td></tr><tr><td>⋅</td><td>&amp;sdot;</td></tr></tbody></table><h2 id="Miscellaneous-Technical"><a href="#Miscellaneous-Technical" class="headerlink" title="Miscellaneous Technical"></a>Miscellaneous Technical</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>⌈</td><td>&amp;lceil;</td></tr><tr><td>⌉</td><td>&amp;rceil;</td></tr><tr><td>⌊</td><td>&amp;lfloor;</td></tr><tr><td>⌋</td><td>&amp;rfloor;</td></tr><tr><td>⟨</td><td>&amp;lang;</td></tr><tr><td>⟩</td><td>&amp;rang;</td></tr></tbody></table><h2 id="Geometric-Shapes"><a href="#Geometric-Shapes" class="headerlink" title="Geometric Shapes"></a>Geometric Shapes</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>◊</td><td>&amp;loz;</td></tr></tbody></table><h2 id="Miscellaneous-Symbols"><a href="#Miscellaneous-Symbols" class="headerlink" title="Miscellaneous Symbols"></a>Miscellaneous Symbols</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>♠</td><td>&amp;spades;</td></tr><tr><td>♣</td><td>&amp;clubs;</td></tr><tr><td>♥</td><td>&amp;hearts;</td></tr><tr><td>♦</td><td>&amp;diams;</td></tr></tbody></table><h2 id="Letterlike-Symbols"><a href="#Letterlike-Symbols" class="headerlink" title="Letterlike Symbols"></a>Letterlike Symbols</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>℘</td><td>&amp;weierp;</td></tr><tr><td>ℑ</td><td>&amp;image;</td></tr><tr><td>ℜ</td><td>&amp;real;</td></tr><tr><td>™</td><td>&amp;trade;</td></tr><tr><td>ℵ</td><td>&amp;alefsym;</td></tr></tbody></table><h2 id="Greek"><a href="#Greek" class="headerlink" title="Greek"></a>Greek</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>Α</td><td>&amp;Alpha;</td></tr><tr><td>Β</td><td>&amp;Beta;</td></tr><tr><td>Γ</td><td>&amp;Gamma;</td></tr><tr><td>Δ</td><td>&amp;Delta;</td></tr><tr><td>Ε</td><td>&amp;Epsilon;</td></tr><tr><td>Ζ</td><td>&amp;Zeta;</td></tr><tr><td>Η</td><td>&amp;Eta;</td></tr><tr><td>Θ</td><td>&amp;Theta;</td></tr><tr><td>Ι</td><td>&amp;Iota;</td></tr><tr><td>Κ</td><td>&amp;Kappa;</td></tr><tr><td>Λ</td><td>&amp;Lambda;</td></tr><tr><td>Μ</td><td>&amp;Mu;</td></tr><tr><td>Ν</td><td>&amp;Nu;</td></tr><tr><td>Ξ</td><td>&amp;Xi;</td></tr><tr><td>Ο</td><td>&amp;Omicron;</td></tr><tr><td>Π</td><td>&amp;Pi;</td></tr><tr><td>Ρ</td><td>&amp;Rho;</td></tr><tr><td>Σ</td><td>&amp;Sigma;</td></tr><tr><td>Τ</td><td>&amp;Tau;</td></tr><tr><td>Υ</td><td>&amp;Upsilon;</td></tr><tr><td>Φ</td><td>&amp;Phi;</td></tr><tr><td>Χ</td><td>&amp;Chi;</td></tr><tr><td>Ψ</td><td>&amp;Psi;</td></tr><tr><td>Ω</td><td>&amp;Omega;</td></tr><tr><td>α</td><td>&amp;alpha;</td></tr><tr><td>β</td><td>&amp;beta;</td></tr><tr><td>γ</td><td>&amp;gamma;</td></tr><tr><td>δ</td><td>&amp;delta;</td></tr><tr><td>ε</td><td>&amp;epsilon;</td></tr><tr><td>ζ</td><td>&amp;zeta;</td></tr><tr><td>η</td><td>&amp;eta;</td></tr><tr><td>θ</td><td>&amp;theta;</td></tr><tr><td>ι</td><td>&amp;iota;</td></tr><tr><td>κ</td><td>&amp;kappa;</td></tr><tr><td>λ</td><td>&amp;lambda;</td></tr><tr><td>μ</td><td>&amp;mu;</td></tr><tr><td>ν</td><td>&amp;nu;</td></tr><tr><td>ξ</td><td>&amp;xi;</td></tr><tr><td>ο</td><td>&amp;omicron;</td></tr><tr><td>π</td><td>&amp;pi;</td></tr><tr><td>ρ</td><td>&amp;rho;</td></tr><tr><td>ς</td><td>&amp;sigmaf;</td></tr><tr><td>σ</td><td>&amp;sigma;</td></tr><tr><td>τ</td><td>&amp;tau;</td></tr><tr><td>υ</td><td>&amp;upsilon;</td></tr><tr><td>φ</td><td>&amp;phi;</td></tr><tr><td>χ</td><td>&amp;chi;</td></tr><tr><td>ψ</td><td>&amp;psi;</td></tr><tr><td>ω</td><td>&amp;omega;</td></tr><tr><td>ϑ</td><td>&amp;thetasym;</td></tr><tr><td>ϒ</td><td>&amp;upsih;</td></tr><tr><td>ϖ</td><td>&amp;piv;</td></tr></tbody></table><h1 id="Special-characters-for-HTML"><a href="#Special-characters-for-HTML" class="headerlink" title="Special characters for HTML"></a>Special characters for HTML</h1><h2 id="C0-Controls-and-Basic-Latin"><a href="#C0-Controls-and-Basic-Latin" class="headerlink" title="C0 Controls and Basic Latin"></a>C0 Controls and Basic Latin</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>“</td><td>&amp;quot;</td></tr><tr><td>&amp;</td><td>&amp;amp;</td></tr><tr><td>&lt;</td><td>&amp;lt;</td></tr><tr><td>&gt;</td><td>&amp;gt;</td></tr></tbody></table><h2 id="Latin-Extended-A"><a href="#Latin-Extended-A" class="headerlink" title="Latin Extended-A"></a>Latin Extended-A</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>Œ</td><td>&amp;OElig;</td></tr><tr><td>œ</td><td>&amp;oelig;</td></tr><tr><td>Š</td><td>&amp;Scaron;</td></tr><tr><td>š</td><td>&amp;scaron;</td></tr><tr><td>Ÿ</td><td>&amp;Yuml;</td></tr></tbody></table><h2 id="Spacing-Modifier-Letters"><a href="#Spacing-Modifier-Letters" class="headerlink" title="Spacing Modifier Letters"></a>Spacing Modifier Letters</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td>ˆ</td><td>&amp;circ;</td></tr><tr><td>˜</td><td>&amp;tilde;</td></tr></tbody></table><h2 id="General-Punctuation"><a href="#General-Punctuation" class="headerlink" title="General Punctuation"></a>General Punctuation</h2><table><thead><tr><th>char glyph</th><th>HTML tag</th></tr></thead><tbody><tr><td></td><td>&amp;ensp;</td></tr><tr><td></td><td>&amp;emsp;</td></tr><tr><td></td><td>&amp;thinsp;</td></tr><tr><td>‌</td><td>&amp;zwnj;</td></tr><tr><td>‍</td><td>&amp;zwj;</td></tr><tr><td>‎</td><td>&amp;lrm;</td></tr><tr><td>‏</td><td>&amp;rlm;</td></tr><tr><td>–</td><td>&amp;ndash;</td></tr><tr><td>—</td><td>&amp;mdash;</td></tr><tr><td>‘</td><td>&amp;lsquo;</td></tr><tr><td>’</td><td>&amp;rsquo;</td></tr><tr><td>‚</td><td>&amp;sbquo;</td></tr><tr><td>“</td><td>&amp;ldquo;</td></tr><tr><td>”</td><td>&amp;rdquo;</td></tr><tr><td>„</td><td>&amp;bdquo;</td></tr><tr><td>†</td><td>&amp;dagger;</td></tr><tr><td>‡</td><td>&amp;Dagger;</td></tr><tr><td>‰</td><td>&amp;permil;</td></tr><tr><td>‹</td><td>&amp;lsaquo;</td></tr><tr><td>›</td><td>&amp;rsaquo;</td></tr><tr><td>€</td><td>&amp;euro;</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转义字符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中window&amp;#46;location&amp;#46;search的用法和作用</title>
      <link href="/2018/11/20/js%E4%B8%ADwindow-46-location-46-search%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E4%BD%9C%E7%94%A8/"/>
      <url>/2018/11/20/js%E4%B8%ADwindow-46-location-46-search%E7%9A%84%E7%94%A8%E6%B3%95%E5%92%8C%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>window.location.search的作用为：获取页面 URL 地址</p></blockquote><table>    <th>属性</th>    <th>描述</th>    <tbody>        <tr>            <td>hash</td>            <td>从 # 开始的 URL（锚）</td>        </tr>        <tr>            <td>host</td>            <td>主机名和当前 URL 的端口号</td>        </tr>        <tr>            <td>hostname</td>            <td>当前 URL 的主机名</td>        </tr>        <tr>            <td>href</td>            <td>完整的 URL</td>        </tr>        <tr>            <td>pathname</td>            <td>当前 URL 的路径部分</td>        </tr>        <tr>            <td>port</td>            <td>当前 URL 的端口号</td>        </tr>        <tr>            <td>protocol</td>            <td>当前 URL 的协议</td>        </tr>        <tr>            <td><font color='hotpink'>search</font></th>            <td><font color='hotpink'>从问号 (?) 开始的 URL（查询部分）</font></th>        </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP九大内置对象及其作用和四大作用域详解</title>
      <link href="/2018/11/20/JSP%E4%B9%9D%E5%A4%A7%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8%E5%92%8C%E5%9B%9B%E5%A4%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%AF%A6%E8%A7%A3/"/>
      <url>/2018/11/20/JSP%E4%B9%9D%E5%A4%A7%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8%E5%92%8C%E5%9B%9B%E5%A4%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是内置对象？"><a href="#一、什么是内置对象？" class="headerlink" title="一、什么是内置对象？"></a>一、什么是内置对象？</h1><p>在JSP开发中会频繁使用到一些对象，SUN公司为简化开发，在设计JSP时规定JSP页面加载完毕之后自动帮开发者创建好了这些对象，开发者只需要使用相应的对象调用相应的方法即可。这些系统创建好的对象就叫做内置对象。</p><h1 id="二、九大内置对象"><a href="#二、九大内置对象" class="headerlink" title="二、九大内置对象"></a>二、九大内置对象</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">内置对象名          类型</span><br><span class="line">request       HttpServletRequest</span><br><span class="line">response       HttpServletResponse</span><br><span class="line">config         ServletConfig</span><br><span class="line">application    ServletContext</span><br><span class="line">session        HttpSession</span><br><span class="line">exception      Throwable</span><br><span class="line">page           Object(this)</span><br><span class="line">out            JspWriter</span><br><span class="line">pageContext    PageContext </span><br></pre></td></tr></table></figure><p>1、request对象<br>request 对象是 javax.servlet.httpServletRequest类型的对象。 该对象代表了客户端的请求信息，主要用于接受通过HTTP协议传送到服务器的数据。（包括头信息、系统信息、请求方式以及请求参数等）。request对象的作用域为一次请求。</p><p>2、response对象<br>response 代表的是对客户端的响应，主要是将JSP容器处理过的对象传回到客户端。response对象也具有作用域，它只在JSP页面内有效。</p><p>3、session对象<br>session 对象是由服务器自动创建的与用户请求相关的对象。服务器为每个用户都生成一个session对象，用于保存该用户的信息，跟踪用户的操作状态。session对象内部使用Map类来保存数据，因此保存数据的格式为 “Key&#x2F;value”。 session对象的value可以使复杂的对象类型，而不仅仅局限于字符串类型。</p><p>4、application对象<br> application 对象可将信息保存在服务器中，直到服务器关闭，否则application对象中保存的信息会在整个应用中都有效。与session对象相比，application对象生命周期更长，类似于系统的“全局变量”。</p><p>5、out 对象<br>out 对象用于在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。在使用 out 对象输出数据时，可以对数据缓冲区进行操作，及时清除缓冲区中的残余数据，为其他的输出让出缓冲空间。待数据输出完毕后，要及时关闭输出流。</p><p>6、pageContext 对象<br>pageContext 对象的作用是取得任何范围的参数，通过它可以获取 JSP页面的out、request、reponse、session、application 等对象。pageContext对象的创建和初始化都是由容器来完成的，在JSP页面中可以直接使用 pageContext对象。</p><p>7、config 对象<br>config 对象的主要作用是取得服务器的配置信息。通过 pageConext对象的 getServletConfig() 方法可以获取一个config对象。当一个Servlet 初始化时，容器把某些信息通过 config对象传递给这个 Servlet。 开发者可以在web.xml 文件中为应用程序环境中的Servlet程序和JSP页面提供初始化参数。</p><p>8、page 对象<br>page 对象代表JSP本身，只有在JSP页面内才是合法的。 page隐含对象本质上包含当前 Servlet接口引用的变量，类似于Java编程中的 this 指针。</p><p>9、exception 对象<br>exception 对象的作用是显示异常信息，只有在包含 isErrorPage&#x3D;”true” 的页面中才可以被使用，在一般的JSP页面中使用该对象将无法编译JSP文件。excepation对象和Java的所有对象一样，都具有系统提供的继承结构。exception 对象几乎定义了所有异常情况。在Java程序中，可以使用try&#x2F;catch关键字来处理异常情况； 如果在JSP页面中出现没有捕获到的异常，就会生成 exception 对象，并把 exception 对象传送到在page指令中设定的错误页面中，然后在错误页面中处理相应的 exception 对象。</p><h1 id="三、四大作用域"><a href="#三、四大作用域" class="headerlink" title="三、四大作用域"></a>三、四大作用域</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">page域:    只能在当前jsp页面使用(当前页面)</span><br><span class="line">request域: 只能在同一个请求中使用(转发)</span><br><span class="line">session域: 只能在同一个会话(session对象)中使用(私有的)</span><br><span class="line">context域: 只能在同一个web应用中使用(全局的)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>==和equals()的区别</title>
      <link href="/2018/11/20/==%E5%92%8Cequals%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/11/20/==%E5%92%8Cequals%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="1、-x3D-x3D"><a href="#1、-x3D-x3D" class="headerlink" title="1、&#x3D;&#x3D;"></a>1、&#x3D;&#x3D;</h3><p><code>==</code>是运算符</p><ul><li><p>在对&#x3D;&#x3D;基本数据类型&#x3D;&#x3D;进行比较时，是判断<strong>数值</strong>是否相等</p></li><li><p>对&#x3D;&#x3D;引用数据类型&#x3D;&#x3D;进行比较时，判断的是对象的**地址值(内存地址)**是否相等</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">System.out.println(i1 == i2); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>);</span><br><span class="line"><span class="type">Integer</span> <span class="variable">i4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>);</span><br><span class="line">System.out.println(i3 == i4); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><h3 id="2、equals"><a href="#2、equals" class="headerlink" title="2、equals()"></a>2、equals()</h3><p><code>equals()</code>是<code>Object</code>中的方法，不能用于基本数据类型的比较，比较的是&#x3D;&#x3D;引用类型&#x3D;&#x3D;的变量所指向的<strong>对象的地址</strong><br>由于<code>String</code>类重写了equals方法，比较的是属性的值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">System.out.println(s1 == s2); <span class="comment">//false，s1和s2的内存地址不相等</span></span><br><span class="line">System.out.println(s1.equals(s2)); <span class="comment">//true，s1和s2的值相等</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>String、StringBuffer、StringBuilder以及对String不变性的理解</title>
      <link href="/2018/11/20/String%E3%80%81StringBuffer%E3%80%81StringBuilder%E4%BB%A5%E5%8F%8A%E5%AF%B9String%E4%B8%8D%E5%8F%98%E6%80%A7%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/2018/11/20/String%E3%80%81StringBuffer%E3%80%81StringBuilder%E4%BB%A5%E5%8F%8A%E5%AF%B9String%E4%B8%8D%E5%8F%98%E6%80%A7%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<ul><li><p>String、StringBuffer、StringBuilder</p><ul><li>都是<code>final</code> 类, 都不允许被继承<ul><li>String 长度是不可变的, StringBuffer、StringBuilder 长度是可变的;</li><li>StringBuffer 是线程安全的, StringBuilder 不是线程安全的，但它们两个中的所有方法都是相同的，StringBuffer在StringBuilder的方法之上添加了synchronized修饰，保证线程安全</li><li>StringBuilder比StringBuffer拥有更好的性能</li><li>如果一个String类型的字符串，在编译时就可以确定是一个字符串常量，则编译完成之后，字符串会自动拼接成一个常量。此时String的速度比StringBuffer和StringBuilder的性能好的多</li></ul></li></ul></li><li><p>String不变性的理解</p><ul><li>String 类是被<code>final</code>进行修饰的，不能被继承</li><li>在用+号链接字符串的时候会创建新的字符串；<strong>对String对象的任何改变都不影响到原对象，相关的任何change操作都会生成新的对象</strong></li><li>String s &#x3D; new String(“Hello world”); 可能创建两个对象也可能创建一个对象。如果静态区中有“Hello world”字符串常量对象的话，则仅仅在堆中创建一个对象。如果静态区中没有“Hello world”对象，则堆上和静态区中都需要创建对象</li><li>在java 中, 通过使用”+” 符号来串联字符串的时候, 实际上底层会转成通过StringBuilder 实例的append() 方法来实现</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同源策略与JS跨域</title>
      <link href="/2018/11/19/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8EJS%E8%B7%A8%E5%9F%9F/"/>
      <url>/2018/11/19/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8EJS%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么要跨域"><a href="#为什么要跨域" class="headerlink" title="为什么要跨域"></a>为什么要跨域</h1><p>为了用户的信息安全，浏览器就引入了同源策略<br>那么同源策略是如何保证用户的信息安全的呢？</p><ul><li>如果没有同源策略，你打开了你的银行账户页面A，又打开了另一个不相关的页面B，这时候如果B是恶意网站，B可以通过Javascript轻松访问和修改A页面中的内容</li><li>现在我们广泛的使用cookie来维护用户的登录状态，而如果没有同源策略，这些cookie信息就会泄露，其他网站就可以冒充这个登录用户</li></ul><p>由此可以看出，同源策略确实是必不可少的，那么它会带来哪些限制呢？</p><blockquote><ol><li>Cookie、LocalStorage和IndexDB无法读取</li><li>DOM无法获得</li><li>AJAX请求不能发送</li></ol></blockquote><p>有时候我们需要突破上述限制，就需要用跨域的方法来解决</p><h1 id="跨域是什么？"><a href="#跨域是什么？" class="headerlink" title="跨域是什么？"></a>跨域是什么？</h1><ol><li>什么叫做不同的域？<br>协议（http）、域名（<a href="http://www.a.com)、端口(8000)三者中有一个不同就叫不同的域/">www.a.com）、端口（8000）三者中有一个不同就叫不同的域</a></li><li>跨域就是不同的域间相互访问时使用某些方法来突破上述限制</li><li>协议或者端口的不同，只能通过后台来解决</li></ol><h1 id="如何实现跨域？"><a href="#如何实现跨域？" class="headerlink" title="如何实现跨域？"></a>如何实现跨域？</h1><h3 id="一、解决上面提到的1、2两点限制："><a href="#一、解决上面提到的1、2两点限制：" class="headerlink" title="一、解决上面提到的1、2两点限制："></a>一、解决上面提到的1、2两点限制：</h3><h4 id="1-通过document-domain跨子域"><a href="#1-通过document-domain跨子域" class="headerlink" title="1. 通过document.domain跨子域"></a>1. 通过document.domain跨子域</h4><blockquote><p>适用范围：</p><ol><li>两个域只是子域不同</li><li>只适用于iframe窗口与父窗口之间互相获取cookie和DOM节点，不能突破LocalStorage和IndexDB的限制</li></ol></blockquote><p>当两个不同的域只是子域不同时，可以通过把document.domain设置为他们共同的父域来解决</p><blockquote><p>eg:<br>A: <a href="http://www.example.com/a.html">http://www.example.com/a.html</a><br>B: <a href="http://example.com/b.html">http://example.com/b.html</a></p></blockquote><p>当A、B想要获取对方的<code>cookie</code>或者<code>DOM节点</code>时，可以设置:</p><blockquote><p>document.domain&#x3D;’example.com’;</p></blockquote><p>这时A网页通过脚本设置:</p><blockquote><p>document.cookie &#x3D; “testA&#x3D;hello”;</p></blockquote><p>B网页就可以拿到这个cookie：</p><blockquote><p>var aCookie &#x3D; document.cookie;</p></blockquote><h4 id="2-通过window-name跨域"><a href="#2-通过window-name跨域" class="headerlink" title="2. 通过window.name跨域"></a>2. 通过window.name跨域</h4><blockquote><p>使用范围：</p><ol><li>可以是两个完全不同源的域</li><li>同一个窗口内：即同一个标签页内先后打开的窗口</li></ol></blockquote><p>window.name属性有个特征：即在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个window.name的，每个页面对window.name都有读写的权限，window.name是持久存在一个窗口载入过的所有页面中的。</p><p>基于这个思想，我们可以在某个页面设置好 window.name 的值，然后在本标签页内跳转到另外一个域下的页面。在这个页面中就可以获取到我们刚刚设置的 window.name 了。</p><p>结合iframe还有更高级的用法：</p><p>父窗口先打开一个与自己不同源的子窗口，在这个子窗口里设置：</p><blockquote><p>window.name &#x3D; data;</p></blockquote><p>然后让子窗口跳转到一个与父窗口同域的网址：</p><blockquote><p>location&#x3D;’<a href="http://www.parent.com/a.html">http://www.parent.com/a.html</a>‘;</p></blockquote><p>这时，因为同域并且同一窗口window.name是不变的，所以父窗口可以获取到子窗口下的window.name。</p><blockquote><p>var data &#x3D; document.getElementById(‘myFrame’).contentWindow.name;</p></blockquote><p>优点：window.name容量很大，可以放置非常长的字符串；缺点：必须监听子窗口window.name属性的变化，影响网页性能。</p><h4 id="3-使用HTML5的window-postMessage跨域"><a href="#3-使用HTML5的window-postMessage跨域" class="headerlink" title="3. 使用HTML5的window.postMessage跨域"></a>3. 使用HTML5的window.postMessage跨域</h4><p>window.postMessage(message,targetOrigin) 方法是html5新引进的特性，可以使用它来向其它的window对象发送消息，无论这个window对象是属于同源或不同源，目前IE8+、FireFox、Chrome、Opera等浏览器都已经支持window.postMessage方法。</p><p>otherWindow.postMessage(message, targetOrigin);</p><p>otherWindow:接受消息页面的window的引用。可以是页面中iframe的contentWindow属性；window.open的返回值；通过name或下标从window.frames取到的值。<br>message:所要发送的数据，string类型。<br>targetOrigin:用于限制otherWindow，*表示不做限制。</p><h5 id="eg1"><a href="#eg1" class="headerlink" title="eg1:"></a>eg1:</h5><p>在父页面中嵌入子页面，通过postMessage发送数据。<br>parent.com&#x2F;index.html中的代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe id=&quot;ifr&quot; src=&quot;child.com/index.html&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">window.onload = function() &#123;</span><br><span class="line">    var ifr = document.getElementById(&#x27;ifr&#x27;);</span><br><span class="line">    var targetOrigin = &#x27;http://child.com&#x27;; </span><br><span class="line">    // 若写成&#x27;http://child.com/c/proxy.html&#x27;效果一样</span><br><span class="line">    // 若写成&#x27;http://c.com&#x27;就不会执行postMessage了</span><br><span class="line">    ifr.contentWindow.postMessage(&#x27;I was there!&#x27;, targetOrigin);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在子页面中通过message事件监听父页面发送来的消息并显示。<br>child.com&#x2F;index.html中的代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">window.addEventListener(&#x27;message&#x27;, function(event)&#123;</span><br><span class="line">    // 通过origin属性判断消息来源地址</span><br><span class="line">    if (event.origin == &#x27;http://parent.com&#x27;) &#123;</span><br><span class="line">        alert(event.data);    // 弹出&quot;I was there!&quot;</span><br><span class="line">        alert(event.source);  </span><br><span class="line">        // 对parent.com、index.html中window对象的引用</span><br><span class="line">        // 但由于同源策略，这里event.source不可以访问window对象</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, false);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="eg2"><a href="#eg2" class="headerlink" title="eg2:"></a>eg2:</h5><p>假设在a.html里嵌套个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;http://www.child.com/b.html&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>在这两个页面里互相通信</p><p><strong>a.html</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.onload = function() &#123;</span><br><span class="line">    window.addEventListener(&quot;message&quot;, function(e) &#123;</span><br><span class="line">        alert(e.data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    window.frames[0].postMessage(&quot;b data&quot;, &quot;http://www.child.com/b.html&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>b.html</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.onload = function() &#123;</span><br><span class="line">    window.addEventListener(&quot;message&quot;, function(e) &#123;</span><br><span class="line">        alert(e.data);</span><br><span class="line">    &#125;);</span><br><span class="line">    window.parent.postMessage(&quot;a data&quot;, &quot;http://www.parent.com/a.html&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样打开a页面，首先监听到了b.html通过postMessage传来的消息，就先弹出 a data，然后a通过postMessage传递消息给子页面b.html，这时会弹出 b data</p><h3 id="二、解决第3点限制："><a href="#二、解决第3点限制：" class="headerlink" title="二、解决第3点限制："></a>二、解决第3点限制：</h3><blockquote><p>AJAX请求不能发送</p></blockquote><h4 id="4-通过JSONP跨域"><a href="#4-通过JSONP跨域" class="headerlink" title="4. 通过JSONP跨域"></a>4. 通过JSONP跨域</h4><blockquote><p>适用范围：</p><ol><li>可以是两个完全不同源的域；</li><li>只支持HTTP请求中的GET方式；</li><li>老式浏览器全部支持；</li><li>需要服务端支持</li></ol></blockquote><p>JSONP(JSON with Padding)是资料格式JSON的一种使用模式，可以让网页从别的网域要资料。</p><p>由于浏览器的同源策略，在网页端出现了这个“跨域”的问题，然而我们发现，所有的 src 属性并没有受到相关的限制，比如 img &#x2F; script 等。</p><p>JSONP 的原理就要从 script 说起。script 可以引用其他域的脚本文件，比如这样：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.html</span><br><span class="line">...</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function callback(data) &#123;</span><br><span class="line">        console.log(data.url)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=&#x27;b.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">b.js</span><br><span class="line">callback(&#123;url: &#x27;http://www.rccoder.net&#x27;&#125;)</span><br></pre></td></tr></table></figure><p>这就类似于JSONP的原理了。</p><p>JSONP的基本思想是：先在网页上添加一个script标签，设置这个script标签的src属性用于向服务器请求JSON数据 ，需要注意的是，src属性的查询字符串一定要加一个callback参数，用来指定回调函数的名字 。而这个函数是在资源加载之前就已经在前端定义好的，这个函数接受一个参数并利用这个参数做一些事情。向服务器请求后，服务器会将JSON数据放在一个指定名字的回调函数里作为其参数传回来。这时，因为函数已经在前端定义好了，所以会直接调用。</p><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function addScriptTag(src) &#123;</span><br><span class="line">    var script = document.createElement(&#x27;script&#x27;);</span><br><span class="line">    script.setAttribute(&quot;type&quot;,&quot;text/javascript&quot;);</span><br><span class="line">    script.src = src;</span><br><span class="line">    document.body.appendChild(script);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">window.onload = function () &#123;</span><br><span class="line">    addScriptTag(&#x27;http://example.com/ip?callback=foo&#x27;);//请求服务器数据并规定回调函数为foo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function foo(data) &#123;</span><br><span class="line">    console.log(&#x27;Your public IP address is: &#x27; + data.ip);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>向服务器example.com请求数据，这时服务器会先生成JSON数据，这里是{“ip”: “8.8.8.8”}，然后以JS语法的方式生成一个函数，函数名就是传递上来的callback参数的值，最后将数据放在函数的参数中返回：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo(&#123;</span><br><span class="line">    &quot;ip&quot;: &quot;8.8.8.8&quot;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>客户端解析script标签，执行返回的JS代码，调用函数。</p><h5 id="5-通过CORS跨域"><a href="#5-通过CORS跨域" class="headerlink" title="5. 通过CORS跨域"></a>5. 通过CORS跨域</h5><blockquote><p>适用范围：</p><ol><li>可以是两个完全不同源的域；</li><li>支持所有类型的HTTP请求；</li><li>被绝大多数现代浏览器支持，老式浏览器不支持；</li><li>需要服务端支持</li></ol></blockquote><p>对于前端开发者来说，跨域的CORS通信与同源的AJAX通信没有差别，代码完全一样。因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。</p><p>浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。</p><p>只要同时满足以下两大条件，就属于简单请求。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1) 请求方法是以下三种方法之一：</span><br><span class="line">HEAD</span><br><span class="line">GET</span><br><span class="line">POST</span><br><span class="line">（2）HTTP的头信息不超出以下几种字段：</span><br><span class="line">Accept</span><br><span class="line">Accept-Language</span><br><span class="line">Content-Language</span><br><span class="line">Last-Event-ID</span><br><span class="line">Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</span><br></pre></td></tr></table></figure><p>凡是不同时满足上面两个条件，就属于非简单请求。<br>浏览器对这两种请求的处理，是不一样的。</p><p>简单请求：<br>下面是一次跨源AJAX请求，浏览器发现它是简单请求，就会直接在头信息中加一个origin字段：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Host: api.alice.com</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br></pre></td></tr></table></figure><p>服务器收到这条请求，如果这个origin指定的源在许可范围内，那么服务器返回的头信息中会包含Access-Control-Allow-Origin字段，值与origin的值相同，以及其他几个相关字段：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: FooBar</span><br></pre></td></tr></table></figure><p>Access-Control-Allow-Origin: 该字段是必须的。要么与origin相同，要么为*<br>Access-Control-Allow-Credentials: 该字段可选。设为true表示服务器允许发送cookie<br>Access-Control-Expose-Headers: 该字段可选。CORS请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。上面的例子指定，getResponseHeader(‘FooBar’)可以返回FooBar字段的值。</p><p>想要发送cookie，这里还有两点需要额外注意：</p><p>1）开发者必须在AJAX请求中打开withCredentials属性。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var xhr = new XMLHttpRequest();</span><br><span class="line">xhr.withCredentials = true;</span><br></pre></td></tr></table></figure><p>否则即使服务器允许，客户端也不会发送。</p><p>2）Access-Control-Allow-Origin不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie依然遵循同源政策，只有用服务器域名设置的Cookie才会上传，其他域名的Cookie并不会上传，且（跨源）原网页代码中的document.cookie也无法读取服务器域名下的Cookie。</p><p>非简单请求：<br>1.预检请求：</p><p>非简单请求会在正式通信前加一次预检（preflight）请求。作用是浏览器先询问服务器当前网页所在域名是否在服务器的许可名单中，以及可以使用哪些HTTP方法以及头信息字段。只有得到肯定答复，浏览器才会发送XMLHttpRequest，否则报错。<br>一个例子：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var url = &#x27;http://api.alice.com/cors&#x27;;</span><br><span class="line">var xhr = new XMLHttpRequest();</span><br><span class="line">xhr.open(&#x27;PUT&#x27;, url, true);</span><br><span class="line">xhr.setRequestHeader(&#x27;X-Custom-Header&#x27;, &#x27;value&#x27;);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><p>HTTP请求方法为PUT，并发送一个自定义头信息”X-Custom-Header”，浏览器发现这是一个非简单请求，就会自动发送一个预检请求，预检请求的HTTP头信息如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OPTIONS /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Access-Control-Request-Method: PUT</span><br><span class="line">Access-Control-Request-Headers: X-Custom-Header</span><br><span class="line">Host: api.alice.com</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br></pre></td></tr></table></figure><p>请求方法是OPTIONS，表示这个请求是用来询问的，头信息中的关键信息有3个：</p><p>（1）表示请求来自哪个源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Origin: http://api.bob.com</span><br></pre></td></tr></table></figure><p>（2）列出浏览器的CORS请求会用到哪些HTTP方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Request-Method: PUT</span><br></pre></td></tr></table></figure><p>（3）指定浏览器CORS请求会额外发送的头信息字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Request-Headers: X-Custom-Header</span><br></pre></td></tr></table></figure><p>2.预检请求的回应（有两种情况：A允许、B不允许）</p><p>A.服务器允许这次跨域请求</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 01 Dec 2008 01:15:39 GMT</span><br><span class="line">Server: Apache/2.0.61 (Unix)</span><br><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Methods: GET, POST, PUT</span><br><span class="line">Access-Control-Allow-Headers: X-Custom-Header</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Encoding: gzip</span><br><span class="line">Content-Length: 0</span><br><span class="line">Keep-Alive: timeout=2, max=100</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text/plain</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Max-Age: 1728000</span><br></pre></td></tr></table></figure><p>服务器返回中要注意的字段：</p><p>（1）服务器同意的跨域请求源：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br></pre></td></tr></table></figure><p>（2）服务器支持的所有跨域请求的方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Methods: GET, POST, PUT</span><br></pre></td></tr></table></figure><p>（3）表明服务器支持的所有头信息字段：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Headers: X-Custom-Header</span><br></pre></td></tr></table></figure><p>（4）指定本次预检请求的有效期，单位为秒，即允许请求该条回应在有效期之前都不用再发送预检请求：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access-Control-Max-Age: 1728000</span><br></pre></td></tr></table></figure><p>B.服务器不允许这次跨域请求<br>即origin指定的源不在许可范围内，服务器会返回一个正常的HTTP回应。但是头信息中没有包含Access-Control-Allow-Origin字段，就知道出错了，从而抛出一个错误，被XMLHttpRequest的onerror回调函数捕获。但是要注意的是，这种HTTP回应的状态码很有可能是200，所以无法通过状态码识别这种错误。</p><p>3.正式请求<br>过了预检请求，非简单请求的正式请求就与简单请求一样了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题、 </tag>
            
            <tag> 同源策略 </tag>
            
            <tag> JS跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电商项目中的SPU和SKU概念</title>
      <link href="/2018/11/16/%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84SPU%E5%92%8CSKU%E6%A6%82%E5%BF%B5/"/>
      <url>/2018/11/16/%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84SPU%E5%92%8CSKU%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="SPU"><a href="#SPU" class="headerlink" title="SPU"></a>SPU</h2><p><strong>SPU</strong>：Standard Product Unit，标准产品单位。</p><blockquote><p>概念：SPU 是商品信息聚合的最小单位【即：商品共同的属性】，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。<br>通俗点讲，属性值、特性相同的货品就可以称为一个 SPU</p></blockquote><p>SPU是用来定位的<br>例如：iphone8 就是一个 SPU，与商家、颜色、款式、套餐都无关</p><h2 id="SKU"><a href="#SKU" class="headerlink" title="SKU"></a>SKU</h2><p><strong>SKU</strong>：Stock Keeping Unit，库存量单位。</p><blockquote><p>概念：SKU 即库存进出计量的单位， 可以是以件、盒、托盘等为单位，是物理上不可分割的最小存货单元。<br>在使用时要根据不同业务，不同管理模式来处理</p></blockquote><p>SKU是用来定价和管理库存的<br>iphone8 有很多颜色，很多配置，每个颜色和配置的组合都会形成新的产品，这时就产生很多SKU<br>例如：银色 64G 的 iphone8 就是一个SKU；纺织品中一个 SKU 通常表示：规格、颜色、款式</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet简介及其生命周期详解</title>
      <link href="/2018/11/16/Servlet%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%85%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/"/>
      <url>/2018/11/16/Servlet%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%85%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是Servlet？"><a href="#一、什么是Servlet？" class="headerlink" title="一、什么是Servlet？"></a>一、什么是Servlet？</h2><p><strong>Servlet</strong>：是用Java编写的服务器端程序，一门用于开发动态web资源的技术。其主要功能在与交互式的浏览和修改数据，生成动态web内容。狭义的Servlet是指Java语言实现的一个接口，广义的Servlet是指任何实现了这个Servlet的类。一般对Servlet的理解是后者。<br>若想开发一个动态web资源(即开发一个Java程序向浏览器输出数据)，需要完成以下2个步骤：<br>　　1、编写一个Java类，实现servlet接口。<br>　　2、把开发好的Java类部署到web服务器中。<br>按照一种约定俗成的称呼习惯，通常我们也把实现了servlet接口的java程序，称之为Servlet</p><h2 id="二、Servlet的运行流程"><a href="#二、Servlet的运行流程" class="headerlink" title="二、Servlet的运行流程"></a>二、Servlet的运行流程</h2><p>Servlet程序是由WEB服务器调用，WEB服务器收到客户端的Servlet访问请求后：</p><ol><li>Web服务器首先检查是否已经装载并创建了该Servlet的实例对象。如果是，则直接执行第4步，否则，执行第2步</li><li>装载并创建该Servlet的一个实例对象 </li><li>调用Servlet实例对象的<code>init()</code>方法</li><li>创建一个用于封装HTTP请求消息的<code>HttpServletRequest</code>对象和一个代表HTTP响应消息的<code>HttpServletResponse</code>对象，然后调用Servlet的<code>service()</code>方法并将请求和响应对象作为参数传递进去</li><li>WEB应用程序被停止或重新启动之前，Servlet引擎将卸载Servlet，并在卸载之前调用Servlet的<code>destroy()</code>方法</li></ol><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181116/20181116103539879.png" alt="在这里插入图片描述"></p><h2 id="三、Servlet的生命周期"><a href="#三、Servlet的生命周期" class="headerlink" title="三、Servlet的生命周期"></a>三、Servlet的生命周期</h2><p>Servlet运行在Servlet容器中，其生命周期由容器来管理。Servlet的生命周期通过javax.servlet.Servlet接口中的<code>init()</code>、<code>service()</code>和<code>destroy()</code>方法来表示<br>Servlet的生命周期包含了下面4个阶段：</p><ol><li><strong>加载和实例化</strong>：第一次请求时创建，通过服务器反射机制创建Servlet对象</li><li><strong>初始化</strong>：调用Servlet对象的<code>init()</code>方法，初始化Servlet的信息，<code>init()</code>方法只会在创建后被调用一次</li><li><strong>请求处理</strong>：调用<code>service()</code>或者是<code>doGet()</code>，<code>doPost()</code>方法来处理请求</li><li><strong>服务终止</strong>：在长时间没有被调用或者是服务器关闭时，会调用<code>destroy()</code>方法来销毁Servlet对象</li></ol><p>在整个Servlet的生命周期过程中，创建Servlet实例、调用实例的<code>init()</code>和<code>destroy()</code>方法都只执行一次，当初始化完成后，Servlet容器会将该实例保存在内存中，通过调用它的<code>service()</code>方法，为接收到的请求服务</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反向安装jar包到Mave本地仓库</title>
      <link href="/2018/11/15/%E5%8F%8D%E5%90%91%E5%AE%89%E8%A3%85jar%E5%8C%85%E5%88%B0Mave%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/"/>
      <url>/2018/11/15/%E5%8F%8D%E5%90%91%E5%AE%89%E8%A3%85jar%E5%8C%85%E5%88%B0Mave%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>当maven中央仓库没有所需jar的坐标时，需要自行将jar包反向安装到maven的本地仓库中<br>步骤：</p><blockquote><p>注意：前提是安装好Maven并且配置好maven的环境变量</p></blockquote><ol><li>准备所需的jar包<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181115/20181115010549472.png" alt="在这里插入图片描述"></li><li>打开命令行，输入以下命令，按下回车即可安装<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile=d:\dubbo-2.8.4.jar -DgroupId=com.alibaba -DartifactId=dubbo -Dversion=2.8.4 -Dpackaging=jar</span><br></pre></td></tr></table></figure><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181115/20181115011230828.png" alt="在这里插入图片描述"></li><li>可以在Maven本地仓库中查看是否安装成功<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181115/20181115011514373.png" alt="在这里插入图片描述"></li><li>在pom文件中导入坐标<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC的工作原理</title>
      <link href="/2018/11/09/SpringMVC%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2018/11/09/SpringMVC%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SpringMVC的主要组件"><a href="#1-SpringMVC的主要组件" class="headerlink" title="1. SpringMVC的主要组件"></a>1. SpringMVC的主要组件</h2><ul><li><strong>DispatchServlet</strong>：前端控制器，接收请求，响应结果，返回可以是json,String等数据类型，也可以是页面（Model）</li><li><strong>HandlerMapping</strong>：处理器映射器，根据URL去查找处理器，一般通过xml配置或者注解进行查找</li><li><strong>Handler</strong>：处理器，即Controller控制器，由我们程序员编写</li><li><strong>HandlerAdapter</strong>：处理器适配器，可以将处理器包装成适配器，这样就可以支持多种类型的处理器</li><li><strong>ViewResolver</strong>：视图解析器，进行视图解析，返回view对象（常见的有JSP,FreeMark等）</li></ul><h2 id="2-SpringMVC的工作原理"><a href="#2-SpringMVC的工作原理" class="headerlink" title="2. SpringMVC的工作原理"></a>2. SpringMVC的工作原理</h2><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181109/20181109211450528.png" alt="在这里插入图片描述"></p><ol><li>用户向服务器发送请求，请求被 SpringMVC 前端控制器DispatchServlet 捕获</li><li>DispatcherServle 对请求 URL 进行解析，得到请求资源标识符（URL），然后根据该 URL 调用 HandlerMapping<br>将请求映射到处理器 HandlerExcutionChain</li><li>DispatchServlet 根据获得 Handler 选择一个合适的 HandlerAdapter 适配器处理；</li><li>Handler 对数据处理完成以后将返回一个 ModelAndView() 对象给 DisPatchServlet;</li><li>Handler 返回的 ModelAndView()只是一个逻辑视图并不是一个正式的视图，DispatcherSevlet 通过 ViewResolver 试图解析器将逻辑视图转化为真正的视图View;</li><li>DispatcherServle 通过model 解析出 ModelAndView() 中的参数进行解析最终展现出完整的 view 并返回给<br>客户端</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 的基本数据类型都有哪些，各占几个字节</title>
      <link href="/2018/11/09/Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%8C%E5%90%84%E5%8D%A0%E5%87%A0%E4%B8%AA%E5%AD%97%E8%8A%82/"/>
      <url>/2018/11/09/Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%8C%E5%90%84%E5%8D%A0%E5%87%A0%E4%B8%AA%E5%AD%97%E8%8A%82/</url>
      
        <content type="html"><![CDATA[<table>    <thead>        <tr>            <th>四类</th>            <th>八种</th>            <th>字节数</th>            <th>数据表示范围</th>        </tr>    </thead>    <tbody>        <tr>            <th rowspan="4">整型</th>            <td>byte</td>            <td>1</td>            <td>-128~127</td>        </tr>        <tr>            <td>short</td>            <td>2</td>            <td>-32768~32767</td>        </tr>        <tr>            <td>int</td>            <td>4</td>            <td>-2147483648～2147483647</td>        </tr>        <tr>            <td>long</td>            <td>8</td>            <td>-2^63^～2^63^-1</td>        </tr>        <tr>            <th rowspan="2">浮点型</th>            <td>float</td>            <td>4</td>            <td>-3.403E38～3.403E38</td>        </tr>        <tr>            <td>double </td>            <td>8</td>            <td>-1.798E308～1.798E308</td>        </tr>        <tr>            <th>字符型</th>            <td>char</td>            <td>2</td>            <td>表示一个字符，如('a'，'A'，'0'，'家')</td>        </tr>        <tr>            <th>布尔型</th>            <td>boolean</td>            <td>1</td>            <td>只有两个值true与false</td>        </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>final、finally、finalize 的区别</title>
      <link href="/2018/11/09/final%E3%80%81finally%E3%80%81finalize-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/11/09/final%E3%80%81finally%E3%80%81finalize-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<ol><li><strong>final</strong>：用于声明属性( 变量 )，方法和类。分别表示属性不可变( 不可二次赋值 )，方法不可覆盖，被其修饰的类不可继承</li><li><strong>finally</strong>：异常处理语句 try&#x2F;catch 结构的一部分，表示总是执行</li><li><strong>finalize</strong>：Object 类的一个方法，在垃圾回收器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等。该方法更像是一个对象生命周期的临终方法，当该方法被系统调用则代表该对象即将“死亡”，但是需要注意的是，我们主动行为上去调用该方法并不会导致该对象“死亡”，这是一个被动的方法（其实就是回调方法），不需要我们调用</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组的两种排序方式：选择排序和冒泡排序</title>
      <link href="/2018/11/09/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E5%92%8C%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
      <url>/2018/11/09/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E5%92%8C%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><blockquote><p>原理：在数组中选择出最小（大）的一个数，与第一个位置的数进行交换位置；</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int[] arr = &#123;5,8,3,9,10,2&#125;;</span><br><span class="line">System.out.println(&quot;排序前：&quot; + Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">// 使用两层循环遍历数组，将前一位数值与后面以为数值进行比较，</span><br><span class="line">// 如果前一位数值要大于后一位数值，则交换他们的位置。故而可以实现排序</span><br><span class="line">for(int m = 0; m&lt;arr.length-1; m++)&#123;</span><br><span class="line">for(int n = m+1; n&lt;arr.length; n++)&#123;</span><br><span class="line">if(arr[m] &gt; arr[n])&#123;</span><br><span class="line">// 用于临时储存需要交换位置的某一个值</span><br><span class="line">int temp = arr[m];</span><br><span class="line">// 交换位置</span><br><span class="line">arr[m] = arr[n];</span><br><span class="line">arr[n] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;排序后：&quot; + Arrays.toString(arr));</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int[] arr = &#123;5,8,3,9,10,2&#125;;</span><br><span class="line">System.out.println(&quot;排序前：&quot; + Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">// 使用两层循环遍历数组</span><br><span class="line">for(int m = 0; m&lt;arr.length-1; m++)&#123;</span><br><span class="line">// 第二层循环，将 arr 索引为 0~arr.length-1-m 中最大的一个数移动到 arr[arr.length-1-m] 的位置</span><br><span class="line">for(int n = 0; n&lt;arr.length-1-m; n++)&#123;</span><br><span class="line">if(arr[n] &gt; arr[n+1])&#123;</span><br><span class="line">// 用于临时储存需要交换位置的某一个值</span><br><span class="line">int temp = arr[n];</span><br><span class="line">// 交换位置</span><br><span class="line">arr[n] = arr[n+1];</span><br><span class="line">arr[n+1] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;排序后：&quot; + Arrays.toString(arr));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 数组 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何显示隐藏的Chrome扩展程序图标</title>
      <link href="/2018/11/08/%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E7%9A%84Chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87/"/>
      <url>/2018/11/08/%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E7%9A%84Chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h2 id="1-将扩展程序图标在-Chrome-菜单中隐藏"><a href="#1-将扩展程序图标在-Chrome-菜单中隐藏" class="headerlink" title="1. 将扩展程序图标在 Chrome 菜单中隐藏"></a>1. 将扩展程序图标在 Chrome 菜单中隐藏</h2><p>将鼠标移动到需要隐藏的扩展程序上面，点击鼠标右键，选择“在 Chrome 菜单中隐藏”即可进行隐藏<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181108/20181108152413697.png" alt="在这里插入图片描述"></p><h2 id="2-将隐藏的扩展程序图标在-Chrome-菜单中重新显示"><a href="#2-将隐藏的扩展程序图标在-Chrome-菜单中重新显示" class="headerlink" title="2. 将隐藏的扩展程序图标在 Chrome 菜单中重新显示"></a>2. 将隐藏的扩展程序图标在 Chrome 菜单中重新显示</h2><p>在浏览器地址栏最右边，待鼠标变成左右双向箭头图标的时候向左拖动，会发现隐藏的扩展程序出现了<br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20181108/20181108152531335.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Chrome </tag>
            
            <tag> 扩展程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora设置图片的相对路径（win系统）</title>
      <link href="/2018/09/30/Typora%E8%AE%BE%E7%BD%AE%E5%9B%BE%E7%89%87%E7%9A%84%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%EF%BC%88win%E7%B3%BB%E7%BB%9F%EF%BC%89/"/>
      <url>/2018/09/30/Typora%E8%AE%BE%E7%BD%AE%E5%9B%BE%E7%89%87%E7%9A%84%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%EF%BC%88win%E7%B3%BB%E7%BB%9F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora设置图片的相对路径（win系统）"><a href="#Typora设置图片的相对路径（win系统）" class="headerlink" title="Typora设置图片的相对路径（win系统）"></a>Typora设置图片的相对路径（win系统）</h1><h2 id="步骤：文件–-gt-偏好设置–-gt-图片插入"><a href="#步骤：文件–-gt-偏好设置–-gt-图片插入" class="headerlink" title="步骤：文件–&gt;偏好设置–&gt;图片插入"></a>步骤：文件–&gt;偏好设置–&gt;图片插入</h2><h2 id="结果：将插入的图片路径设置成相对路径（-x2F-assets目录）"><a href="#结果：将插入的图片路径设置成相对路径（-x2F-assets目录）" class="headerlink" title="结果：将插入的图片路径设置成相对路径（.&#x2F;assets目录）"></a>结果：将插入的图片路径设置成相对路径（.&#x2F;assets目录）</h2><p><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20180930/20180930151428623.png" alt="第一步"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20180930/20180930151509174.png" alt="第二步"><br><img src="//jsd.cdn.zzko.cn/gh/tiancixiong/BlogIMG@230521/blog/20180930/20180930151533395.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
